<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PayrollEngine.Client.Scripting</name>
    </assembly>
    <members>
        <member name="T:PayrollEngine.Client.Scripting.Cache.ResultCacheCycle">
            <summary>Result cache cycle</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Cache.ResultCacheCycle.PreviousCycle">
            <summary>Cache previous cycle results too</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Cache.ResultCacheCycle.CurrentCycle">
            <summary>Cache current cycle results only</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Cache.ConsolidatedResultCacheBase">
            <summary>Cache for collector results</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Cache.ConsolidatedResultCacheBase.CycleStartDate">
            <summary>The caching start date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Cache.ConsolidatedResultCacheBase.CacheCycle">
            <summary>The result cache cycle</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Cache.ConsolidatedResultCacheBase.JobStatus">
            <summary>The payrun job status</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Cache.ConsolidatedResultCacheBase.#ctor(System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus},PayrollEngine.Client.Scripting.Cache.ResultCacheCycle)">
            <summary>Cache constructor</summary>
            <param name="cycleStartDate">The cycle start date</param>
            <param name="jobStatus">The payrun job status</param>
            <param name="cacheCycle">The result cache cycle</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Cache.ConsolidatedResultCacheBase.GetCacheStartDate(PayrollEngine.Client.Scripting.Function.PayrunFunction)">
            <summary>Get start date of previous cycle</summary>
            <param name="function">The payrun function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Cache.ConsolidatedResultCacheBase.IsMatchingPeriodStarts(System.Collections.Generic.IList{System.DateTime},System.DateTime)">
            <summary>Check for matching result period</summary>
            <param name="periodStarts">The period starts</param>
            <param name="resultStart">The result start date</param>
            <returns>True on matching period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Cache.ConsolidatedResultCacheBase.GetConsolidatedPeriodStarts(PayrollEngine.Client.Scripting.Function.PayrunFunction,PayrollEngine.Client.Scripting.ConsolidatedResultQuery)">
            <summary>Get consolidated period starts from the query moment until the current period</summary>
            <param name="function">The payrun function</param>
            <param name="query">The consolidated result query</param>
            <returns>The period start dates</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Cache.ConsolidatedResultCacheBase.IsMatchingTags(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>Check for matching result tags</summary>
            <param name="queryTags">The query tags</param>
            <param name="resultTags">The result tags</param>
            <returns>True on matching tags</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Cache.CollectorConsolidatedResultCache">
            <summary>Cache for consolidated collector results</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Cache.CollectorConsolidatedResultCache.ConsolidatedResults">
            <summary>The consolidated results cache</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Cache.CollectorConsolidatedResultCache.#ctor(System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus},PayrollEngine.Client.Scripting.Cache.ResultCacheCycle)">
            <summary>Cache constructor</summary>
            <param name="cycleStartDate">The cycle start date</param>
            <param name="jobStatus">The payrun job status</param>
            <param name="cacheCycle">The result cache cycle</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Cache.CollectorConsolidatedResultCache.GetConsolidatedResults(PayrollEngine.Client.Scripting.Function.PayrunFunction,PayrollEngine.Client.Scripting.CollectorConsolidatedResultQuery,System.String)">
            <summary>Get the collector results</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Cache.CollectorConsolidatedResultCache.PrepareResultCache(PayrollEngine.Client.Scripting.Function.PayrunFunction,System.String)">
            <summary>Get the result cache from the employee runtime</summary>
            <param name="function"></param>
            <param name="runtimeKey">The employee runtime key, default is <see cref="T:PayrollEngine.Client.Scripting.Cache.CollectorConsolidatedResultCache"/></param>
            <returns>The collector result cache</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Cache.WageTypeConsolidatedResultCache">
            <summary>Cache for consolidated wage type results</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Cache.WageTypeConsolidatedResultCache.ConsolidatedResults">
            <summary>The consolidated results cache</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Cache.WageTypeConsolidatedResultCache.#ctor(System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus},PayrollEngine.Client.Scripting.Cache.ResultCacheCycle)">
            <summary>Cache constructor</summary>
            <param name="cycleStartDate">The cycle start date</param>
            <param name="jobStatus">The payrun job status</param>
            <param name="cacheCycle">The result cache cycle</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Cache.WageTypeConsolidatedResultCache.GetConsolidatedResults(PayrollEngine.Client.Scripting.Function.PayrunFunction,PayrollEngine.Client.Scripting.WageTypeConsolidatedResultQuery,System.String)">
            <summary>Get the collector results</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Cache.WageTypeConsolidatedResultCache.PrepareResultCache(PayrollEngine.Client.Scripting.Function.PayrunFunction,System.String)">
            <summary>Get the result cache from the employee runtime</summary>
            <param name="function"></param>
            <param name="runtimeKey">The employee runtime key, default is <see cref="T:PayrollEngine.Client.Scripting.Cache.WageTypeConsolidatedResultCache"/></param>
            <returns>The collector result cache</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PeriodCasePayrollValueDictionary">
            <summary>Dictionary of case value grouped by date period</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodCasePayrollValueDictionary.#ctor(System.Collections.Generic.IDictionary{PayrollEngine.Client.Scripting.DatePeriod,PayrollEngine.Client.Scripting.CasePayrollValue})">
            <inheritdoc />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CasePayrollValueDictionary">
            <summary>Dictionary of multiple case values grouped by case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValueDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,PayrollEngine.Client.Scripting.CasePayrollValue})">
            <inheritdoc />
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CasePayrollValueDictionary.HasAnyValue">
            <summary>Return true if any value is available</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CasePayrollValueDictionary.HasAllValues">
            <summary>Return true if all values are available</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.MultiPeriodCasePayrollValueDictionary">
            <summary>Dictionary of multiple case values grouped by period and case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.MultiPeriodCasePayrollValueDictionary.#ctor(System.Collections.Generic.IDictionary{PayrollEngine.Client.Scripting.DatePeriod,PayrollEngine.Client.Scripting.CasePayrollValueDictionary})">
            <inheritdoc />
        </member>
        <member name="P:PayrollEngine.Client.Scripting.MultiPeriodCasePayrollValueDictionary.Item(System.String)">
            <summary>Get period case value by case field</summary>
            <param name="caseFieldName">The case field name</param>
            <returns>Dictionary of case value grouped by date period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.MultiPeriodCasePayrollValueDictionary.GetCaseValue(System.String)">
            <summary>Get period case value by case field</summary>
            <param name="caseFieldName">The case field name</param>
            <returns>Dictionary of case value grouped by date period</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CasePayrollValue">
            <summary>Payroll value for a date period</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CasePayrollValue.CaseFieldName">
            <summary>The case field name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CasePayrollValue.PeriodValues">
            <summary>The period values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CasePayrollValue"/> class without values</summary>
            <param name="caseFieldName">Name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.#ctor(System.String,System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.PeriodValue})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CasePayrollValue"/> class</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="periodValues">The period values</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CasePayrollValue.CurrentValue">
            <summary>The value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CasePayrollValue.HasValue">
            <summary>Test if the payroll value is defined</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CasePayrollValue.HasPeriods">
            <summary>Test for period values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.TotalValue">
            <summary>Total payroll value, summary of period values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.ToKey">
            <summary>Get the case value key</summary>
            <returns>Case value key</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Implicit(PayrollEngine.Client.Scripting.CasePayrollValue)~System.String">
            <summary>Convert case value to string/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Implicit(PayrollEngine.Client.Scripting.CasePayrollValue)~System.Int32">
            <summary>Convert case value to int/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Implicit(PayrollEngine.Client.Scripting.CasePayrollValue)~System.Nullable{System.Int32}">
            <summary>Convert case value to nullable int</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Implicit(PayrollEngine.Client.Scripting.CasePayrollValue)~System.Decimal">
            <summary>Convert case value to decimal</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Implicit(PayrollEngine.Client.Scripting.CasePayrollValue)~System.Nullable{System.Decimal}">
            <summary>Convert case value to nullable decimal</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Implicit(PayrollEngine.Client.Scripting.CasePayrollValue)~System.DateTime">
            <summary>Convert case value to DateTime</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Implicit(PayrollEngine.Client.Scripting.CasePayrollValue)~System.Nullable{System.DateTime}">
            <summary>Convert case value to nullable DateTime</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Addition(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.CasePayrollValue)">
            <summary>Addition of two case values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Addition(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.PeriodValue)">
            <summary>Addition of a case value with a period value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Addition(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Addition of a case value with a payroll value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Subtraction(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.CasePayrollValue)">
            <summary>Subtraction of two case values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Subtraction(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.PeriodValue)">
            <summary>Subtraction of a case value with a period value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Subtraction(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Subtraction of a case value with a payroll value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Multiply(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.CasePayrollValue)">
            <summary>Multiplication of two case values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Multiply(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.PeriodValue)">
            <summary>Multiplication of a case value with a period value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Multiply(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Multiplication of a case value with a payroll value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Division(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.CasePayrollValue)">
            <summary>Division of two case values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Division(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.PeriodValue)">
            <summary>Division of a case value with a period value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Division(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Division of a case value with a payroll value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Modulus(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.CasePayrollValue)">
            <summary>Remainder of two case values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Modulus(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.PeriodValue)">
            <summary>Remainder of a case value with a period value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.op_Modulus(PayrollEngine.Client.Scripting.CasePayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Remainder of a case value with a payroll value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.AddToResult(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Addition of two payroll values (decimal, int, string)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection</summary>
            <returns>An enumerator that can be used to iterate through the collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CasePayrollValue.ToString">
            <summary>Returns a <see cref="T:System.String" /> that represents this instance</summary>
            <returns>A <see cref="T:System.String" /> that represents this instance</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseValue">
            <summary>National, company or employee case value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseValue.CaseFieldName">
            <summary>The case field name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseValue.Created">
            <summary>The created date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseValue.Start">
            <summary>The period start date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseValue.End">
            <summary>The period end date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseValue.Value">
            <summary>The case period value as JSON</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseValue.CancellationDate">
            <summary>Cancellation date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseValue.Tags">
            <summary>The tags</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseValue.Attributes">
            <summary>The attributes</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValue.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValue.#ctor(PayrollEngine.Client.Scripting.CaseValue)">
            <summary>Initializes a new instance from a copy</summary>
            <param name="copySource">The copy source</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValue.#ctor(System.String,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},PayrollEngine.Client.Scripting.PayrollValue,System.Nullable{System.DateTime},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Initializes a new instance</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="created">The created date</param>
            <param name="start">The start date</param>
            <param name="end">The end date</param>
            <param name="value">The value</param>
            <param name="cancellationDate">Cancellation date</param>
            <param name="tags">The tags</param>
            <param name="attributes">The attributes</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValue.Equals(PayrollEngine.Client.Scripting.CaseValue)">
            <summary>Compare two objects</summary>
            <param name="compare">The object to compare with this</param>
            <returns>True for objects with the same data</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValue.ToString">
            <summary>Returns a <see cref="T:System.String" /> that represents this instance</summary>
            <returns>A <see cref="T:System.String" /> that represents this instance</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.DecimalRounding">
            <summary>Decimal rounding types</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.DecimalRounding.None">
            <summary>No rounding</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.DecimalRounding.Integer">
            <summary>Round to nearest integer</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.DecimalRounding.Half">
            <summary>Round to half (e.g. 50 cents)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.DecimalRounding.Fifth">
            <summary>Round to one-fifth (e.g. 20 cents)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.DecimalRounding.Tenth">
            <summary>Round to one-tenth (e.g. 10 cents)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.DecimalRounding.Twentieth">
            <summary>Round to one-twentieth (e.g. 5 cents)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.DecimalRounding.Fiftieth">
            <summary>Round to one-fiftieth (e.g. 2 cents)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.DecimalRounding.Hundredth">
            <summary>Round to one-hundredth (e.g. 1 cent)</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ObjectStatus">
            <summary>The object status</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ObjectStatus.Active">
            <summary>Object is active</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ObjectStatus.Inactive">
            <summary>Object is inactive</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Month">
            <summary>The year months</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Month.January">
            <summary>January</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Month.February">
            <summary>February</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Month.March">
            <summary>March</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Month.April">
            <summary>April</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Month.May">
            <summary>May</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Month.June">
            <summary>June</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Month.July">
            <summary>July</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Month.August">
            <summary>August</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Month.September">
            <summary>September</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Month.October">
            <summary>October</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Month.November">
            <summary>November</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Month.December">
            <summary>December</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.LogLevel">
            <summary>Specifies the meaning and relative importance of a log event</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.LogLevel.Verbose">
            <summary>Anything and everything you might want to know about a running block of code</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.LogLevel.Debug">
            <summary>Internal system events that aren't necessarily observable from the outside</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.LogLevel.Information">
            <summary>The lifeblood of operational intelligence - things happen</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.LogLevel.Warning">
            <summary>Service is degraded or endangered</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.LogLevel.Error">
            <summary>Functionality is unavailable, invariants are broken or data is lost</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.LogLevel.Fatal">
            <summary>If you have a pager, it goes off when one of these occurs/// </summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseType">
            <summary>The type of a case</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.CaseType.Global">
            <summary>Global case</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.CaseType.National">
            <summary>National case</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.CaseType.Company">
            <summary>Company case</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.CaseType.Employee">
            <summary>Employee case</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ValueType">
            <summary>The payroll value types for cases</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ValueType.String">
            <summary>String (base type string)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ValueType.Boolean">
            <summary>Boolean (base type boolean)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ValueType.Integer">
            <summary>Integer (base type numeric)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ValueType.NumericBoolean">
            <summary>Numeric boolean, any non-zero value means true (base type numeric)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ValueType.Decimal">
            <summary>Decimal (base type numeric)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ValueType.DateTime">
            <summary>Date and time (base type string)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ValueType.None">
            <summary>No value type (base type null)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ValueType.Date">
            <summary>Date (base type string)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ValueType.Weekday">
            <summary>Day of week (base type integer 0..6)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ValueType.Month">
            <summary>Month (base type integer 0..11)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ValueType.Money">
            <summary>Money (base type decimal)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ValueType.Percent">
            <summary>Percentage (base type decimal)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.ValueType.WebResource">
            <summary>Web Resource e.g. Url (base type string)</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunExecutionPhase">
            <summary>The payrun execution stage</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.PayrunExecutionPhase.Setup">
            <summary>Job setup execution phase</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.PayrunExecutionPhase.Reevaluation">
            <summary>Job reevaluation execution phase</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunJobStatus">
            <summary>The payrun job type</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.PayrunJobStatus.Draft">
            <summary>Draft Legal results (default)</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.PayrunJobStatus.Release">
            <summary>Legal results are released for processing</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.PayrunJobStatus.Process">
            <summary>Legal results are processed</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.PayrunJobStatus.Complete">
            <summary>Legal results has been processed successfully</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.PayrunJobStatus.Forecast">
            <summary>Forecast results</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.PayrunJobStatus.Abort">
            <summary>Unreleased Job has been aborted</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.PayrunJobStatus.Cancel">
            <summary>Released Job has been canceled</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.PayrunJobStatus.Working">
            <summary>Working status, including draft, release and process</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.PayrunJobStatus.Legal">
            <summary>Legal status, including release, process and complete</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.PayrunJobStatus.Final">
            <summary>Final status, including complete, forecast, abort and cancel</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.DataMergeSchemaChange">
            <summary>The data merge schema change</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.DataMergeSchemaChange.Add">
            <summary>Adds the necessary columns to complete the schema</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.DataMergeSchemaChange.Ignore">
            <summary>Ignores the extra columns</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.DataMergeSchemaChange.Error">
            <summary>An <see cref="T:System.InvalidOperationException"/> is generated if the specified column mapping is missing.</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ScriptException">
            <summary>Payroll script exception</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ScriptException.#ctor(System.String)">
            <summary>Initializes a new instance of the exception</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ScriptException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the exception</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ScriptDictionary`2">
            <summary>Script value dictionary</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ScriptDictionary`2.#ctor(System.Func{`0,`1})">
            <summary>New read-only dictionary</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ScriptDictionary`2.#ctor(System.Func{`0,`1},System.Action{`0,`1})">
            <summary>New dictionary</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ScriptDictionary`2.Item(`0)">
            <summary>Query value by index</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ActionProviderAttribute">
            <summary>Action provider type</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ActionProviderAttribute.Type">
            <summary>The extension function type</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ActionProviderAttribute.Namespace">
            <summary>The extension namespace</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ActionProviderAttribute.#ctor(System.String,System.Type)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ActionProviderAttribute"/> class</summary>
            <param name="namespace">The extension namespace</param>
            <param name="type">The extension function type</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ActionParameterAttribute">
            <summary>Attribute for action parameter</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ActionParameterAttribute.Name">
            <summary>The action parameter name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ActionParameterAttribute.Description">
            <summary>The action description</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ActionParameterAttribute.ValueTypes">
            <summary>The action parameter types</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ActionParameterAttribute.ValueSources">
            <summary>The action parameter source types</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ActionParameterAttribute.ValueReferences">
            <summary>The action parameter reference types</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ActionParameterAttribute.#ctor(System.String,System.String,System.String[],System.String[],System.String[])">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ActionAttribute"/> class</summary>
            <param name="name">The action signature</param>
            <param name="description">The action description</param>
            <param name="valueTypes">The action parameter types</param>
            <param name="valueSources">The action parameter source types</param>
            <param name="valueReferences">The action parameter reference types</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ActionIssueAttribute">
            <summary>Attribute for action issue</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ActionIssueAttribute.Name">
            <summary>The action name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ActionIssueAttribute.Message">
            <summary>The issue message</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ActionIssueAttribute.ParameterCount">
            <summary>The message parameter count</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ActionIssueAttribute.#ctor(System.String,System.String,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ActionIssueAttribute"/> class</summary>
            <param name="name">The action name</param>
            <param name="message">The issue message</param>
            <param name="parameterCount">The message parameter count</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ActionAttribute">
            <summary>Attribute for action</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ActionAttribute.Name">
            <summary>The action name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ActionAttribute.Description">
            <summary>The action description</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ActionAttribute.Categories">
            <summary>The action categories</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ActionAttribute.#ctor(System.String,System.String,System.String[])">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ActionAttribute"/> class</summary>
            <param name="name">The action name</param>
            <param name="description">The action description</param>
            <param name="categories">The action categories</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseAvailableActionAttribute">
            <summary>Attribute for case available action</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseAvailableActionAttribute.#ctor(System.String,System.String,System.String[])">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseAvailableActionAttribute"/> class</summary>
            <param name="name">The action name</param>
            <param name="description">The action description</param>
            <param name="categories">The action categories</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseChangeActionAttribute">
            <summary>Attribute for case change action</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseChangeActionAttribute.#ctor(System.String,System.String,System.String[])">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseBuildActionAttribute"/> class</summary>
            <param name="name">The action name</param>
            <param name="description">The action description</param>
            <param name="categories">The action categories</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseBuildActionAttribute">
            <summary>Attribute for case build action</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseBuildActionAttribute.#ctor(System.String,System.String,System.String[])">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseBuildActionAttribute"/> class</summary>
            <param name="name">The action name</param>
            <param name="description">The action description</param>
            <param name="categories">The action categories</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseValidateActionAttribute">
            <summary>Attribute for case validate action</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValidateActionAttribute.#ctor(System.String,System.String,System.String[])">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseValidateActionAttribute"/> class</summary>
            <param name="name">The action name</param>
            <param name="description">The action description</param>
            <param name="categories">The action categories</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseRelationActionAttribute">
            <summary>Attribute for case change action</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseRelationActionAttribute.#ctor(System.String,System.String,System.String[])">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseRelationActionAttribute"/> class</summary>
            <param name="name">The action name</param>
            <param name="description">The action description</param>
            <param name="categories">The action categories</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseRelationBuildActionAttribute">
            <summary>Attribute for case relation build action</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseRelationBuildActionAttribute.#ctor(System.String,System.String,System.String[])">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseRelationBuildActionAttribute"/> class</summary>
            <param name="name">The action name</param>
            <param name="description">The action description</param>
            <param name="categories">The action categories</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseRelationValidateActionAttribute">
            <summary>Attribute for case validate action</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseRelationValidateActionAttribute.#ctor(System.String,System.String,System.String[])">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseRelationValidateActionAttribute"/> class</summary>
            <param name="name">The action name</param>
            <param name="description">The action description</param>
            <param name="categories">The action categories</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Date">
            <summary>Date specifications</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Date.FirstMonthOfCalendarYear">
            <summary>First month in year</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Date.FirstDayOfMonth">
            <summary>First day in month</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Date.MonthsInYear">
            <summary>Number of months in a year</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Date.LastMonthOfCalendarYear">
            <summary>Last month in year</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Date.DaysInWeek">
            <summary>Number of days in a week</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Date.MinValue">
            <summary>Represents the smallest possible value of a time instant</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Date.MaxValue">
            <summary>Represents the largest possible value of a time instant</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Date.Now">
            <summary>Gets a time instant that is set to the current date and time</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Date.Today">
            <summary>Gets a time instant that is set to the current day</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Date.Tomorrow">
            <summary>Gets a time instant that is set to the next day</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Date.Yesterday">
            <summary>Gets a time instant that is set to the previous day</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Date.YearStart(System.Int32)">
            <summary>Get the year start date in UTC</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Date.YearEnd(System.Int32)">
            <summary>Get the year end date in UTC</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Date.MonthStart(System.Int32,System.Int32)">
            <summary>Get the month start date in UTC</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Date.MonthEnd(System.Int32,System.Int32)">
            <summary>Get the month end date in UTC</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Date.DayStart(System.Int32,System.Int32,System.Int32)">
            <summary>Get the day start date and time in UTC</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Date.DayEnd(System.Int32,System.Int32,System.Int32)">
            <summary>Get the day end date and time in UTC</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Date.Min(System.DateTime,System.DateTime)">
            <summary>Get the minimum date</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Date.Max(System.DateTime,System.DateTime)">
            <summary>Get the maximum date</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Date.Min(System.TimeSpan,System.TimeSpan)">
            <summary>Get the minimum timespan</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Date.Max(System.TimeSpan,System.TimeSpan)">
            <summary>Get the maximum timespan</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Date.Parse(System.String)">
            <summary>Parse date time string</summary>
            <param name="dateValue">The date value</param>
            <returns>Valid date or null</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.DatePeriod">
            <summary>An immutable date period between the start and end date</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriod.#ctor">
            <summary>Create a full period</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriod.#ctor(System.DateTime,System.DateTime)">
            <summary>Create a period from start to end</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriod.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>Create a period from conditional start to conditional end</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.Start">
            <summary>The period start</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.HasStart">
            <summary>Check for start</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.End">
            <summary>The period end</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.HasEnd">
            <summary>Check for end</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.IsOpen">
            <summary>Test for open period (no start or no end)</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.IsAnytime">
            <summary>Test for anytime period (without start and end)</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.IsMoment">
            <summary>Test if start and end are equal</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.IsUtc">
            <summary>Test if start and end are UTC</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.Duration">
            <summary>The period duration, only for closed period</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.IsWithinYear">
            <summary>Test if the period is within a year</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.IsWithinMonth">
            <summary>Test if the period is within a month</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.IsWithinDay">
            <summary>Test if the period is within a day</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.IsWithinHour">
            <summary>Test if the period is within a hour</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.TotalDays">
            <summary>Gets the value of the <see cref="T:System.TimeSpan" /> between start and end expressed in whole and fractional days</summary>
            <returns>The total number of days represented by this instance</returns>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.TotalHours">
            <summary>Gets the value of the <see cref="T:System.TimeSpan" /> between start and end expressed in whole and fractional hours</summary>
            <returns>The total number of hours represented by this instance</returns>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.DatePeriod.TotalMinutes">
            <summary>Gets the value of the <see cref="T:System.TimeSpan" /> between start and end expressed in whole and fractional minutes</summary>
            <returns>The minutes number of hours represented by this instance</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriod.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance</summary>
            <param name="source">The object to compare with the current object</param>
            <returns>True if the specified <see cref="T:System.Object" /> is equal to this instance</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriod.GetHashCode">
            <summary>Returns a hash code for this instance</summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriod.op_Equality(PayrollEngine.Client.Scripting.DatePeriod,PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Compare two date periods for equal values</summary>
            <param name="left">The left period to compare</param>
            <param name="right">The right period to compare</param>
            <returns>True if the periods are equal</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriod.op_Inequality(PayrollEngine.Client.Scripting.DatePeriod,PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Compare two date periods for different values</summary>
            <param name="left">The left period to compare</param>
            <param name="right">The right period to compare</param>
            <returns>True if the periods are different</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriod.ToString">
            <summary>Returns a <see cref="T:System.String" /> that represents this instance</summary>
            <returns>A <see cref="T:System.String" /> that represents this instance</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.TypeExtensions">
            <summary><see cref="T:System.Type">Type</see> extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.TypeExtensions.IsNumericType(System.Type)">
            <summary>
            Determines whether the type is numeric.
            See https://stackoverflow.com/a/1750024
            </summary>
            <param name="type">The type</param>
            <returns>True for numeric types</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.NullableExtensions">
            <summary><see cref="T:System.Nullable">Type</see> extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.NullableExtensions.Safe(System.Nullable{System.Boolean},System.Boolean)">
            <summary>Safe nullable boolean cast</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.NullableExtensions.Safe(System.Nullable{System.Int32},System.Int32)">
            <summary>Safe nullable int cast</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.NullableExtensions.Safe(System.Nullable{System.Decimal},System.Decimal)">
            <summary>Safe nullable decimal cast</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.NullableExtensions.Safe(System.Nullable{System.DateTime},System.DateTime)">
            <summary>Safe nullable DateTime cast</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.StringExtensions">
            <summary><see cref="T:System.String">String</see> extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.GetLocalization(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>Gets the localized text</summary>
            <param name="culture">The culture name</param>
            <param name="localizations">The localizations</param>
            <param name="defaultValue">The default value</param>
            <returns>The localized text, the default value in case of absent language</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.EnsureStart(System.String,System.String)">
            <summary>Ensures a start prefix</summary>
            <param name="source">The source value</param>
            <param name="prefix">The prefix to add</param>
            <returns>The string with prefix</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.EnsureStart(System.String,System.String,System.StringComparison)">
            <summary>Ensures a start prefix</summary>
            <param name="source">The source value</param>
            <param name="prefix">The prefix to add</param>
            <param name="comparison">The comparison culture</param>
            <returns>The string with prefix</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.EnsureEnd(System.String,System.String)">
            <summary>Ensures an ending suffix</summary>
            <param name="source">The source value</param>
            <param name="suffix">The suffix to add</param>
            <returns>The string with suffix</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.EnsureEnd(System.String,System.String,System.StringComparison)">
            <summary>Ensures an ending suffix</summary>
            <param name="source">The source value</param>
            <param name="suffix">The suffix to add</param>
            <param name="comparison">The comparison culture</param>
            <returns>The string with suffix</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.RemoveFromStart(System.String,System.String)">
            <summary>Remove prefix from string</summary>
            <param name="source">The source value</param>
            <param name="prefix">The prefix to remove</param>
            <returns>The string without suffix</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.RemoveFromStart(System.String,System.String,System.StringComparison)">
            <summary>Remove prefix from string</summary>
            <param name="source">The source value</param>
            <param name="prefix">The prefix to remove</param>
            <param name="comparison">The comparison culture</param>
            <returns>The string without the starting prefix</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.RemoveFromEnd(System.String,System.String)">
            <summary>Remove suffix from string</summary>
            <param name="source">The source value</param>
            <param name="suffix">The suffix to remove</param>
            <returns>The string without the ending suffix</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.RemoveFromEnd(System.String,System.String,System.StringComparison)">
            <summary>Remove suffix from string</summary>
            <param name="source">The source value</param>
            <param name="suffix">The suffix to remove</param>
            <param name="comparison">The comparison culture</param>
            <returns>The string without the ending suffix</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.RemoveSpecialCharacters(System.String)">
            <summary>Remove all special characters</summary>
            <param name="source">The source value</param>
            <returns>The source value without special characters</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.ContainsCsvToken(System.String,System.String,System.Char)">
            <summary>Test for a CSV token</summary>
            <param name="source">The source value</param>
            <param name="token">The token to search</param>
            <param name="separator">The token separator</param>
            <returns>True if the token is available</returns>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.StringExtensions.TextAttributePrefix">
            <summary>Prefix for text attribute fields</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.StringExtensions.DateAttributePrefix">
            <summary>Prefix for date attribute fields</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.StringExtensions.NumericAttributePrefix">
            <summary>Prefix for numeric attribute fields</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.ToTextAttributeField(System.String)">
            <summary>To text attribute field name</summary>
            <param name="attribute">The attribute</param>
            <returns>String starting uppercase</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.ToDateAttributeField(System.String)">
            <summary>To date attribute field name</summary>
            <param name="attribute">The attribute</param>
            <returns>String starting uppercase</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.ToNumericAttributeField(System.String)">
            <summary>To numeric attribute field name</summary>
            <param name="attribute">The attribute</param>
            <returns>String starting uppercase</returns>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.StringExtensions.RelatedCaseSeparator">
            <summary>The related case separator</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.StringExtensions.CaseFieldSlotSeparator">
            <summary>The case field slot separator</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.ToRelatedCaseNames(System.String)">
            <summary>Extract related cases from a case relation string, format is 'sourceCaseName:targetCaseName'</summary>
            <param name="caseRelation">The case relation</param>
            <returns>The related cases a tuple: item1=source case, item2=target case</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.ToCaseRelationKey(System.String,System.String)">
            <summary>Extract related cases from a case relation string, format is 'sourceCaseName:targetCaseName'</summary>
            <param name="sourceCaseName">The source case name</param>
            <param name="targetCaseName">The target case name</param>
            <returns>The related cases a tuple: item1=source case, item2=target case</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.ConvertJson``1(System.String,``0)">
            <summary>Convert string to JSON value</summary>
            <param name="json">The JSON string</param>
            <param name="defaultValue">The default value</param>
            <returns>The converted value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.StringExtensions.ObjectValueJson``1(System.String,System.String,``0)">
            <summary>Convert JSON value</summary>
            <param name="json">The JSON string containing an object</param>
            <param name="objectKey">The object key</param>
            <param name="defaultValue">The default value</param>
            <returns>The converted value</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.EnumerableExtensions">
            <summary><see cref="T:System.Collections.Generic.IEnumerable`1">IEnumerable</see> extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.EnumerableExtensions.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>Test if all items are included</summary>
            <param name="source">The source collection</param>
            <param name="test">The collection with the test items</param>
            <returns>True if all items of the test items are available in the source</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.EnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>Test if any item is included</summary>
            <param name="source">The source collection</param>
            <param name="test">The collection with the test items</param>
            <returns>True if any item of the test items is available in the source</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.IntExtensions">
            <summary><see cref="T:System.Int32">Integer</see> extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.IntExtensions.IsWithin(System.Int32,System.Int32,System.Int32)">
            <summary>Determines whether a value is within a range</summary>
            <param name="value">The value to test</param>
            <param name="min">The minimum value</param>
            <param name="max">The maximum value</param>
            <returns>True if the specified value is within minimum and maximum</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.IntExtensions.IsWithin(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>Determines whether a value is within a range</summary>
            <param name="value">The value to test</param>
            <param name="min">The minimum value</param>
            <param name="max">The maximum value</param>
            <returns>True if the specified value is within minimum and maximum</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.DecimalExtensions">
            <summary><see cref="T:System.Decimal">Decimal</see> extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DecimalExtensions.IsWithin(System.Decimal,System.Decimal,System.Decimal)">
            <summary>Determines whether a value is within a range</summary>
            <param name="value">The value to test</param>
            <param name="min">The minimum value</param>
            <param name="max">The maximum value</param>
            <returns>True if the specified value is within minimum and maximum</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DecimalExtensions.IsWithin(System.Nullable{System.Decimal},System.Decimal,System.Decimal)">
            <summary>Determines whether a value is within a range</summary>
            <param name="value">The value to test</param>
            <param name="min">The minimum value</param>
            <param name="max">The maximum value</param>
            <returns>True if the specified value is within minimum and maximum</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DecimalExtensions.Truncate(System.Decimal,System.Int32)">
            <summary>Returns the integral digits of the specified decimal, using a step size</summary>
            <param name="value">The decimal number to truncate</param>
            <param name="stepSize">The step size used to truncate</param>
            <returns>The result of d rounded toward zero, to the nearest whole number within the step size</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DecimalExtensions.RoundUp(System.Decimal,System.Decimal)">
            <summary>Rounds a decimal value up</summary>
            <param name="value">The decimal value to round</param>
            <param name="stepSize">The round step size</param>
            <returns>The up-rounded value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DecimalExtensions.RoundDown(System.Decimal,System.Decimal)">
            <summary>Rounds a decimal value down</summary>
            <param name="value">The decimal value to round</param>
            <param name="stepSize">The round step size</param>
            <returns>The rounded value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DecimalExtensions.Round(System.Decimal,PayrollEngine.Client.Scripting.DecimalRounding)">
            <summary>Rounds a decimal value wit predefined rounding type</summary>
            <param name="value">The decimal value to round</param>
            <param name="rounding">The rounding type</param>
            <returns>The rounded value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DecimalExtensions.RoundHalf(System.Decimal)">
            <summary>Rounds a decimal value to a one-half (e.g. 50 cents)</summary>
            <param name="value">The decimal value to round</param>
            <returns>The rounded value to one-half</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DecimalExtensions.RoundFifth(System.Decimal)">
            <summary>Rounds a decimal value to a one-fifth (e.g. 20 cents)</summary>
            <param name="value">The decimal value to round</param>
            <returns>The rounded value to one-fifth</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DecimalExtensions.RoundTenth(System.Decimal)">
            <summary>Rounds a decimal value to a one-tenth (e.g. 10 cents)</summary>
            <param name="value">The decimal value to round</param>
            <returns>The rounded value to one-tenth</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DecimalExtensions.RoundTwentieth(System.Decimal)">
            <summary>Rounds a decimal value to a one-twentieth (e.g. 5 cents)</summary>
            <param name="value">The decimal value to round</param>
            <returns>The rounded value to one-twentieth</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DecimalExtensions.RoundFiftieth(System.Decimal)">
            <summary>Rounds a decimal value to a one-fiftieth (e.g. 2 cents)</summary>
            <param name="value">The decimal value to round</param>
            <returns>The rounded value to one-fiftieth</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DecimalExtensions.RoundHundredth(System.Decimal)">
            <summary>Rounds a decimal value to a one-hundredth (e.g. 1 cents)</summary>
            <param name="value">The decimal value to round</param>
            <returns>The rounded value to one-hundredth</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DecimalExtensions.RoundPartOfOne(System.Decimal,System.Int32)">
            <summary>Rounds a decimal value to a one-tenth</summary>
            <param name="value">The decimal value to round</param>
            <param name="divisor">The divisor factor</param>
            <returns>The rounded value to one-tenth</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.DateTimeExtensions">
            <summary><see cref="T:System.DateTime">DateTime</see> extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.Subtract(System.DateTime,System.TimeSpan)">
            <summary>Returns the DateTime resulting from subtracting
            a time span to this DateTime</summary>
            <param name="moment">The moment to subtract from</param>
            <param name="timeSpan">The time span to subtract</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.SubtractTicks(System.DateTime,System.Int64)">
            <summary>Returns the DateTime resulting from subtracting
            a number of ticks to this DateTime</summary>
            <param name="moment">The moment to subtract from</param>
            <param name="ticks">The ticks to subtract</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.SubtractSeconds(System.DateTime,System.Double)">
            <summary>Returns the DateTime resulting from subtracting
            a fractional number of seconds to this DateTime</summary>
            <param name="moment">The moment to subtract from</param>
            <param name="seconds">The seconds to subtract</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.SubtractMinutes(System.DateTime,System.Double)">
            <summary>Returns the DateTime resulting from subtracting
            a fractional number of minutes to this DateTime</summary>
            <param name="moment">The moment to subtract from</param>
            <param name="minutes">The minutes to subtract</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.SubtractHours(System.DateTime,System.Double)">
            <summary>Returns the DateTime resulting from subtracting
            a fractional number of hours to this DateTime</summary>
            <param name="moment">The moment to subtract from</param>
            <param name="hours">The hours to subtract</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.SubtractDays(System.DateTime,System.Double)">
            <summary>Returns the DateTime resulting from subtracting
            a fractional number of days to this DateTime</summary>
            <param name="moment">The moment to subtract from</param>
            <param name="days">The days to subtract</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.SubtractMonths(System.DateTime,System.Int32)">
            <summary>Returns the DateTime resulting from subtracting
            a number of months to this DateTime</summary>
            <param name="moment">The moment to subtract from</param>
            <param name="months">The months to subtract</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.SubtractYears(System.DateTime,System.Int32)">
            <summary>Returns the DateTime resulting from subtracting
            a number of years to this DateTime</summary>
            <param name="moment">The moment to subtract from</param>
            <param name="years">The years to subtract</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.ToCompactString(System.DateTime)">
            <summary>Format a compact date (removes empty time parts)</summary>
            <param name="moment">The period start date</param>
            <returns>The formatted period start date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.ToPeriodStartString(System.DateTime)">
            <summary>Format a period start date (removes empty time parts), using the current culture</summary>
            <param name="start">The period start date</param>
            <returns>The formatted period start date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.ToPeriodEndString(System.DateTime)">
            <summary>Format a period end date (removed empty time parts, and round last moment values), using the current culture</summary>
            <param name="end">The period end date</param>
            <returns>The formatted period end date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsUtc(System.DateTime)">
            <summary>Test if the date is in UTC</summary>
            <param name="dateTime">The source date time</param>
            <returns>True, date time is UTC</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.ToUtc(System.DateTime)">
            <summary>Convert a date into the UTC value. Dates (without time part) are used without time adaption</summary>
            <returns>The UTC date time</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.ToUtcTime(System.DateTime)">
            <summary>Convert a date into the UTC valueDates (without time part) are used without time adaption</summary>
            <param name="moment">The source date time</param>
            <returns>The UTC date time</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.ToUtcString(System.DateTime)">
            <summary>Convert a date into the UTC string value, using the current culture</summary>
            <param name="dateTime">The date time</param>
            <returns>The UTC date time string</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.ToUtcString(System.DateTime,System.IFormatProvider)">
            <summary>Convert a date into the UTC string value</summary>
            <param name="dateTime">The date time</param>
            <param name="provider">The format provider</param>
            <returns>The UTC date time string</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.RoundTickToHour(System.DateTime)">
            <summary>Round to hour, if it is the last tick from a hour</summary>
            <param name="dateTime">The source date time</param>
            <returns>Date of the next hour if the input is on the last tick on a hour, else the original value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.YearStart(System.DateTime)">
            <summary>Get the year start date in UTC</summary>
            <param name="yearMoment">The year moment</param>
            <returns>First moment of the year</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.YearEnd(System.DateTime)">
            <summary>Get the year end date in UTC</summary>
            <param name="yearMoment">The year moment</param>
            <returns>Last moment of the year</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.MonthStart(System.DateTime)">
            <summary>Get the month start date in UTC</summary>
            <param name="monthMoment">The month moment</param>
            <returns>First moment of the month</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.MonthEnd(System.DateTime)">
            <summary>Get the month end date in UTC</summary>
            <param name="monthMoment">The month moment</param>
            <returns>Last moment of the month</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.DayStart(System.DateTime)">
            <summary>Get the day start date and time in UTC</summary>
            <param name="dayMoment">The day moment</param>
            <returns>First moment of the day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.DayEnd(System.DateTime)">
            <summary>Get the day end date and time in UTC</summary>
            <param name="dayMoment">The day moment</param>
            <returns>Last moment of the day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsWithin(System.DateTime,System.DateTime,System.DateTime)">
            <summary>Test if a specific time moment is within a period</summary>
            <param name="test">The moment to test</param>
            <param name="start">The period start</param>
            <param name="end">The period end</param>
            <returns>True if the test is within start and end</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsWithin(System.DateTime,PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if a specific time moment is within a period</summary>
            <param name="test">The moment to test</param>
            <param name="period">The period </param>
            <returns>True if the test is within the period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsBefore(System.DateTime,PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if a specific time moment is before a period</summary>
            <param name="test">The moment to test</param>
            <param name="period">The period to test</param>
            <returns>True, if the moment is before the period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsAfter(System.DateTime,PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if a specific time moment is after a period</summary>
            <param name="test">The moment to test</param>
            <param name="period">The period to test</param>
            <returns>True, if the moment is after the period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsFirstDay(System.DateTime,PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if a specific time moment is the first day of a period</summary>
            <param name="test">The moment to test</param>
            <param name="period">The period </param>
            <returns>True if the test day is the first period day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsLastDay(System.DateTime,PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if a specific time moment is the last day of a period</summary>
            <param name="test">The moment to test</param>
            <param name="period">The period </param>
            <returns>True if the test day is the last period day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsFirstDayOfYear(System.DateTime)">
            <summary>Test if a specific day is the first day of the year</summary>
            <param name="test">The moment to test</param>
            <returns>True if the test day is the first day in the year</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsLastDayOfYear(System.DateTime)">
            <summary>Test if a specific time moment is the last day of the year</summary>
            <param name="test">The moment to test</param>
            <returns>True if the test day is the last day in the year</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.DaysInMonth(System.DateTime)">
            <summary>Returns the number of days in the month of a specific date</summary>
            <param name="date">The date</param>
            <returns>The number of days in for the specified <paramref name="date" /></returns>
            <returns>Last moment of the year</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.Month(System.DateTime)">
            <summary>Returns the date month as enumeration</summary>
            <param name="date">The date</param>
            <returns>The date month</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsFirstDayOfMonth(System.DateTime)">
            <summary>Test if a specific day is the first day of the month</summary>
            <param name="test">The moment to test</param>
            <returns>True if the test day is the first day of the month</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsFirstDayOfMonth(System.DateTime,PayrollEngine.Client.Scripting.Month)">
            <summary>Test if a specific day is the first day of the month</summary>
            <param name="test">The moment to test</param>
            <param name="month">The month to test</param>
            <returns>True if the test day is the first day of the month</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsLastDayOfMonth(System.DateTime,System.Boolean)">
            <summary>Test if a specific day is the last day of the month</summary>
            <param name="test">The moment to test</param>
            <param name="ignoreLeapYear">Ignore the leap year day</param>
            <returns>True if the test day is the last day of the month</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsLastDayOfMonth(System.DateTime,PayrollEngine.Client.Scripting.Month,System.Boolean)">
            <summary>Test if a specific day is the last day of the month</summary>
            <param name="test">The moment to test</param>
            <param name="month">The month to test</param>
            <param name="ignoreLeapYear">Ignore the leap year day</param>
            <returns>True if the test day is the last day of the month</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.GetIso8601WeekOfYear(System.DateTime)">
            <summary>Get ISO 8601 week number of the year</summary>
            <param name="test">The moment to test</param>
            <returns>ISO 8601 week number</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.GetIso8601WeekOfYear(System.DateTime,System.Globalization.CultureInfo)">
            <summary>Get ISO 8601 week number of the year</summary>
            <param name="test">The moment to test</param>
            <param name="culture">The calendar culture</param>
            <returns>ISO 8601 week number</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.FirstDayOfWeek(System.Int32,System.Int32)">
            <summary>Get week start date by ISO 8601 week number of the year</summary>
            <param name="year">The year</param>
            <param name="weekOfYear">The ISO 8601 week number of the year</param>
            <returns>First day of the week</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.FirstDayOfWeek(System.Int32,System.Int32,System.Globalization.CultureInfo)">
            <summary>Get week start date by ISO 8601 week number of the year</summary>
            <param name="year">The year</param>
            <param name="weekOfYear">The ISO 8601 week number of the year</param>
            <param name="culture">The calendar culture</param>
            <returns>First day of the week</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.LastDayOfWeek(System.Int32,System.Int32)">
            <summary>Get week end date by ISO 8601 week number of the year</summary>
            <param name="year">The year</param>
            <param name="weekOfYear">The ISO 8601 week number of the year</param>
            <returns>Last day of the week</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.LastDayOfWeek(System.Int32,System.Int32,System.Globalization.CultureInfo)">
            <summary>Get week end date by ISO 8601 week number of the year</summary>
            <param name="year">The year</param>
            <param name="weekOfYear">The ISO 8601 week number of the year</param>
            <param name="culture">The calendar culture</param>
            <returns>Last day of the week</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.GetPreviousWeekDay(System.DateTime,System.DayOfWeek)">
            <summary>Get the previous matching day</summary>
            <param name="date">The date to start</param>
            <param name="dayOfWeek">Target day of week</param>
            <returns>The previous matching day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.GetNextWeekDay(System.DateTime,System.DayOfWeek)">
            <summary>Get the next matching day</summary>
            <param name="date">The date to start</param>
            <param name="dayOfWeek">Target day of week</param>
            <returns>The next matching day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsDayOfWeek(System.DateTime,System.Collections.Generic.IEnumerable{System.DayOfWeek})">
            <summary>Test for working day</summary>
            <param name="date">The date to test</param>
            <param name="days">Available days</param>
            <returns>True if date is a working day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsMidnight(System.DateTime)">
            <summary>
            Test if the date is midnight
            </summary>
            <param name="moment">The moment to test</param>
            <returns>True in case the moment is date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsSameYear(System.DateTime,System.DateTime)">
            <summary>Test if two dates are in the same year</summary>
            <param name="date">The first date to test</param>
            <param name="compare">The second date to test</param>
            <returns>Return true if year and mont of both dates is equal</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsSameMonth(System.DateTime,System.DateTime)">
            <summary>Test if two dates are in the same year and month</summary>
            <param name="date">The first date to test</param>
            <param name="compare">The second date to test</param>
            <returns>Return true if year and mont of both dates is equal</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsSameDay(System.DateTime,System.DateTime)">
            <summary>Test if two dates are in the same day</summary>
            <param name="date">The first date to test</param>
            <param name="compare">The second date to test</param>
            <returns>Return true if both dates are in the same day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsSameHour(System.DateTime,System.DateTime)">
            <summary>Test if two dates are in the same hour</summary>
            <param name="date">The first date to test</param>
            <param name="compare">The second date to test</param>
            <returns>Return true if both dates are in the same hour</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.Age(System.DateTime)">
            <summary>Calculates the current age, counting the completed years</summary>
            <param name="birthDate">The birth date</param>
            <returns>The current age</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.Age(System.DateTime,System.DateTime)">
            <summary>Calculates the age at a specific moment, counting the completed years</summary>
            <param name="birthDate">The birth date</param>
            <param name="testMoment">The test moment</param>
            <returns>The age at the test moment</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.PreviousTick(System.DateTime)">
            <summary>Get the previous tick</summary>
            <param name="dateTime">The source date time</param>
            <returns>The previous tick</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.NextTick(System.DateTime)">
            <summary>Get the next tick</summary>
            <param name="dateTime">The source date time</param>
            <returns>The next tick</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.LastMomentOfDay(System.DateTime)">
            <summary>Return the last moment of the day</summary>
            <param name="moment">Moment within the day</param>
            <returns><seealso cref="T:System.DateTime"/> from the latest moment in a day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.IsLastMomentOfDay(System.DateTime)">
            <summary>Test if the date is the last moment of the day</summary>
            <param name="moment">Moment to test</param>
            <returns>True on the last moment of the day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.RoundUp(System.DateTime,System.TimeSpan)">
            <summary>Rounds a date time up</summary>
            <param name="dateTime">The date time</param>
            <param name="stepSize">Size of the rounding step</param>
            <returns>The rounded date time</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.RoundDown(System.DateTime,System.TimeSpan)">
            <summary>Rounds a date time down</summary>
            <param name="dateTime">The date time</param>
            <param name="stepSize">Size of the rounding step</param>
            <returns>The rounded date time</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DateTimeExtensions.Round(System.DateTime,System.TimeSpan)">
            <summary>Rounds a date time to the nearest value</summary>
            <param name="dateTime">The date time</param>
            <param name="stepSize">Size of the rounding step</param>
            <returns>The rounded date time</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.JsonExtensions">
            <summary>Json extensions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.JsonExtensions.GetSystemType(System.Text.Json.JsonValueKind)">
            <summary>Gets the type of the system</summary>
            <param name="valueKind">Kind of the value</param>
            <returns>The system type</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.JsonExtensions.GetSystemType(System.Text.Json.JsonValueKind,System.Object)">
            <summary>Gets the type of the system</summary>
            <param name="valueKind">Kind of the value</param>
            <param name="value">The value, used to determine the numeric type</param>
            <returns>The system type</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.JsonExtensions.GetValue(System.Text.Json.JsonElement)">
            <summary>Get the json element value</summary>
            <param name="jsonElement">The json element</param>
            <returns>The json element value</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.DictionaryExtensions">
            <summary><see cref="T:System.Collections.Generic.Dictionary`2">Dictionary</see> extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DictionaryExtensions.GetValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.Object)">
            <summary>Get string/object dictionary value</summary>
            <param name="dictionary">The dictionary</param>
            <param name="key">The value key</param>
            <param name="defaultValue">The default value</param>
            <returns>The dictionary value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DictionaryExtensions.GetValue``1(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,``0)">
            <summary>Get string/T dictionary value</summary>
            <param name="dictionary">The dictionary</param>
            <param name="key">The value key</param>
            <param name="defaultValue">The default value</param>
            <returns>The dictionary value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DictionaryExtensions.GetValue``1(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,``0)">
            <summary>Get value from a string/JSON-string dictionary</summary>
            <param name="dictionary">The dictionary</param>
            <param name="dictionaryKey">The dictionary key</param>
            <param name="objectKey">The object key</param>
            <param name="defaultValue">The default value</param>
            <returns>The dictionary value</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.TimeSpanExtensions">
            <summary><see cref="T:System.TimeSpan">TimeSpan</see> extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.TimeSpanExtensions.RoundUp(System.TimeSpan,System.TimeSpan)">
            <summary>Rounds a time interval up</summary>
            <param name="timeSpan">The time span</param>
            <param name="stepSize">Size of the rounding step</param>
            <returns>The rounded time interval</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.TimeSpanExtensions.RoundDown(System.TimeSpan,System.TimeSpan)">
            <summary>Rounds a time interval down</summary>
            <param name="timeSpan">The time span</param>
            <param name="stepSize">Size of the rounding step</param>
            <returns>The rounded time interval</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.TimeSpanExtensions.Round(System.TimeSpan,System.TimeSpan)">
            <summary>Rounds a time interval to the nearest value</summary>
            <param name="timeSpan">The time span</param>
            <param name="stepSize">Size of the rounding step</param>
            <returns>The rounded time interval</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.DatePeriodExtensions">
            <summary><see cref="T:PayrollEngine.Client.Scripting.DatePeriod">DatePeriod</see> extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsBefore(PayrollEngine.Client.Scripting.DatePeriod,System.DateTime)">
            <summary>Test if a specific time moment is before this period</summary>
            <param name="period">The period</param>
            <param name="testMoment">The moment to test</param>
            <returns>True, if the moment is before this period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsBefore(PayrollEngine.Client.Scripting.DatePeriod,PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if a specific time period is before this period</summary>
            <param name="period">The period</param>
            <param name="testPeriod">The period to test</param>
            <returns>True, if the period is before this period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsAfter(PayrollEngine.Client.Scripting.DatePeriod,System.DateTime)">
            <summary>Test if a specific time moment is after this period</summary>
            <param name="period">The period</param>
            <param name="testMoment">The moment to test</param>
            <returns>True, if the moment is after this period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsAfter(PayrollEngine.Client.Scripting.DatePeriod,PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if a specific time period is after this period</summary>
            <param name="period">The period</param>
            <param name="testPeriod">The period to test</param>
            <returns>True, if the period is after this period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsWithin(PayrollEngine.Client.Scripting.DatePeriod,System.DateTime)">
            <summary>Test if a specific time moment is within the period, including open periods</summary>
            <param name="period">The period</param>
            <param name="testMoment">The moment to test</param>
            <returns>True, if the moment is within this period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsWithin(PayrollEngine.Client.Scripting.DatePeriod,PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if a specific time period is within the period, including open periods</summary>
            <param name="period">The period</param>
            <param name="testPeriod">The period to test</param>
            <returns>True, if the test period is within this period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsWithinOrBefore(PayrollEngine.Client.Scripting.DatePeriod,System.DateTime)">
            <summary>Test if a specific time moment is within or before the period, including open periods</summary>
            <param name="period">The period</param>
            <param name="testMoment">The moment to test</param>
            <returns>True, if the moment is within or before this period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsWithinOrAfter(PayrollEngine.Client.Scripting.DatePeriod,System.DateTime)">
            <summary>Test if a specific time moment is within or after the period, including open periods</summary>
            <param name="period">The period</param>
            <param name="testMoment">The moment to test</param>
            <returns>True, if the moment is within or after this period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsOverlapping(PayrollEngine.Client.Scripting.DatePeriod,PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if period is overlapping this period</summary>
            <param name="period">The period</param>
            <param name="testPeriod">The period to test</param>
            <returns>True, if the period is overlapping this period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.Intersect(PayrollEngine.Client.Scripting.DatePeriod,PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Get the intersection of a date period with this period</summary>
            <param name="period">The period</param>
            <param name="intersectPeriod">The period to intersect</param>
            <returns>The intersecting date period, null if no intersection is present</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.Split(PayrollEngine.Client.Scripting.DatePeriod,System.Collections.Generic.List{System.DateTime})">
            <summary>Split date period by splitting dates</summary>
            <param name="period">The period</param>
            <param name="splitMoments">The moments used to split</param>
            <returns>The splitting periods</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsFirstDay(PayrollEngine.Client.Scripting.DatePeriod,System.DateTime)">
            <summary>Test if a specific time moment is the first day of a period</summary>
            <param name="test">The moment to test</param>
            <param name="period">The period </param>
            <returns>True if the test day is the first period day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsLastDay(PayrollEngine.Client.Scripting.DatePeriod,System.DateTime)">
            <summary>Test if a specific time moment is the last day of a period</summary>
            <param name="period">The period </param>
            <param name="test">The moment to test</param>
            <returns>True if the test day is the last period day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsStartDay(PayrollEngine.Client.Scripting.DatePeriod,System.DateTime)">
            <summary>Test if a date is the period start day</summary>
            <param name="period">The period</param>
            <param name="test">The date to test</param>
            <returns>True, if the test date is the period start day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsStartDayOfWeek(PayrollEngine.Client.Scripting.DatePeriod,System.DayOfWeek)">
            <summary>Test if the period start is on a specific weekday</summary>
            <param name="period">The period</param>
            <param name="testDay">The weekday to test</param>
            <returns>True, if the period start day matches the weekday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsStartMonday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period start is a monday</summary>
            <param name="period">The period</param>
            <returns>True, if the period start day is a monday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsStartTuesday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period start is a tuesday</summary>
            <param name="period">The period</param>
            <returns>True, if the period start day is a tuesday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsStartWednesday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period start is a wednesday</summary>
            <param name="period">The period</param>
            <returns>True, if the period start day is a Wednesday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsStartThursday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period start is a thursday</summary>
            <param name="period">The period</param>
            <returns>True, if the period start day is a thursday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsStartFriday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period start is a friday</summary>
            <param name="period">The period</param>
            <returns>True, if the period start day is a friday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsStartSaturday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period start is a saturday</summary>
            <param name="period">The period</param>
            <returns>True, if the period start day is a saturday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsStartSunday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period start is a sunday</summary>
            <param name="period">The period</param>
            <returns>True, if the period start day is a sunday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsEndDay(PayrollEngine.Client.Scripting.DatePeriod,System.DateTime)">
            <summary>Test if a date is the period end day</summary>
            <param name="period">The period</param>
            <param name="test">The date to test</param>
            <returns>True, if the test date is the period end day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsEndDayOfWeek(PayrollEngine.Client.Scripting.DatePeriod,System.DayOfWeek)">
            <summary>Test if the period end is on a specific weekday</summary>
            <param name="period">The period</param>
            <param name="testDay">The weekday to test</param>
            <returns>True, if the period end day matches the weekday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsEndMonday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period end is a monday</summary>
            <param name="period">The period</param>
            <returns>True, if the period end day is a monday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsEndTuesday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period end is a tuesday</summary>
            <param name="period">The period</param>
            <returns>True, if the period end day is a tuesday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsEndWednesday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period end is a wednesday</summary>
            <param name="period">The period</param>
            <returns>True, if the period end day is a Wednesday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsEndThursday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period end is a thursday</summary>
            <param name="period">The period</param>
            <returns>True, if the period end day is a thursday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsEndFriday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period end is a friday</summary>
            <param name="period">The period</param>
            <returns>True, if the period end day is a friday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsEndSaturday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period end is a saturday</summary>
            <param name="period">The period</param>
            <returns>True, if the period end day is a saturday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsEndSunday(PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if the period end is a sunday</summary>
            <param name="period">The period</param>
            <returns>True, if the period end day is a sunday</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.GetWorkingDaysCount(PayrollEngine.Client.Scripting.DatePeriod,System.Collections.Generic.IEnumerable{System.DayOfWeek})">
            <summary>Calculate the count of working days</summary>
            <param name="period">The period</param>
            <param name="days">Available days</param>
            <returns>The number of working days</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.TotalDuration(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.DatePeriod})">
            <summary>Total duration of all date periods</summary>
            <param name="datePeriods">The date periods</param>
            <returns>Accumulated total duration</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.HasOverlapping(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.DatePeriod})">
            <summary>Test if any period is overlapping another period</summary>
            <param name="periodValues">The time periods to test</param>
            <returns>True, if the period is overlapping this period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsWithinAny(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.DatePeriod},System.DateTime)">
            <summary>Test if a specific time moment is within any date period</summary>
            <param name="datePeriods">The time periods to test</param>
            <param name="testMoment">The moment to test</param>
            <returns>True, if the moment is within this period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.IsWithinAny(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.DatePeriod},PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Test if a specific time period is within any date period</summary>
            <param name="datePeriods">The time periods to test</param>
            <param name="testPeriod">The period to test</param>
            <returns>True, if the test period is within this period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.Limits(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.DatePeriod})">
            <summary>Get limits period, from the earliest start to the latest end</summary>
            <param name="datePeriods">The time periods to evaluate</param>
            <returns>Date period including all date periods, an anytime period for empty collections</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.DatePeriodExtensions.Intersections(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.DatePeriod},PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Get all intersections of a date period with any date period</summary>
            <param name="datePeriods">The time periods to test</param>
            <param name="intersectPeriod">The period to intersect</param>
            <returns>List of intersecting date periods</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseValueExtensions">
            <summary><see cref="T:PayrollEngine.Client.Scripting.CaseValue">CaseValue</see> extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.Period(PayrollEngine.Client.Scripting.CaseValue)">
            <summary>Extract date periods</summary>
            <param name="caseValue">The case value</param>
            <returns>Accumulated total duration</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.ValueAs``1(PayrollEngine.Client.Scripting.CaseValue,``0)">
            <summary>Convert the case value to custom type</summary>
            <param name="caseValue">The case value</param>
            <param name="defaultValue">The default value</param>
            <returns>Accumulated total duration</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.ToString(PayrollEngine.Client.Scripting.CaseValue)">
            <summary>Convert case value to string/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.ToInt(PayrollEngine.Client.Scripting.CaseValue)">
            <summary>Convert case value to int/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.ToNullableInt(PayrollEngine.Client.Scripting.CaseValue)">
            <summary>Convert case value to nullable int/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.ToDecimal(PayrollEngine.Client.Scripting.CaseValue)">
            <summary>Convert case value to decimal/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.ToDecimal(PayrollEngine.Client.Scripting.CaseValue,PayrollEngine.Client.Scripting.DecimalRounding)">
            <summary>Convert case value to decimal</summary>
            <param name="value">The case value</param>
            <param name="rounding">The rounding type</param>
            <summary>Decimal case value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.ToNullableDecimal(PayrollEngine.Client.Scripting.CaseValue)">
            <summary>Convert case value to nullable decimal/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.ToNullableDecimal(PayrollEngine.Client.Scripting.CaseValue,PayrollEngine.Client.Scripting.DecimalRounding)">
            <summary>Convert case value to nullable decimal/></summary>
            <param name="value">The case value</param>
            <param name="rounding">The rounding type</param>
            <summary>Nullable decimal case value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.ToDateTime(PayrollEngine.Client.Scripting.CaseValue)">
            <summary>Convert case value to date time/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.ToNullableDateTime(PayrollEngine.Client.Scripting.CaseValue)">
            <summary>Convert case value to nullable date time/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.Periods(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CaseValue})">
            <summary>Extract date periods</summary>
            <param name="periodValues">The case period values</param>
            <returns>Accumulated total duration</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.GroupByValue(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CaseValue})">
            <summary>Get case period values grouped by value</summary>
            <param name="periodValues">The case period values</param>
            <returns>Case period values grouped by value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.TotalDuration(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CaseValue})">
            <summary>Total duration of all time periods</summary>
            <param name="periodValues">The case period values</param>
            <returns>Accumulated total duration</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.Intersections(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CaseValue},PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Get all intersections of a date period with any date period</summary>
            <param name="periodValues">The time periods to test</param>
            <param name="intersectPeriod">The period to intersect</param>
            <returns>List of intersecting date periods</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.WherePeriod(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CaseValue},System.Func{PayrollEngine.Client.Scripting.DatePeriod,System.Boolean})">
            <summary>Get case period values matching a period predicate</summary>
            <param name="periodValues">The time periods to test</param>
            <param name="predicate">The predicate.</param>
            <returns>List of case period value matching the predicate</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.WhereStart(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CaseValue},System.DayOfWeek[])">
            <summary>Get date periods with start on specific weekdays</summary>
            <param name="periodValues">The case period values</param>
            <param name="weekdays">The week days</param>
            <returns>List of intersecting date periods</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.WhereStartNot(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CaseValue},System.DayOfWeek[])">
            <summary>Get date periods with start is not on specific weekdays</summary>
            <param name="periodValues">The case period values</param>
            <param name="weekdays">The week days</param>
            <returns>List of intersecting date periods</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.WhereEnd(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CaseValue},System.DayOfWeek[])">
            <summary>Get date periods with end on specific weekdays</summary>
            <param name="periodValues">The case period values</param>
            <param name="weekdays">The week days</param>
            <returns>List of intersecting date periods</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueExtensions.WhereEndNot(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CaseValue},System.DayOfWeek[])">
            <summary>Get date periods with end is not on specific weekdays</summary>
            <param name="periodValues">The case period values</param>
            <param name="weekdays">The week days</param>
            <returns>List of intersecting date periods</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrollValueExtensions">
            <summary><see cref="T:PayrollEngine.Client.Scripting.PayrollValue">PayrollValue</see> extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValueExtensions.ValueAs``1(PayrollEngine.Client.Scripting.PayrollValue,``0)">
            <summary>Convert payroll case value to custom type</summary>
            <param name="payrollValue">The payroll value</param>
            <param name="defaultValue">The default value</param>
            <returns>Accumulated total duration</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValueExtensions.ToString(PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Convert payroll case value to string/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValueExtensions.ToInt(PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Convert payroll case value to int/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValueExtensions.ToNullableInt(PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Convert payroll case value to nullable int/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValueExtensions.ToDecimal(PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Convert payroll case value to decimal/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValueExtensions.ToDecimal(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.DecimalRounding)">
            <summary>Convert payroll case value to decimal</summary>
            <param name="value">The case value</param>
            <param name="rounding">The rounding type</param>
            <summary>Decimal payroll case value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValueExtensions.ToNullableDecimal(PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Convert payroll case value to nullable decimal/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValueExtensions.ToNullableDecimal(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.DecimalRounding)">
            <summary>Convert payroll case value to nullable decimal/></summary>
            <param name="value">The case value</param>
            <param name="rounding">The rounding type</param>
            <summary>Nullable decimal payroll case value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValueExtensions.ToDateTime(PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Convert payroll case value to date time/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValueExtensions.ToNullableDateTime(PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Convert payroll case value to nullable date time/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValueExtensions.GetDecimalValues(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.PayrollValue})">
            <summary>Extract all decimal values</summary>
            <param name="values">The payroll values</param>
            <returns>A list containing all decimal values</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PeriodValueExtensions">
            <summary><see cref="T:PayrollEngine.Client.Scripting.PeriodValue">PeriodValue</see> extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.GetPeriodStart(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.PeriodValue})">
            <summary>Get the earliest start date</summary>
            <param name="values">The period payroll values</param>
            <returns>The earliest start date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.GetPeriodEnd(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.PeriodValue})">
            <summary>Get the latest end date</summary>
            <param name="values">The period payroll values</param>
            <returns>The latest end date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.GetPeriod(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.PeriodValue})">
            <summary>Get the date period over all values, from the earliest start to the latest end</summary>
            <param name="values">The period payroll values</param>
            <returns>The overall period, anytime in case of an empty source</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.GetPeriodStarts(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.PeriodValue})">
            <summary>Extract all date start dates</summary>
            <param name="values">The period payroll values</param>
            <returns>A date period start dates</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.GetPeriodEnds(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.PeriodValue})">
            <summary>Extract all date end dates</summary>
            <param name="values">The period payroll values</param>
            <returns>A date period end dates</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.GetPeriods(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.PeriodValue})">
            <summary>Extract all date periods</summary>
            <param name="values">The period payroll values</param>
            <returns>A list containing all date periods</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.GetDurations(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.PeriodValue})">
            <summary>Extract all date period durations</summary>
            <param name="values">The period payroll values</param>
            <returns>A list containing all date period durations</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.TotalDuration(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.PeriodValue})">
            <summary>Summarize the total duration from all date period durations</summary>
            <param name="values">The period payroll values</param>
            <returns>Total duration from all periods,, an empty time span on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.TotalDaysByValue(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.PeriodValue})">
            <summary>Total days considering the value as factor</summary>
            <param name="values">The period payroll values</param>
            <returns>Total days by value as factor</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.TotalDaysByValue(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.PeriodValue},System.Boolean)">
            <summary>Total days considering the value as factor</summary>
            <param name="values">The period payroll values</param>
            <param name="includeEndDay">Include the end day</param>
            <returns>Total days by value as factor</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.ValueAs``1(PayrollEngine.Client.Scripting.PeriodValue,``0)">
            <summary>Convert case period value to custom type</summary>
            <param name="periodValue">The case value</param>
            <param name="defaultValue">The default value</param>
            <returns>Accumulated total duration</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.ToString(PayrollEngine.Client.Scripting.PeriodValue)">
            <summary>Convert case period value to string/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.ToInt(PayrollEngine.Client.Scripting.PeriodValue)">
            <summary>Convert case period value to int/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.ToNullableInt(PayrollEngine.Client.Scripting.PeriodValue)">
            <summary>Convert case period value to nullable int/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.ToDecimal(PayrollEngine.Client.Scripting.PeriodValue)">
            <summary>Convert case period value to decimal/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.ToDecimal(PayrollEngine.Client.Scripting.PeriodValue,PayrollEngine.Client.Scripting.DecimalRounding)">
            <summary>Convert case period value to decimal</summary>
            <param name="value">The case value</param>
            <param name="rounding">The rounding type</param>
            <summary>Decimal case period value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.ToNullableDecimal(PayrollEngine.Client.Scripting.PeriodValue)">
            <summary>Convert case period value to nullable decimal/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.ToNullableDecimal(PayrollEngine.Client.Scripting.PeriodValue,PayrollEngine.Client.Scripting.DecimalRounding)">
            <summary>Convert case period value to nullable decimal/></summary>
            <param name="value">The case value</param>
            <param name="rounding">The rounding type</param>
            <summary>Nullable decimal case period value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.ToDateTime(PayrollEngine.Client.Scripting.PeriodValue)">
            <summary>Convert case period value to date time/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValueExtensions.ToNullableDateTime(PayrollEngine.Client.Scripting.PeriodValue)">
            <summary>Convert case period value to nullable date time/></summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrollResultsExtensions">
            <summary>Payroll results extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollResultsExtensions.Values(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CaseValueResult})">
            <summary>Get case value result values</summary>
            <param name="results">The case value results</param>
            <returns>Case value result values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollResultsExtensions.Sum(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CaseValueResult})">
            <summary>Get summary of decimal case value results</summary>
            <param name="results">The case value results</param>
            <returns>Case value decimal result values summary</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollResultsExtensions.Values(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CollectorResult})">
            <summary>Get collector result values</summary>
            <param name="results">The collector results</param>
            <returns>Collector result values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollResultsExtensions.Sum(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CollectorResult})">
            <summary>Get summary of collector results</summary>
            <param name="results">The collector results</param>
            <returns>Collector result values summary</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollResultsExtensions.Values(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CollectorCustomResult})">
            <summary>Get collector custom result values</summary>
            <param name="results">The collector custom results</param>
            <returns>Collector custom result values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollResultsExtensions.Sum(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.CollectorCustomResult})">
            <summary>Get summary of collector custom results</summary>
            <param name="results">The collector custom results</param>
            <returns>Collector custom results result values summary</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollResultsExtensions.Values(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.WageTypeResult})">
            <summary>Get wage type result values</summary>
            <param name="results">The wage type results</param>
            <returns>Wage type result values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollResultsExtensions.Sum(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.WageTypeResult})">
            <summary>Get summary of wage type results</summary>
            <param name="results">The wage type results</param>
            <returns>Wage type result values summary</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollResultsExtensions.Values(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.WageTypeCustomResult})">
            <summary>Get wage type custom results values</summary>
            <param name="results">The wage type custom results</param>
            <returns>Wage type custom result values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollResultsExtensions.Sum(System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.WageTypeCustomResult})">
            <summary>Get summary of wage type custom results</summary>
            <param name="results">The wage type custom results</param>
            <returns>Wage type results result values summary</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ValueTypeExtensions">
            <summary>Value type extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ValueTypeExtensions.IsBoolean(PayrollEngine.Client.Scripting.ValueType)">
            <summary>Test if value type is a bool</summary>
            <param name="valueType">The value type</param>
            <returns>True for boolean value types</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ValueTypeExtensions.IsString(PayrollEngine.Client.Scripting.ValueType)">
            <summary>Test if value type is a string</summary>
            <param name="valueType">The value type</param>
            <returns>True for string value types</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ValueTypeExtensions.IsDateTime(PayrollEngine.Client.Scripting.ValueType)">
            <summary>Test if value type is a date time</summary>
            <param name="valueType">The value type</param>
            <returns>True for date time value types</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ValueTypeExtensions.IsNumber(PayrollEngine.Client.Scripting.ValueType)">
            <summary>Test if value type is a number</summary>
            <param name="valueType">The value type</param>
            <returns>True for number value types</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ValueTypeExtensions.IsInteger(PayrollEngine.Client.Scripting.ValueType)">
            <summary>Test if value type is a integer</summary>
            <param name="valueType">The value type</param>
            <returns>True for integer value types</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ValueTypeExtensions.IsDecimal(PayrollEngine.Client.Scripting.ValueType)">
            <summary>Test if value type is a decimal number</summary>
            <param name="valueType">The value type</param>
            <returns>True for decimal number value types</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ValueTypeExtensions.GetDataType(PayrollEngine.Client.Scripting.ValueType)">
            <summary>Get the data type</summary>
            <param name="valueType">The value type</param>
            <returns>The data type</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ValueTypeExtensions.GetValueType(System.Object)">
            <summary>Get the value type</summary>
            <param name="value">The value</param>
            <returns>The value type</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ValueTypeExtensions.JsonToValue(PayrollEngine.Client.Scripting.ValueType,System.String)">
            <summary>Convert json by value type</summary>
            <param name="valueType">The value type</param>
            <param name="json">The json to convert</param>
            <returns>Object value</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.TupleExtensions">
            <exclude />
            <summary><see cref="T:System.Tuple">Tuple</see> extension methods (internal usage)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.TupleExtensions.TupleToPeriodValues(System.Collections.Generic.List{System.Tuple{System.DateTime,System.Nullable{System.DateTime},System.Object}})">
            <exclude />
            <summary>Convert tuple values to case period values</summary>
            <param name="values">The tuple values</param>
            <returns>The period values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.TupleExtensions.TupleToCasePeriodValue(System.Collections.Generic.List{System.Tuple{System.DateTime,System.Nullable{System.DateTime},System.Object}},System.String)">
            <exclude />
            <summary>Convert tuple values to a case value</summary>
            <param name="values">The tuple values</param>
            <param name="caseFieldName">The case field name</param>
            <returns>The case values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.TupleExtensions.TupleToCaseValue(System.Tuple{System.String,System.DateTime,System.Tuple{System.Nullable{System.DateTime},System.Nullable{System.DateTime}},System.Object,System.Nullable{System.DateTime},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object}})">
            <exclude />
            <summary>Convert tuple values to case value</summary>
            <param name="value">The tuple value</param>
            <returns>The case period values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.TupleExtensions.TupleToCaseValues(System.Collections.Generic.List{System.Tuple{System.String,System.DateTime,System.Tuple{System.Nullable{System.DateTime},System.Nullable{System.DateTime}},System.Object,System.Nullable{System.DateTime},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object}}})">
            <exclude />
            <summary>Convert tuple values to case values</summary>
            <param name="values">The tuple values</param>
            <returns>The case period values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.TupleExtensions.TupleToCaseValuesDictionary(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Tuple{System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Object}}})">
            <exclude />
            <summary>Convert tuple values to a case value dictionary</summary>
            <param name="values">The values</param>
            <returns>The case values grouped by case field name</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.TupleExtensions.TupleToCollectorResults(System.Collections.Generic.List{System.Tuple{System.String,System.Tuple{System.DateTime,System.DateTime},System.Decimal,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object}}})">
            <exclude />
            <summary>Convert tuple values to a collector result</summary>
            <param name="values">The tuple values</param>
            <returns>The collector results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.TupleExtensions.TupleToCollectorCustomResults(System.Collections.Generic.List{System.Tuple{System.String,System.String,System.Tuple{System.DateTime,System.DateTime},System.Decimal,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object}}})">
            <exclude />
            <summary>Convert tuple values to a collector custom result</summary>
            <param name="values">The tuple values</param>
            <returns>The collector custom results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.TupleExtensions.TupleToWageTypeResults(System.Collections.Generic.List{System.Tuple{System.Decimal,System.String,System.Tuple{System.DateTime,System.DateTime},System.Decimal,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object}}})">
            <exclude />
            <summary>Convert tuple values to a wage type result</summary>
            <param name="values">The tuple values</param>
            <returns>The wage type results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.TupleExtensions.TupleToWageTypeCustomResults(System.Collections.Generic.List{System.Tuple{System.Decimal,System.String,System.String,System.Tuple{System.DateTime,System.DateTime},System.Decimal,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object}}})">
            <exclude />
            <summary>Convert tuple values to a wage type custom result</summary>
            <param name="values">The tuple values</param>
            <returns>The wage type custom results</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseValidateFunctionAttribute">
            <summary>Attribute for case validate function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValidateFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseValidateFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseBuildFunctionAttribute">
            <summary>Attribute for case build function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseBuildFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseBuildFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseChangeFunctionAttribute">
            <summary>Attribute for case change function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseChangeFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseChangeFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseAvailableFunctionAttribute">
            <summary>Attribute for case available function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseAvailableFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseAvailableFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseFunctionAttribute">
            <summary>Attribute for case function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseRelationValidateFunctionAttribute">
            <summary>Attribute for case relation validate function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseRelationValidateFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseRelationValidateFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseRelationBuildFunctionAttribute">
            <summary>Attribute for case relation build function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseRelationBuildFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseRelationBuildFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseRelationFunctionAttribute">
            <summary>Attribute for case relation function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseRelationFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseRelationFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.WageTypeResultFunctionAttribute">
            <summary>Attribute for wage type result function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeResultFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeResultFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.WageTypeValueFunctionAttribute">
            <summary>Attribute for wage type value function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeValueFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeValueFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.WageTypeFunctionAttribute">
            <summary>Attribute for wage type function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorEndFunctionAttribute">
            <summary>Attribute for collector edn function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorEndFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorEndFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorApplyFunctionAttribute">
            <summary>Attribute for collector apply tart function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorApplyFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorApplyFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorStartFunctionAttribute">
            <summary>Attribute for collector start function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorStartFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorStartFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorFunctionAttribute">
            <summary>Attribute for collector function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ReportBuildFunctionAttribute">
            <summary>Attribute for report build function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ReportBuildFunctionAttribute.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ReportBuildFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ReportStartFunctionAttribute">
            <summary>Attribute for report start function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ReportStartFunctionAttribute.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ReportStartFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ReportEndFunctionAttribute">
            <summary>Attribute for report end function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ReportEndFunctionAttribute.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ReportEndFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ReportFunctionAttribute">
            <summary>Attribute for case function</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ReportFunctionAttribute.RegulationName">
            <summary>The regulation name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ReportFunctionAttribute.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.RegulationFunctionAttribute">
            <summary>Attribute for regulation function</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.RegulationFunctionAttribute.RegulationName">
            <summary>The regulation name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.RegulationFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.RegulationFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="regulationName">Name of the regulation</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunStartFunctionAttribute">
            <summary>Attribute for payrun start function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunStartFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunStartFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="payrunName">Name of the payrun</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunWageTypeAvailableFunctionAttribute">
            <summary>Attribute for payrun wage type available function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunWageTypeAvailableFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunWageTypeAvailableFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="payrunName">Name of the payrun</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunEmployeeAvailableFunctionAttribute">
            <summary>Attribute for payrun employee available function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunEmployeeAvailableFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunEmployeeAvailableFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="payrunName">Name of the payrun</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunEmployeeStartFunctionAttribute">
            <summary>Attribute for payrun employee start function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunEmployeeStartFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunEmployeeStartFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="payrunName">Name of the payrun</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunEmployeeEndFunctionAttribute">
            <summary>Attribute for payrun employee end function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunEmployeeEndFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunEmployeeEndFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="payrunName">Name of the payrun</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunEndFunctionAttribute">
            <summary>Attribute for payrun end function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunEndFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunEndFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="payrunName">Name of the payrun</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunFunctionAttribute">
            <summary>Attribute for payrun function</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.PayrunFunctionAttribute.PayrunName">
            <summary>The regulation name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunFunctionAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunFunctionAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
            <param name="payrunName">Name of the payrun</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrollAttribute">
            <summary>Attribute for payroll function</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.PayrollAttribute.EmployeeIdentifier">
            <summary>Rhe employee identifier</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.PayrollAttribute.PayrollName">
            <summary>The name of the payroll</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrollAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
            <param name="employeeIdentifier">The employee identifier</param>
            <param name="payrollName">Name of the payroll</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.FunctionAttribute">
            <summary>Attribute for function</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.FunctionAttribute.TenantIdentifier">
            <summary>The tenant identifier</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.FunctionAttribute.UserIdentifier">
            <summary>The user identifier</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.FunctionAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrollAttribute"/> class</summary>
            <param name="tenantIdentifier">The tenant identifier</param>
            <param name="userIdentifier">The user identifier</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ActionValueSource">
            <summary>Action value source</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueSource.Value">
            <summary>Case value</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueSource.Start">
            <summary>Case value start date</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueSource.End">
            <summary>Case value end date</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueSource.Period">
            <summary>Case date period</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueSource.FieldAttribute">
            <summary>Case field attribute</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueSource.ValueAttribute">
            <summary>Case value attribute</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueSource.Lookup">
            <summary>Lookup value</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueSource.RangeLookup">
            <summary>Range lookup value</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ActionValueReferenceType">
            <summary>Action value reference type</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueReferenceType.None">
            <summary>None</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueReferenceType.CaseChange">
            <summary>Case change</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueReferenceType.CaseValue">
            <summary>Case value</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueReferenceType.Lookup">
            <summary>Lookup</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ActionValueType">
            <summary>Action value type</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueType.None">
            <summary>No type</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueType.String">
            <summary>String type</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueType.Boolean">
            <summary>Boolean type</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueType.Integer">
            <summary>Integer type</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueType.Decimal">
            <summary>Decimal type</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueType.DateTime">
            <summary>DateTime type</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionValueType.TimeSpan">
            <summary>TimeSpan type</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ValueTypeExtensions">
            <summary>Extensions for <see cref="T:PayrollEngine.Client.Scripting.ValueType"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ValueTypeExtensions.ToActionValueType(PayrollEngine.Client.Scripting.ValueType)">
            <summary>Get the action value type</summary>
            <param name="valueType">The value type</param>
            <returns>The action value type</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.IActionCaseValueContext">
            <summary>Action case value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.IActionCaseValueContext.Function">
            <summary>The function</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.IActionCaseValueContext`1">
            <summary>Action case value context</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.IActionCaseValueContext`1.Function">
            <summary>The function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.IActionCaseValueContext`1.GetCaseValueType(System.String)">
            <summary>Get case value type</summary>
            <param name="caseFieldName">The case field name</param>
            <returns>The case value type</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.IActionCaseValueContext`1.GetCaseValue(System.String,System.DateTime)">
            <summary>Get case value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="caseValueDate">The case value date</param>
            <returns>The case value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.IActionCaseValueContext`1.GetCaseFieldAttribute``1(System.String,System.String)">
            <summary>Get case field attribute value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="attributeName">The attribute name</param>
            <returns>The case value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.IActionCaseValueContext`1.GetCaseValueAttribute``1(System.String,System.String)">
            <summary>Get case value attribute value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="attributeName">The attribute name</param>
            <returns>The case value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.IActionCaseValueContext`1.GetCaseChangeValue(System.String)">
            <summary>Get case value</summary>
            <param name="caseFieldName">The case field name</param>
            <returns>The case value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.IActionCaseValueContext`1.GetLookup``1(System.String,System.String)">
            <summary>Get lookup value</summary>
            <param name="lookupName">The lookup name</param>
            <param name="lookupKey">The lookup key</param>
            <returns>The case value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.IActionCaseValueContext`1.GetLookup``1(System.String,System.String,System.String)">
            <summary>Get lookup value</summary>
            <param name="lookupName">The lookup name</param>
            <param name="lookupKey">The lookup key</param>
            <param name="objectKey">The object key</param>
            <returns>The case value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.IActionCaseValueContext`1.GetRangeLookup``1(System.String,System.Decimal,System.String)">
            <summary>Get range lookup value</summary>
            <param name="lookupName">The lookup name</param>
            <param name="rangeValue">The lookup range value</param>
            <param name="lookupKey">The object key</param>
            <returns>The case value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.IActionCaseValueContext`1.GetRangeObjectLookup``1(System.String,System.Decimal,System.String,System.String)">
            <summary>Get range lookup value</summary>
            <param name="lookupName">The lookup name</param>
            <param name="rangeValue">The lookup range value</param>
            <param name="objectKey">The object key</param>
            <param name="lookupKey">The object key</param>
            <returns>The case value</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ActionCaseValueContextBase`1">
            <summary>Action case value context base</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValueContextBase`1.Function">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueContextBase`1.#ctor(`0)">
            <summary>Constructor</summary>
            <param name="function">The function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueContextBase`1.GetCaseValueType(System.String)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueContextBase`1.GetCaseValue(System.String,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueContextBase`1.GetCaseFieldAttribute``1(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueContextBase`1.GetCaseValueAttribute``1(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueContextBase`1.GetCaseChangeValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueContextBase`1.GetLookup``1(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueContextBase`1.GetLookup``1(System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueContextBase`1.GetRangeLookup``1(System.String,System.Decimal,System.String)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueContextBase`1.GetRangeObjectLookup``1(System.String,System.Decimal,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.PayrollActionValueContext">
            <summary>Payroll action case value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollActionValueContext.#ctor(PayrollEngine.Client.Scripting.Function.PayrollFunction)">
            <summary>Constructor</summary>
            <param name="function">The function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.PayrollActionValueContext`1">
            <summary>Payroll action case value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollActionValueContext`1.#ctor(`0)">
            <summary>Constructor</summary>
            <param name="function">The function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollActionValueContext`1.GetCaseValue(System.String,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollActionValueContext`1.GetCaseValueType(System.String)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollActionValueContext`1.GetCaseFieldAttribute``1(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollActionValueContext`1.GetCaseValueAttribute``1(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollActionValueContext`1.GetLookup``1(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollActionValueContext`1.GetLookup``1(System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollActionValueContext`1.GetRangeLookup``1(System.String,System.Decimal,System.String)">
            <inheritdoc />
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollActionValueContext`1.GetRangeObjectLookup``1(System.String,System.Decimal,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.IActionMethod">
            <summary>Action method</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.IActionMethod.GetValueType">
            <summary>Get the value type</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.IActionMethod.EvaluateValue(System.Object)">
            <summary>Evaluate the value</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.IActionMethod`1">
            <summary>Action method</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.IActionMethod`1.EvaluateValue(`0)">
            <summary>Evaluate the value</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3">
            <summary>Action value method</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.ValueModePostfix">
            <summary>Value mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.StartModePostfix">
            <summary>Start mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.EndModePostfix">
            <summary>End mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.PeriodModePostfix">
            <summary>Period mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.FieldAttributeModePostfix">
            <summary>Case field  attribute mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.ValueAttributeModePostfix">
            <summary>Case value attribute mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.LookupModePostfix">
            <summary>Lookup value attribute mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.RangeLookupModePostfix">
            <summary>Range lookup value attribute mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.CaseChangeReference">
            <summary>Case change reference</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.CaseValueReference">
            <summary>Case value reference</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.LookupValueReference">
            <summary>Lookup value reference</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.Expression">
            <summary>The method expression</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.Name">
            <summary>The method name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.Context">
            <summary>The function</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.CaseValueDate">
            <summary>The case value date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.Parameters">
            <summary>The method parameters</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.HasParameters">
            <summary>Test for method parameters</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.ParameterCount">
            <summary>The method parameter count</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.UserCulture">
            <summary>The function culture</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.#ctor(`0,System.String,System.DateTime)">
            <summary>Constructor</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.valueFunctions">
            <summary>The value functions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.RegisterFunction(System.String,PayrollEngine.Client.Scripting.Function.ActionValueType,System.Func{`2,System.Object})">
            <summary>Register value function</summary>
            <param name="name">The function name</param>
            <param name="valueType">The value type</param>
            <param name="evaluate">The function code</param>
            <exception cref="T:PayrollEngine.Client.Scripting.ScriptException"></exception>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.GetValueType">
            <summary>Get the value type</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.EvaluateValue(`2)">
            <summary>Get the resolved value</summary>
            <param name="value">The value</param>
            <returns>The resolved value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.TryGetParameter``1(System.Int32,``0@)">
            <summary>>Get method parameter</summary>
            <param name="index">The parameter index</param>
            <param name="result">The parameter value</param>
            <returns>True for a valid parameter value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.GetCaseValue``1(PayrollEngine.Client.Scripting.Function.ActionValueReferenceType,System.String)">
            <summary>Get case value</summary>
            <param name="referenceType">The reference type</param>
            <param name="parameter">The parameter</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionMethodBase`3.ToString">
            <summary>String representation</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.BooleanActionValueMethod`2">
            <summary>Boolean action value method</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.BooleanActionValueMethod`2.#ctor(`0,System.String,System.DateTime)">
            <summary>Constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.IntegerActionValueMethod`2">
            <summary>Integer action value method</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.IntegerActionValueMethod`2.#ctor(`0,System.String,System.DateTime)">
            <summary>Constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.DecimalActionValueMethod`2">
            <summary>Decimal action value method</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.DecimalActionValueMethod`2.#ctor(`0,System.String,System.DateTime)">
            <summary>Constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.StringActionValueMethod`2">
            <summary>String action value method</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.StringActionValueMethod`2.#ctor(`0,System.String,System.DateTime)">
            <summary>Constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.DateTimeActionValueMethod`2">
            <summary>Date action value method</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.DateTimeActionValueMethod`2.#ctor(`0,System.String,System.DateTime)">
            <summary>Constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.TimeSpanActionValueMethod`2">
            <summary>Timespan action value method</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.TimeSpanActionValueMethod`2.#ctor(`0,System.String,System.DateTime)">
            <summary>Constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseFieldActionMethodBase`3">
            <summary>Attribute action value method</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseFieldActionMethodBase`3.CaseFieldName">
            <summary>The case field name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseFieldActionMethodBase`3.AttributeKey">
            <summary>The attribute key</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseFieldActionMethodBase`3.AttributeType">
            <summary>The attribute type</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseFieldActionMethodBase`3.#ctor(`0,System.String,System.String)">
            <summary>Constructor</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseFieldActionMethodBase`3.#ctor(`0,System.String,System.String,PayrollEngine.Client.Scripting.Function.ActionValueType)">
            <summary>Constructor</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseFieldActionMethodBase`3.GetValueType">
            <summary>Get the value type</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseFieldAttributeActionMethod`2">
            <summary>Case field attribute action value method</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseFieldAttributeActionMethod`2.#ctor(`0,System.String,System.String)">
            <summary>Constructor</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseFieldAttributeActionMethod`2.#ctor(`0,System.String,System.String,PayrollEngine.Client.Scripting.Function.ActionValueType)">
            <summary>Constructor</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseFieldAttributeActionMethod`2.EvaluateValue(System.Object)">
            <summary>Get the resolved value</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseValueAttributeActionMethod`2">
            <summary>Case value attribute action value method</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValueAttributeActionMethod`2.#ctor(`0,System.String,System.String)">
            <summary>Constructor</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValueAttributeActionMethod`2.#ctor(`0,System.String,System.String,PayrollEngine.Client.Scripting.Function.ActionValueType)">
            <summary>Constructor</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValueAttributeActionMethod`2.EvaluateValue(System.Object)">
            <summary>Get the resolved value</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.LookupActionMethodBase`2">
            <summary>Lookup action value method base</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.LookupActionMethodBase`2.LookupName">
            <summary>The lookupName name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.LookupActionMethodBase`2.ValueType">
            <summary>The lookup value type</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.LookupActionMethodBase`2.#ctor(`0,System.String,System.String)">
            <summary>Constructor</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.LookupActionMethodBase`2.GetValueType">
            <summary>Get the value type</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.LookupActionMethodBase`2.GetObjectValue(System.String,System.String)">
            <summary>Get the lookup object value</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.LookupActionMethod`2">
            <summary>Lookup action value method</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.LookupActionMethod`2.LookupKey">
            <summary>The lookup key</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.LookupActionMethod`2.ObjectKey">
            <summary>The lookup object value key</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.LookupActionMethod`2.#ctor(`0,System.String,System.String)">
            <summary>Constructor</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.LookupActionMethod`2.EvaluateValue(System.Object)">
            <summary>Get the resolved value</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.RangeLookupActionMethod`2">
            <summary>Range lookup action value method</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.RangeLookupActionMethod`2.ObjectKey">
            <summary>The lookup object value key</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.RangeLookupActionMethod`2.RangeValue">
            <summary>The lookup range value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.RangeLookupActionMethod`2.#ctor(`0,System.String,System.String)">
            <summary>Constructor</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.RangeLookupActionMethod`2.EvaluateValue(System.Object)">
            <summary>Get the resolved value</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase">
            <summary>Action case value</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ValueModePostfix">
            <summary>Value mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.StartModePostfix">
            <summary>Start mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.EndModePostfix">
            <summary>End mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.PeriodModePostfix">
            <summary>Period mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.FieldAttributeModePostfix">
            <summary>Case field attribute mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ValueAttributeModePostfix">
            <summary>Case value attribute mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.LookupModePostfix">
            <summary>Lookup value attribute mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.RangeLookupModePostfix">
            <summary>Range lookup value attribute mode postfix</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.CaseChangeReference">
            <summary>Case change reference</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.CaseValueReference">
            <summary>Case value reference</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.LookupValueReference">
            <summary>Lookup value reference</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.OptionalFieldMarker">
            <summary>Value optional marker</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToValueReference(System.String)">
            <summary>Convert to case change value reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToFieldAttributeReference(System.String)">
            <summary>Convert to case change field attribute reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToValueAttributeReference(System.String)">
            <summary>Convert to case change value attribute reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToCaseChangeReference(System.String)">
            <summary>Convert to case change reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToCaseValueReference(System.String)">
            <summary>Convert to case value reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToStartReference(System.String)">
            <summary>Convert to case change value start reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToEndReference(System.String)">
            <summary>Convert to case change value end reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToCaseChangeValueReference(System.String)">
            <summary>Convert to case change value reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToCaseChangeStartReference(System.String)">
            <summary>Convert to case change value start reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToCaseChangeEndReference(System.String)">
            <summary>Convert to case change value end reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToCaseChangeFieldAttributeReference(System.String)">
            <summary>Convert to case change field attribute value reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToCaseChangeValueAttributeReference(System.String)">
            <summary>Convert to case change value attribute value reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToCaseValueValueReference(System.String)">
            <summary>Convert to case value reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToCaseValueStartReference(System.String)">
            <summary>Convert to case value start reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToCaseValueEndReference(System.String)">
            <summary>Convert to case value end reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToCaseValueFieldAttributeReference(System.String)">
            <summary>Convert to case value field attribute value reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.ToCaseValueValueAttributeReference(System.String)">
            <summary>Convert to case value attribute value reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.GetMarkerIndex(System.String,System.String)">
            <summary>Get the marker index</summary>
            <param name="expression"></param>
            <param name="marker"></param>
            <returns></returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValueBase.GetActionValueType(System.Nullable{PayrollEngine.Client.Scripting.ValueType})">
            <summary>Get case value type</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3">
            <summary>Action case value</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference">
            <summary>Value reference</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference.ReferenceType">
            <summary>The action value mode</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference.ValueSource">
            <summary>The action value source</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference.ReferenceField">
            <summary>Reference as field name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference.CaseValue">
            <summary>The action case value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference.CaseValueType">
            <summary>The action case value type</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference.ValueMethod">
            <summary>The action value method</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference.AttributeKey">
            <summary>Attribute key</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference.AttributeType">
            <summary>Attribute type</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference.LookupKey">
            <summary>Lookup key</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference.LookupObjectKey">
            <summary>Lookup object key</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference.LookupRangeValue">
            <summary>Lookup range value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference.LookupType">
            <summary>Lookup value type</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueReference.MandatoryField">
            <summary>Mandatory field</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.Context">
            <summary>The context</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.SourceValue">
            <summary>The source value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueDate">
            <summary>The value date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.IsCaseChangeReference">
            <summary>True for case change reference value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.IsCaseValueReference">
            <summary>True for case value reference value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.IsLookupReference">
            <summary>True for lookup reference value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.IsCaseFieldAttribute">
            <summary>True for case field attribute value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.IsCaseValueAttribute">
            <summary>True for case value attribute value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.IsLookup">
            <summary>True for lookup value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.IsRangeLookup">
            <summary>True for range lookup value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.IsReference">
            <summary>True for reference value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ReferenceField">
            <summary>Case change reference as field name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.MandatoryField">
            <summary>Mandatory field value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ReferenceType">
            <summary>The action value mode</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ValueSource">
            <summary>The action value source</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.CaseValue">
            <summary>The action case value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.CaseValueType">
            <summary>The action case value type</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.Method">
            <summary>The action value method</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.AttributeKey">
            <summary>The action attribute key</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.AttributeType">
            <summary>The action attribute type</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.LookupKey">
            <summary>The action lookup key</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.LookupObjectKey">
            <summary>The action lookup object key</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.LookupRangeValue">
            <summary>The action lookup range value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.LookupType">
            <summary>The action lookup type</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.Reference">
            <summary>The value reference</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ResolvedValue">
            <summary>The resolved value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.#ctor(`0,System.Object,System.Nullable{System.DateTime})">
            <summary>Constructor</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.IsFulfilled">
            <summary>Check for fulfilled value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.GetValueType">
            <summary>Get case value type</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.GetResolvedValue">
            <summary>Resolved action value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ParseReference(`0,System.String,System.DateTime)">
            <summary>Parse value reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseValue`3.ToString">
            <summary>Action text</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseActionsBase">
            <summary>Base class for case actions</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.StringType">
            <summary>String type name</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.IntType">
            <summary>Integer type name</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.DecimalType">
            <summary>Decimal type name</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.DateType">
            <summary>Date type name</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.BooleanType">
            <summary>Boolean type name</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.ActionSourceStart">
            <summary>Action value source start</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.ActionSourceEnd">
            <summary>Action value source end</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.ActionSourcePeriod">
            <summary>Action value source period</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.ActionSourceValue">
            <summary>Action value source value</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.ActionSourceFieldAttribute">
            <summary>Action value source field attribute</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.ActionSourceValueAttribute">
            <summary>Action value source value attribute</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.ActionSourceLookup">
            <summary>Action lookup source value</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.ActionSourceRangeLookup">
            <summary>Action range lookup source value</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.ActionReferenceNone">
            <summary>Action reference none</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.ActionReferenceCaseValue">
            <summary>Action reference case value</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.ActionReferenceCaseChange">
            <summary>Action reference case change</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.CaseActionsBase.ActionReferenceLookup">
            <summary>Action reference lookup</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseActionsBase.Namespace">
            <summary>The action namespace</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseActionsBase.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseAvailableActions">
            <summary>Extension methods for the case change actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActions.CaseValueEqual(PayrollEngine.Client.Scripting.Function.CaseAvailableActionContext,System.String,System.Object,System.Object)">
            <summary>Validate for equal value</summary>
            <param name="context">The action context</param>
            <param name="source">The source case field</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActions.CaseValueNotEqual(PayrollEngine.Client.Scripting.Function.CaseAvailableActionContext,System.String,System.Object,System.Object)">
            <summary>Validate for different value</summary>
            <param name="context">The action context</param>
            <param name="source">The source case field</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActions.CaseValueGreaterThan(PayrollEngine.Client.Scripting.Function.CaseAvailableActionContext,System.String,System.Object,System.Object)">
            <summary>Validate for greater value</summary>
            <param name="context">The action context</param>
            <param name="source">The source case field</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActions.CaseValueGreaterEqualThan(PayrollEngine.Client.Scripting.Function.CaseAvailableActionContext,System.String,System.Object,System.Object)">
            <summary>Validate for greater or equal value</summary>
            <param name="context">The action context</param>
            <param name="source">The source case field</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActions.CaseValueLessThan(PayrollEngine.Client.Scripting.Function.CaseAvailableActionContext,System.String,System.Object,System.Object)">
            <summary>Validate for smaller value</summary>
            <param name="context">The action context</param>
            <param name="source">The source case field</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActions.CaseValueLessEqualThan(PayrollEngine.Client.Scripting.Function.CaseAvailableActionContext,System.String,System.Object,System.Object)">
            <summary>Validate for smaller or equal value</summary>
            <param name="context">The action context</param>
            <param name="source">The source case field</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActions.CaseValueBetween(PayrollEngine.Client.Scripting.Function.CaseAvailableActionContext,System.String,System.Object,System.Object,System.Object)">
            <summary>Validate range value</summary>
            <param name="context">The action context</param>
            <param name="source">The source case field</param>
            <param name="start">The range start value</param>
            <param name="end">The range end value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseAvailableActionContext">
            <summary>Case available action context</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActionContext.#ctor(PayrollEngine.Client.Scripting.Function.CaseAvailableFunction)">
            <summary>Constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseAvailableActionValueContext">
            <summary>Case available action case value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActionValueContext.#ctor(PayrollEngine.Client.Scripting.Function.CaseAvailableFunction)">
            <summary>Constructor</summary>
            <param name="function">The function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseAvailableActionValue`1">
            <summary>Action case available value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActionValue`1.#ctor(PayrollEngine.Client.Scripting.Function.CaseAvailableActionValueContext,System.Object,System.Nullable{System.DateTime})">
            <summary>Default constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseAvailableActionsBase">
            <summary>Base class for case available actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActionsBase.GetCompareCulture(System.Boolean)">
            <summary>Compare culture</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActionsBase.GetSourceActionValue``1(PayrollEngine.Client.Scripting.Function.CaseAvailableActionContext,System.String)">
            <summary>New source action</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActionsBase.GetActionValue``1(PayrollEngine.Client.Scripting.Function.CaseAvailableActionContext,System.Object,System.Nullable{System.DateTime})">
            <summary>New action</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableActionsBase.ResolveActionValue``1(PayrollEngine.Client.Scripting.Function.CaseAvailableActionContext,System.Object)">
            <summary>Resolve action value</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseAvailableFunction">
            <summary>Test if a case is available (default: true), optionally considering related source case values</summary>
            <example>
            <code language="c#">
            // Example with case value
            (int)Employee["Level"] >= 2
            </code>
            <code language="c#">
            // Example with related case value
            HasCaseValue("Wage")
            </code>
            <code language="c#">
            // Example with optional related case value
            HasCaseValue("Wage") ? (int)Employee["Level"] >= 2 : false
            </code>
            </example>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableFunction.GetAvailableActions">
            <summary>Get case available actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseAvailableFunction.IsAvailable">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseBuildActions">
            <summary>Extension methods for the case change actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.MinLimit(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Ensure lower limits</summary>
            <param name="context">The action context</param>
            <param name="minimum">The minimum value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.MaxLimit(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Ensure higher limits</summary>
            <param name="context">The action context</param>
            <param name="maximum">The maximum value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.Limit(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Ensure value range</summary>
            <param name="context">The action context</param>
            <param name="minimum">The minimum value</param>
            <param name="maximum">The maximum value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.SetValue(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set the case change value</summary>
            <param name="context">The action context</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.SetStart(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set the case change start date</summary>
            <param name="context">The action context</param>
            <param name="start">The case start date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.SetEnd(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set the case change end date</summary>
            <param name="context">The action context</param>
            <param name="end">The case end date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.SetStartEnd(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set the case change start end end date</summary>
            <param name="context">The action context</param>
            <param name="start">The date to set</param>
            <param name="end">The date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.SetAttribute(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set the case change field attribute value</summary>
            <param name="context">The action context</param>
            <param name="attributeName">The attribute name</param>
            <param name="value">The value to set (null=remove)</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.SetValueAttribute(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set the case value attribute value</summary>
            <param name="context">The action context</param>
            <param name="attributeName">The attribute name</param>
            <param name="value">The value to set (null=remove)</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.SetFieldValue(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set the case change field value</summary>
            <param name="context">The action context</param>
            <param name="target">The target case field</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.SetFieldStart(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set the case field change start date</summary>
            <param name="context">The action context</param>
            <param name="target">The target case field</param>
            <param name="start">The start date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.SetFieldEnd(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set the case field change end date</summary>
            <param name="context">The action context</param>
            <param name="target">The target case field</param>
            <param name="end">The end date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.SetFieldStartEnd(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object,System.Object)">
            <summary>Set the case field change start and end date</summary>
            <param name="context">The action context</param>
            <param name="target">The target case field</param>
            <param name="start">The date to set</param>
            <param name="end">The date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.SetFieldAttribute(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object,System.Object)">
            <summary>Set the case field attribute value</summary>
            <param name="context">The action context</param>
            <param name="target">The target attribute</param>
            <param name="attributeName">The attribute name</param>
            <param name="value">The value to set (null=remove)</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.SetFieldValueAttribute(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object,System.Object)">
            <summary>Set the case value attribute value</summary>
            <param name="context">The action context</param>
            <param name="target">The target attribute</param>
            <param name="attributeName">The attribute name</param>
            <param name="value">The value to set (null=remove)</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.Log(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.String)">
            <summary>Write log entry</summary>
            <param name="context">The action context</param>
            <param name="message">The log message</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildActions.AddTask(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.String,System.String,System.DateTime,System.String)">
            <summary>Add a user task</summary>
            <param name="context">The action context</param>
            <param name="name">The task name</param>
            <param name="instruction">The task instruction</param>
            <param name="scheduleDate">The task schedule date</param>
            <param name="category">The task category</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseBuildFunction">
            <summary>Build a case (default: true), optionally considering related source cases</summary>
            <example>
            <code language="c#">
            // Example with case value
            (int)Employee["Level"] >= 2
            </code>
            <code language="c#">
            // Example with related case value
            HasCaseValue("Wage")
            </code>
            <code language="c#">
            // Example with optional related case value
            HasCaseValue("Wage") ? (int)Employee["Level"] >= 2 : false
            </code>
            </example>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildFunction.GetBuildActions">
            <summary>Get case build actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildFunction.GetFieldBuildActions(System.String)">
            <summary>Get case field build actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseBuildFunction.Build">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseChangeActionContext">
            <summary>Case change action context</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseChangeActionContext.CaseFieldName">
            <summary>The case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeActionContext.#ctor(PayrollEngine.Client.Scripting.Function.CaseChangeFunction)">
            <summary>Constructor</summary>
            <param name="function">The function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeActionContext.#ctor(PayrollEngine.Client.Scripting.Function.CaseChangeFunction,System.String)">
            <summary>Constructor</summary>
            <param name="function">The function</param>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseChangeActionValueContext">
            <summary>Case change action case value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseChangeActionValueContext.CaseFieldName">
            <summary>The case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeActionValueContext.#ctor(PayrollEngine.Client.Scripting.Function.CaseChangeFunction,System.String)">
            <summary>Constructor</summary>
            <param name="function">The function</param>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeActionValueContext.#ctor(PayrollEngine.Client.Scripting.Function.CaseChangeFunction)">
            <summary>Constructor</summary>
            <param name="function">The function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeActionValueContext.GetCaseChangeValue(System.String)">
            <inheritdoc />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ActionCaseChangeValue`1">
            <summary>Action case change value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionCaseChangeValue`1.#ctor(PayrollEngine.Client.Scripting.Function.CaseChangeActionValueContext,System.Object,System.Nullable{System.DateTime})">
            <summary>Default constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseChangeActionsBase">
            <summary>Base class for case change actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeActionsBase.GetCompareCulture(System.Boolean)">
            <summary>Compare culture</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeActionsBase.GetActionValue``1(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>New source action</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeActionsBase.GetActionValue``1(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Nullable{System.DateTime})">
            <summary>New action</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeActionsBase.ResolveActionValue``1(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Resolve action value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeActionsBase.AddIssue(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.String)">
            <summary>Add issue</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeActionsBase.AddIssue(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.String,System.Object[])">
            <summary>Add issue</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeActionsBase.GetLocalIssueMessage(PayrollEngine.Client.Scripting.Function.CaseChangeFunction,System.String,System.String)">
            <summary>Get localized issue value</summary>
            <param name="function">The function</param>
            <param name="key">The issue key</param>
            <param name="defaultMessage">The default message</param>
            <remarks>Lookup name=Namespace.Actions, lookup key=issue name
            Format example: Invalid Email (1)</remarks>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseChangeFunction">
            <summary>Base class for case change functions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.CancellationDate">
            <summary>Get the cancellation date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.Cancellation">
            <summary>Get the cancellation state</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.CaseAvailable(System.String)">
            <summary>Test if a case is available</summary>
            <param name="caseName">The name of the case</param>
            <returns>True if the case is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.SetCaseAttribute(System.String,System.String,System.Object)">
            <summary>Set case attribute value</summary>
            <param name="caseName">The name of the case</param>
            <param name="attributeName">The name of the case attribute</param>
            <param name="value">The value of the case attribute</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.RemoveCaseAttribute(System.String,System.String)">
            <summary>Remove case attribute</summary>
            <param name="caseName">The name of the case</param>
            <param name="attributeName">The name of the case attribute</param>
            <returns>True if the case attribute has been removed</returns>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.Start">
            <summary>Get or set start date of the case field</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.End">
            <summary>Get or set end date of the case value by the case field name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.Value">
            <summary>Get or set case field value by the case field name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.PayrollValue">
            <summary>Get or set case value by the case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.GetFieldNames">
            <summary>Get field names</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.HasFields">
            <summary>Test if the case contains fields</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.IsFieldComplete(System.String)">
            <summary>Test if a case field is complete (no start, end and value)</summary>
            <param name="caseFieldName">Name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.IsFieldEmpty(System.String)">
            <summary>Test if a case field is empty</summary>
            <param name="caseFieldName">Name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.HasField(System.String)">
            <summary>Test if a case field is defined</summary>
            <param name="caseFieldName">Name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.FieldAvailable(System.String)">
            <summary>Test if case field is available</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the case field is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.FieldAvailable(System.String,System.Boolean)">
            <summary>Set if the case field is available</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="available">The case field available value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.InitField(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Object)">
            <summary>Initialize the case field</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="start">The case field start date</param>
            <param name="end">The case field end date</param>
            <param name="value">The case field value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.InitField(System.String,System.Nullable{System.DateTime},System.Object)">
            <summary>Initialize the case field</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="start">The case field start date</param>
            <param name="value">The case field value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.HasStart(System.String)">
            <summary>Test if a case field start is defined</summary>
            <param name="caseFieldName">Name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.GetStart(System.String)">
            <summary>Get the start date of a case field</summary>
            <param name="caseFieldName">Name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.SetStart(System.String,System.Nullable{System.DateTime})">
            <summary>Set the start date of a case field</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="start">The case field start date</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.InitStart(System.String,System.Nullable{System.DateTime})">
            <summary>Initialize the start date of a case field</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="start">The case field start date</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.HasEnd(System.String)">
            <summary>Test if a case field end is defined</summary>
            <param name="caseFieldName">Name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.GetEnd(System.String)">
            <summary>Get the end date of a case field</summary>
            <param name="caseFieldName">Name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.SetEnd(System.String,System.Nullable{System.DateTime})">
            <summary>Set the end date of a case field</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="end">The case field end date</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.InitEnd(System.String,System.Nullable{System.DateTime})">
            <summary>Initialize the end date of a case field</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="end">The case field end date</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.GetPeriod(System.String)">
            <summary>Get the value period of a case field</summary>
            <param name="caseFieldName">Name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.GetValueType(System.String)">
            <summary>Get a case value type</summary>
            <param name="caseFieldName">The name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.HasValue(System.String)">
            <summary>Test if a case field value is defined</summary>
            <param name="caseFieldName">Name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.GetValue(System.String)">
            <summary>Get the value of a case field</summary>
            <param name="caseFieldName">Name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.GetValue(System.String,System.Object)">
            <summary>Get the value of a case field with a default value</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="defaultValue">The case field default value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.GetValue``1(System.String)">
            <summary>Get the typed value of a case field</summary>
            <param name="caseFieldName">Name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.GetValue``1(System.String,``0)">
            <summary>Get the typed value of a case field with a default value</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="defaultValue">The case field default value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.SetValue(System.String,System.Object)">
            <summary>Set the value of a case field</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="value">The case field value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.SetValue(System.String,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Set the value of a case field</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="value">The case field value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.InitValue(System.String,System.Object)">
            <summary>Initialize the value of a case field</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="value">The case field value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.InitValue(System.String,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Initialize the value of a case field</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="value">The case field payroll value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.AddCaseValueTag(System.String,System.String)">
            <summary>Ass case value tag</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="tag">The tag to add</param>
            <returns>True if the case value tag has ben added</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.RemoveCaseValueTag(System.String,System.String)">
            <summary>Ass case value tag</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="tag">The tag to remove</param>
            <returns>True if the case value tag has ben removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.SetCaseFieldAttribute(System.String,System.String,System.Object)">
            <summary>Set case field attribute value</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="attributeName">The name of the case field attribute</param>
            <param name="value">The value of the case field attribute (null = remove attribute)</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.RemoveCaseFieldAttribute(System.String,System.String)">
            <summary>Remove case field attribute</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="attributeName">The name of the case field attribute</param>
            <returns>True if the case field attribute has been removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.SetCaseValueAttribute(System.String,System.String,System.Object)">
            <summary>Set case value attribute value</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="attributeName">The name of the case field attribute</param>
            <param name="value">The value of the case value attribute (null = remove attribute)</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.RemoveCaseValueAttribute(System.String,System.String)">
            <summary>Remove case value attribute</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="attributeName">The name of the case field attribute</param>
            <returns>True if the case value attribute has been removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.GetValueSlots(System.String)">
            <summary>Get the case slot values, grouped by case value</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The case values in a dictionary grouped by case slot value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseChangeFunction.GetValueSlots``1(System.String)">
            <summary>Get the typed case slot values, grouped by case value</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The case values in a dictionary grouped by case slot value</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseFunction">
            <summary>Base class for case functions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseFunction.CaseName">
            <summary>The case name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseFunction.CaseType">
            <summary>The case type</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseFunction.GetCaseAttribute(System.String)">
            <summary>Get case attribute value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseFunction.GetCaseAttribute``1(System.String,``0)">
            <summary>Get case attribute typed value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseFunction.InvokeWebhook``1(System.String,System.Object)">
            <summary>Invoke case webhook</summary>
            <param name="requestOperation">The request operation</param>
            <param name="requestMessage">The webhook request message</param>
            <returns>The webhook response object</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseInputActions">
            <summary>Extension methods for case input actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.HiddenField(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Hide all field inputs</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.ShowFieldDescription(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Show field description</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldStartLabel(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field start label</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="label">The field start label</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldStartHelp(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field start help</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="help">The field start help</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldStartRequired(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field start required</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldStartReadOnly(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field start read only</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldStartFormat(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field start format</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="format">The format string</param>
            <remarks>see www.learn.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings</remarks>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldStartPickerOpenDay(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field start day date picker</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldStartPickerOpenMonth(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field start month date picker</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldStartPickerOpenYear(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field start year date picker</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldStartPickerTypeDateTime(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field start picker date time</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldEndLabel(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field end label</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="label">The field end label</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldEndHelp(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field end help</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="help">The field end help</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldEndRequired(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field end required</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldEndReadOnly(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field end read only</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldEndFormat(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field end format</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="format">The format string</param>
            <remarks>see www.learn.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c</remarks>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldEndPickerOpenDay(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field end day date picker</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldEndPickerOpenMonth(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field end month date picker</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldEndPickerOpenYear(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field end year date picker</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldEndPickerTypeDateTime(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field end time picker</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldValueLabel(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field value label</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="label">The label text</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldValueAdornment(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field value adornment</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="adornment">The adornment text</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldValueHelp(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field value help</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="help">The adornment text</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldValueMask(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field value mask</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="mask">The text mask</param>
            <remarks>see www.learn.microsoft.com/en-us/dotnet/api/system.windows.forms.maskedtextbox.mask</remarks>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldValueRequired(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field value required</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldValueReadOnly(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field value read only</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldValuePickerOpenDay(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field value day date picker</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldValuePickerOpenMonth(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field value month date picker</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldValuePickerOpenYear(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field value year date picker</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldCulture(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field value culture</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="culture">The culture</param>
            <remarks>see www.learn.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c</remarks>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldMinValue(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field minimum value</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="minimum">The minimum value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldMaxValue(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field maximum value</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="maximum">The maximum value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldStepSize(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field numeric step size</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="stepSize">The step size</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldFormat(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field value format</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="format">The text format</param>
            <remarks>see www.learn.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings</remarks>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldLineCount(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field text line count</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="count">The line count</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldMaxLength(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field maximum text length</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="length">The maximum length</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldCheck(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field boolean as checkbox</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldAttachmentNone(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field without file attachments</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldAttachmentOptional(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field optional file attachments</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldAttachmentMandatory(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set field mandatory file attachments</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFieldAttachmentExtensions(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Set field attachments file extensions</summary>
            <param name="context">The action context</param>
            <param name="field">The target field</param>
            <param name="extensions">The file extensions</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.Hidden(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Hide all inputs</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.ShowDescription(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Show description</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetStartLabel(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set start label</summary>
            <param name="context">The action context</param>
            <param name="label">The start label</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetStartHelp(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set start help</summary>
            <param name="context">The action context</param>
            <param name="help">The start help</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetStartRequired(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set start required</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetStartReadOnly(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set  start to read only</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetStartFormat(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set start format</summary>
            <param name="context">The action context</param>
            <param name="format">The format string</param>
            <remarks>see www.learn.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings</remarks>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetStartPickerOpenDay(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set start day date picker</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetStartPickerOpenMonth(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set start month date picker</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetStartPickerOpenYear(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set start year date picker</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetStartPickerTypeDateTime(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set start time picker</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetEndLabel(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set end label</summary>
            <param name="context">The action context</param>
            <param name="label">The end label</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetEndHelp(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set end help</summary>
            <param name="context">The action context</param>
            <param name="help">The end help</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetEndRequired(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set end required</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetEndReadOnly(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set end read only</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetEndFormat(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set end format</summary>
            <param name="context">The action context</param>
            <param name="format">The format string</param>
            <remarks>see www.learn.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c</remarks>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetEndPickerOpenDay(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set end day date picker</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetEndPickerOpenMonth(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set end month date picker</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetEndPickerOpenYear(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set end year date picker</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetEndPickerTypeDateTime(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set end time picker</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetValueLabel(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set value label</summary>
            <param name="context">The action context</param>
            <param name="label">The label text</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetValueAdornment(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set value adornment</summary>
            <param name="context">The action context</param>
            <param name="adornment">The adornment text</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetValueHelp(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set value help</summary>
            <param name="context">The action context</param>
            <param name="help">The adornment text</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetValueMask(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set value mask</summary>
            <param name="context">The action context</param>
            <param name="mask">The text mask</param>
            <remarks>see www.learn.microsoft.com/en-us/dotnet/api/system.windows.forms.maskedtextbox.mask</remarks>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetValueRequired(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set value required</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetValueReadOnly(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set value read only</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetValueDayPicker(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set value day date picker</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetValueMonthPicker(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set value month date picker</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetValueYearPicker(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set value year date picker</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetCulture(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set value culture</summary>
            <param name="context">The action context</param>
            <param name="culture">The culture</param>
            <remarks>see www.learn.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c</remarks>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetMinValue(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set minimum value</summary>
            <param name="context">The action context</param>
            <param name="minimum">The minimum value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetMaxValue(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set maximum value</summary>
            <param name="context">The action context</param>
            <param name="maximum">The maximum value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetStepSize(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set numeric step size</summary>
            <param name="context">The action context</param>
            <param name="stepSize">The step size</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetFormat(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set value format</summary>
            <param name="context">The action context</param>
            <param name="format">The text format</param>
            <remarks>see www.learn.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings</remarks>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetLineCount(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set text line count</summary>
            <param name="context">The action context</param>
            <param name="count">The line count</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetMaxLength(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set maximum text length</summary>
            <param name="context">The action context</param>
            <param name="length">The maximum length</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetCheck(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set boolean as checkbox</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetAttachmentNone(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set without file attachments</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SeAttachmentOptional(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set optional file attachments</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetAttachmentMandatory(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Set mandatory file attachments</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseInputActions.SetAttachmentExtensions(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Set attachments file extensions</summary>
            <param name="context">The action context</param>
            <param name="extensions">The file extensions</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseRelationBuildActions">
            <summary>Extension methods for the case change actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationBuildActions.SetTargetFieldValue(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Object)">
            <summary>Set the case relation target field value</summary>
            <param name="context">The action context</param>
            <param name="target">The case field on the target case</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationBuildActions.SetTargetFieldStart(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Object)">
            <summary>Set the case relation target field start date</summary>
            <param name="context">The action context</param>
            <param name="target">The case field on the target case</param>
            <param name="start">The start date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationBuildActions.SetTargetFieldEnd(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Object)">
            <summary>Set the case relation target field end date</summary>
            <param name="context">The action context</param>
            <param name="target">The case field on the target case</param>
            <param name="end">The end date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationBuildActions.SetTargetFieldStartEnd(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Object,System.Object)">
            <summary>Set the case relation target field start and end date</summary>
            <param name="context">The action context</param>
            <param name="target">The case field on the target case</param>
            <param name="start">The date to set</param>
            <param name="end">The date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationBuildActions.Log(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.String)">
            <summary>Write log entry</summary>
            <param name="context">The action context</param>
            <param name="message">The log message</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationBuildActions.AddTask(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.String,System.String,System.DateTime,System.String)">
            <summary>Add a user task</summary>
            <param name="context">The action context</param>
            <param name="name">The task name</param>
            <param name="instruction">The task instruction</param>
            <param name="scheduleDate">The task schedule date</param>
            <param name="category">The task category</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseRelationBuildFunction">
            <summary>Build related case, considering related source case values, see <see cref="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourceValue"/> and <see cref="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.HasSourceValue(System.String)"/></summary>
            <example>
            <code language="c#">
            // Example with case value
            (int)Employee["Level"] >= 2
            </code>
            <code language="c#">
            // Example with related case value
            TargetValue["Wage"] = (decimal)SourceValue[\"Wage\"] * 0.125M; TargetStart[\"Wage\"] = SourceStart[\"Wage\"]?.AddMonths(3)
            </code>
            </example>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationBuildFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationBuildFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationBuildFunction.GetBuildActions">
            <summary>Get case relation build actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationBuildFunction.Build">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseRelationActionContext">
            <summary>Case relation action context </summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationActionContext.#ctor(PayrollEngine.Client.Scripting.Function.CaseRelationFunction)">
            <summary>Constructor</summary>
            <param name="function">The function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseRelationActionValueContext">
            <summary>Case change action case value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationActionValueContext.#ctor(PayrollEngine.Client.Scripting.Function.CaseRelationFunction)">
            <summary>Constructor</summary>
            <param name="function">The function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationActionValueContext.GetCaseChangeValue(System.String)">
            <inheritdoc />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseRelationActionCaseValue`1">
            <summary>Case relation action case change value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationActionCaseValue`1.#ctor(PayrollEngine.Client.Scripting.Function.CaseRelationActionValueContext,System.Object,System.Nullable{System.DateTime})">
            <summary>Default constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseRelationActionsBase">
            <summary>Base class for case change actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationActionsBase.GetCompareCulture(System.Boolean)">
            <summary>Compare culture</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationActionsBase.GetSourceActionValue``1(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.String)">
            <summary>New source action</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationActionsBase.GetActionValue``1(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Nullable{System.DateTime})">
            <summary>New action</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationActionsBase.ResolveActionValue``1(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object)">
            <summary>Resolve action value</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseRelationFunction">
            <summary>Base class for case relation functions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourceCaseName">
            <summary>Gets the name of the source case</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourceCaseSlot">
            <summary>Gets the source case slot</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourceCaseCancellationDate">
            <summary>Get the source case cancellation date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourceCaseCancellation">
            <summary>Get the source cancellation state</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourceStart">
            <summary>Get start date of the source case value by the case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceStart(System.String)">
            <summary>Get the start date of a case field</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourceEnd">
            <summary>Get end date of the source case value by the case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceEnd(System.String)">
            <summary>Get end date of the source case value by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceValueType(System.String)">
            <summary>Get the source case value type</summary>
            <param name="caseFieldName">The name of the case field</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourceValue">
            <summary>Get source case value by the case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceValue(System.String)">
            <summary>Get source case value by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceValue(System.String,System.Object)">
            <summary>Get source case value by the case field name with a default value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="defaultValue">The default value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceValue``1(System.String)">
            <summary>Get source case field typed value by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceValue``1(System.String,``0)">
            <summary>Get source case field typed value by the case field name with a default value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="defaultValue">The default value</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourcePayrollValue">
            <summary>Get source case field <see cref="T:PayrollEngine.Client.Scripting.PayrollValue"/> by the case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourcePayrollValue(System.String)">
            <summary>Get source case field <see cref="T:PayrollEngine.Client.Scripting.PayrollValue"/> by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourcePeriod(System.String)">
            <summary>Get period of a source case field</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceFieldNames">
            <summary>Get source field names</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.HasSourceFields">
            <summary>Test if the source case contains fields</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.HasSourceField(System.String)">
            <summary>Test if a source case field is defined</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.IsSourceFieldComplete(System.String)">
            <summary>Test if a source case field is complete</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.IsSourceFieldEmpty(System.String)">
            <summary>Test if a source case field is empty (no start, end and value)</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.HasSourceStart(System.String)">
            <summary>Test if source case field start is defined</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.HasSourceEnd(System.String)">
            <summary>Test if source case field end is defined</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.HasSourceValue(System.String)">
            <summary>Test if a source case value is defined</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourceValueEquals``1(System.String,``0)">
            <summary>Test a source case value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="testValue">The value to test</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourceValueContainsCsvToken(System.String,System.String)">
            <summary>Test a string source case value containing a csv token</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="token">The token to search</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourceValueIsWithin(System.String,System.Int32,System.Int32)">
            <summary>Test if an integer source case value is within a range</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="min">The minimum value</param>
            <param name="max">The maximum value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourceValueIsWithin(System.String,System.Decimal,System.Decimal)">
            <summary>Test if a decimal source case value is within a range</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="min">The minimum value</param>
            <param name="max">The maximum value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceCaseAttribute(System.String)">
            <summary>Get source case attribute value</summary>
            <param name="attributeName">The attribute name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceCaseAttribute``1(System.String,``0)">
            <summary>Get attribute value</summary>
            <param name="attributeName">The attribute name</param>
            <param name="defaultValue">The default value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceCaseFieldAttribute(System.String,System.String)">
            <summary>Get source case field attribute value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="attributeName">The attribute name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceCaseFieldAttribute``1(System.String,System.String,``0)">
            <summary>Get source case field attribute typed value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="attributeName">The attribute name</param>
            <param name="defaultValue">The default value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceCaseValueAttribute(System.String,System.String)">
            <summary>Get source case value attribute value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="attributeName">The attribute name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetSourceCaseValueAttribute``1(System.String,System.String,``0)">
            <summary>Get source case value attribute typed value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="attributeName">The attribute name</param>
            <param name="defaultValue">The default value</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetCaseName">
            <summary>Gets the name of the target case</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetCaseSlot">
            <summary>Gets the target case slot</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetCaseCancellationDate">
            <summary>Get the target case cancellation date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetCaseCancellation">
            <summary>Get the target cancellation state</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetStart">
            <summary>Get or set the start date of the target case value by the case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetStart(System.String)">
            <summary>Get the start date of the target case value by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SetTargetStart(System.String,System.Nullable{System.DateTime})">
            <summary>Set the start date of the target case value by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="start">The start date</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetEnd">
            <summary>Get or set end date of the target case value by the case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetEnd(System.String)">
            <summary>Get end date of the target case value by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SetTargetEnd(System.String,System.Nullable{System.DateTime})">
            <summary>Set the end date of the target case value by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="end">The end date</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetValue">
            <summary>Get or set target case value by the case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetValue(System.String)">
            <summary>Get target case value by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetValue(System.String,System.Object)">
            <summary>Get target case value by the case field name with a default value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="defaultValue">The default value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetValue``1(System.String)">
            <summary>Get target case typed value by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetValue``1(System.String,``0)">
            <summary>Get target case typed value by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="defaultValue">The default value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SetTargetValue(System.String,System.Object)">
            <summary>Set target case value by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="value">The target value</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetPayrollValue">
            <summary>Get or set target case <see cref="T:PayrollEngine.Client.Scripting.PayrollValue"/> by the case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetPayrollValue(System.String)">
            <summary>Get target case value by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SetTargetPayrollValue(System.String,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Set target case value by the case field name</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="value">The target value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetPeriod(System.String)">
            <summary>Get period of a target case field</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetFieldNames">
            <summary>Get target field names</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.HasTargetFields">
            <summary>Test if the target case contains fields</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.HasTargetField(System.String)">
            <summary>Test if a target case field is defined</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.IsTargetFieldComplete(System.String)">
            <summary>Test if a target case field is complete</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.IsTargetFieldEmpty(System.String)">
            <summary>Test if a target case field is empty (no start, end and value)</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetFieldAvailable(System.String)">
            <summary>Test if a target case field is available</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetFieldAvailable(System.String,System.Boolean)">
            <summary>Set if the target case field is available</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="available">Target field available state</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.HasTargetStart(System.String)">
            <summary>Test if target case field start is defined</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.InitTargetStart(System.String,System.Nullable{System.DateTime})">
            <summary>Initialize the target start</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="start">The start date</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.HasTargetEnd(System.String)">
            <summary>Test if target case field end is defined</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.InitTargetEnd(System.String,System.Nullable{System.DateTime})">
            <summary>Initialize the target end</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="end">The end date</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetValueType(System.String)">
            <summary>Get the target case value type</summary>
            <param name="caseFieldName">The name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.HasTargetValue(System.String)">
            <summary>Test if a target case value is defined</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.InitTargetValue(System.String,System.Object)">
            <summary>Initialize the target value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="value">The target init value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetValueEquals``1(System.String,``0)">
            <summary>Test a target case value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="testValue">The value to test</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetValueContainsCsvToken(System.String,System.String)">
            <summary>Test if a string target case value for a csv separated token</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="token">The token to search</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetValueHasSourceSlotCsvToken(System.String)">
            <summary>Test a string target case value containing a csv token, matching the target slot</summary>
            <param name="caseFieldName">The case field name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetValueIsWithin(System.String,System.Int32,System.Int32)">
            <summary>Test if an integer target case value is within a range</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="min">The minimum value</param>
            <param name="max">The maximum value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.TargetValueIsWithin(System.String,System.Decimal,System.Decimal)">
            <summary>Test if a decimal target case value is within a range</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="min">The minimum value</param>
            <param name="max">The maximum value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetCaseAttribute(System.String)">
            <summary>Get target case attribute value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetCaseAttribute``1(System.String,``0)">
            <summary>Get attribute value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetCaseFieldAttribute(System.String,System.String)">
            <summary>Get target case field attribute value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="attributeName">The attribute name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetCaseFieldAttribute``1(System.String,System.String,``0)">
            <summary>Get target case field attribute typed value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="attributeName">The attribute name</param>
            <param name="defaultValue">The default value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetCaseValueAttribute(System.String,System.String)">
            <summary>Get target case value attribute value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="attributeName">The attribute name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.GetTargetCaseValueAttribute``1(System.String,System.String,``0)">
            <summary>Get target case value attribute typed value</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="attributeName">The attribute name</param>
            <param name="defaultValue">The default value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.InitStart(System.String,System.String)">
            <summary>Initializes the target case field start date from the source case field</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.CopyStart(System.String,System.String)">
            <summary>Copy the case field start date from source to target/// </summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.InitEnd(System.String,System.String)">
            <summary>Initializes the target case field end date from the source case field</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.CopyEnd(System.String,System.String)">
            <summary>Copy the case field end date from source to target</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.InitValue(System.String,System.String)">
            <summary>Initializes the target case value from the source case field</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.CopyValue(System.String,System.String)">
            <summary>Copy the case value from source to target</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.InvokeWebhook``1(System.String,System.Object)">
            <summary>Invoke case webhook</summary>
            <param name="requestOperation">The request operation</param>
            <param name="requestMessage">The webhook request message</param>
            <returns>The webhook response object</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseRelationValidateActions">
            <summary>Extension methods for the case change actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateActions.IsTrue(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Object)">
            <summary>Validate for true value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateActions.IsFalse(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Object)">
            <summary>Validate for false value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateActions.Equal(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Object,System.Object)">
            <summary>Validate for equal value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateActions.NotEqual(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Object,System.Object)">
            <summary>Validate for different value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateActions.GreaterThan(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Object,System.Object)">
            <summary>Validate for greater value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateActions.GreaterEqualThan(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Object,System.Object)">
            <summary>Validate for greater or equal value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateActions.LessThan(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Object,System.Object)">
            <summary>Validate for smaller value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateActions.LessEqualThan(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Object,System.Object)">
            <summary>Validate for smaller or equal value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateActions.Between(PayrollEngine.Client.Scripting.Function.CaseRelationActionContext,System.Object,System.Object,System.Object,System.Object)">
            <summary>Validate range value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="start">The range start date</param>
            <param name="end">The range end date</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseRelationValidateFunction">
            <summary>Validate related case, considering related source case values, see <see cref="P:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.SourceValue"/> and <see cref="M:PayrollEngine.Client.Scripting.Function.CaseRelationFunction.HasSourceValue(System.String)"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateFunction.GetValidateActions">
            <summary>Get case relation validate actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateFunction.HasIssues">
            <summary>Test for issues</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateFunction.AddIssue(System.String,System.Int32)">
            <summary>Add a new case issue</summary>
            <param name="message">The issue message</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateFunction.AddIssue(System.String,System.String,System.Int32)">
            <summary>Add a new case field issue</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="message">The issue message</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseRelationValidateFunction.Validate">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseValidateActions">
            <summary>Extension methods for the case change actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.Email(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Validate email address</summary>
            <param name="context">The action context</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.Regex(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.String)">
            <summary>Validate regular expression</summary>
            <param name="context">The action context</param>
            <param name="pattern">The regular expression test pattern</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.Defined(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Validate for defined value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.Undefined(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext)">
            <summary>Validate for undefined value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.IsTrue(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Validate for true value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.IsFalse(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Validate for false value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.Equal(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object,System.Object)">
            <summary>Validate for equal value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.NotEqual(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object,System.Object)">
            <summary>Validate for different value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.GreaterThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object,System.Object)">
            <summary>Validate for greater value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.GreaterEqualThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object,System.Object)">
            <summary>Validate for greater or equal value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.LessThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object,System.Object)">
            <summary>Validate for smaller value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.LessEqualThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object,System.Object)">
            <summary>Validate for smaller or equal value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.Between(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object,System.Object,System.Object)">
            <summary>Validate range value</summary>
            <param name="context">The action context</param>
            <param name="source">The source value</param>
            <param name="start">The range start date</param>
            <param name="end">The range end date</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.ValueEqual(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Validate for equal case value</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.ValueNotEqual(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Validate for not equal value</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.ValueGreaterThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Validate value greater than a criteria</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.ValueGreaterEqualThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Validate value greater equal than a criteria</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.ValueLessThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Validate value less than a criteria</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.ValueLessEqualThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Validate value less equal than a criteria</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.ValueBetween(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object,System.Object)">
            <summary>Validate range case value</summary>
            <param name="context">The action context</param>
            <param name="start">The range start date</param>
            <param name="end">The range end date</param>
            <param name="compareDate">The compare date for case values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.StartEqual(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for equal case value start</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.StartNotEqual(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for different case value start</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.StartGreaterThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for greater case value start</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.StartGreaterEqualThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for greater or equal case value start</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.StartLessThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for smaller case value start</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.StartLessEqualThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for smaller or equal case value start</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.StartBetween(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Validate range case value start</summary>
            <param name="context">The action context</param>
            <param name="start">The range start date</param>
            <param name="end">The range end date</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.EndEqual(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for equal case value end</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.EndNotEqual(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for different case value end</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.EndGreaterThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for greater case value end</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.EndGreaterEqualThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for greater or equal case value end</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.EndLessThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for smaller case value end</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.EndLessEqualThan(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for smaller or equal case value end</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.EndBetween(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Validate range case value end</summary>
            <param name="context">The action context</param>
            <param name="start">The range start date</param>
            <param name="end">The range end date</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.FieldPeriodBefore(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.String,System.Object)">
            <summary>Validate for moment before field period</summary>
            <param name="context">The action context</param>
            <param name="fieldName">The field name</param>
            <param name="moment">The moment to test</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.FieldPeriodNotBefore(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.String,System.Object)">
            <summary>Validate for moment not before field period</summary>
            <param name="context">The action context</param>
            <param name="fieldName">The field name</param>
            <param name="moment">The moment to test</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.FieldPeriodWithin(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.String,System.Object,System.Boolean)">
            <summary>Validate for moment within field period</summary>
            <param name="context">The action context</param>
            <param name="fieldName">The field name</param>
            <param name="moment">The moment to test</param>
            <param name="closedPeriod">Enforce closed period</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.FieldPeriodNotWithin(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.String,System.Object,System.Boolean)">
            <summary>Validate for moment not within field period</summary>
            <param name="context">The action context</param>
            <param name="fieldName">The field name</param>
            <param name="moment">The moment to test</param>
            <param name="closedPeriod">Enforce closed period</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.FieldPeriodAfter(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.String,System.Object,System.Boolean)">
            <summary>Validate for moment after field period</summary>
            <param name="context">The action context</param>
            <param name="fieldName">The field name</param>
            <param name="moment">The moment to test</param>
            <param name="closedPeriod">Enforce closed period</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.FieldPeriodNotAfter(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.String,System.Object,System.Boolean)">
            <summary>Validate for moment not after field period</summary>
            <param name="context">The action context</param>
            <param name="fieldName">The field name</param>
            <param name="moment">The moment to test</param>
            <param name="closedPeriod">Enforce closed period</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.FieldPeriodOverlap(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.String,System.Object,System.Object,System.Boolean)">
            <summary>Validate for period overlapping the field period</summary>
            <param name="context">The action context</param>
            <param name="fieldName">The field name</param>
            <param name="periodStart">The period start date</param>
            <param name="periodEnd">The period end date</param>
            <param name="closedPeriod">Enforce closed period</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.FieldPeriodNotOverlap(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.String,System.Object,System.Object,System.Boolean)">
            <summary>Validate for period not overlapping the field period</summary>
            <param name="context">The action context</param>
            <param name="fieldName">The field name</param>
            <param name="periodStart">The period start date</param>
            <param name="periodEnd">The period end date</param>
            <param name="closedPeriod">Enforce closed period</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.PeriodBefore(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for moment before period</summary>
            <param name="context">The action context</param>
            <param name="moment">The moment to test</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.PeriodNotBefore(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for moment not before period</summary>
            <param name="context">The action context</param>
            <param name="moment">The moment to test</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.PeriodWithin(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Boolean)">
            <summary>Validate for moment within period</summary>
            <param name="context">The action context</param>
            <param name="moment">The moment to test</param>
            <param name="closedPeriod">Enforce closed period</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.PeriodNotWithin(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Boolean)">
            <summary>Validate for moment not within period</summary>
            <param name="context">The action context</param>
            <param name="moment">The moment to test</param>
            <param name="closedPeriod">Enforce closed period</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.PeriodAfter(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Boolean)">
            <summary>Validate for moment after period</summary>
            <param name="context">The action context</param>
            <param name="moment">The moment to test</param>
            <param name="closedPeriod">Enforce closed period</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.PeriodNotAfter(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Boolean)">
            <summary>Validate for moment not after period</summary>
            <param name="context">The action context</param>
            <param name="moment">The moment to test</param>
            <param name="closedPeriod">Enforce closed period</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.PeriodOverlap(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object,System.Boolean)">
            <summary>Validate for period overlapping the period</summary>
            <param name="context">The action context</param>
            <param name="periodStart">The period start date</param>
            <param name="periodEnd">The period end date</param>
            <param name="closedPeriod">Enforce closed period</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.PeriodNotOverlap(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object,System.Boolean)">
            <summary>Validate for period not overlapping the period</summary>
            <param name="context">The action context</param>
            <param name="periodStart">The period start date</param>
            <param name="periodEnd">The period end date</param>
            <param name="closedPeriod">Enforce closed period</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.MinLength(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate for minimum string length</summary>
            <param name="context">The action context</param>
            <param name="minLength">The minimum string length</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.MaxLength(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate string maximal length</summary>
            <param name="context">The action context</param>
            <param name="maxLength">The maximum string length</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.Length(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object)">
            <summary>Validate string length</summary>
            <param name="context">The action context</param>
            <param name="length">The string length</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.LengthBetween(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Object)">
            <summary>Validate string length between a range</summary>
            <param name="context">The action context</param>
            <param name="minLength">The minimum string length</param>
            <param name="maxLength">The maximum string length</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.EqualText(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Boolean)">
            <summary>Validate text equal ignoring the character case</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
            <param name="ignoreCase">Ignore the character case</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateActions.NotEqualText(PayrollEngine.Client.Scripting.Function.CaseChangeActionContext,System.Object,System.Boolean)">
            <summary>Validate for different text</summary>
            <param name="context">The action context</param>
            <param name="compare">The compare value</param>
            <param name="ignoreCase">Ignore the character case</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseValidateFunction">
            <summary>Validate a case (default: true), optionally considering related source cases</summary>
            <example>
            <code language="c#">
            // Example with case value
            (int)Employee["Level"] >= 2
            </code>
            <code language="c#">
            // Example with related case value
            HasCaseValue("Wage")
            </code>
            <code language="c#">
            // Example with optional related case value
            HasCaseValue("Wage") ? (int)Employee["Level"] >= 2 : false
            </code>
            </example>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateFunction.GetValidateActions">
            <summary>Get case validate actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateFunction.GetFieldValidateActions(System.String)">
            <summary>Get case field validate actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateFunction.HasIssues">
            <summary>Test for issues</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateFunction.AddIssue(System.String)">
            <summary>Add a new case issue</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateFunction.AddIssue(System.String,System.String)">
            <summary>Add a new case field issue</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValidateFunction.Validate">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CollectorApplyFunction">
            <summary>Apply value to a collector (default: wage type value)</summary>
            <example>
            <code language="c#">
            // Example restricted input wage type value
            System.Math.Max(WageTypeValue, 5000)
            </code>
            <code language="c#">
            // Example restricted to a wage type
            WageTypeNumber == 2250 ? WageTypeValue : null
            </code>
            <code language="c#">
            // Example restricted to the collector summary
            CollectorSum + WageTypeValue > 10000 ? 10000 - CollectorSum + WageTypeValue : WageTypeValue
            </code>
            </example>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorApplyFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorApplyFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorApplyFunction.WageTypeNumber">
            <summary>The wage type number</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorApplyFunction.WageTypeName">
            <summary>The wage type name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorApplyFunction.WageTypeValue">
            <summary>The wage type result value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorApplyFunction.GetValue">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CollectorEndFunction">
            <summary>End the collector</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorEndFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorEndFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorEndFunction.GetValues">
            <summary>Get collector values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorEndFunction.SetValues(System.Decimal[])">
            <summary>Set collector values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorEndFunction.End">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CollectorFunction">
            <summary>Base class for collector functions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.Collector">
            <summary>Get a collector value by collector name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.ResultAttribute">
            <summary>Get or set a wage type result attribute value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.ResultAttributePayrollValue">
            <summary>Get or set a wage type result attribute <see cref="T:PayrollEngine.Client.Scripting.PayrollValue"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.CollectorName">
            <summary>The collector name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.CollectorGroups">
            <summary>The collector groups</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.CollectType">
            <summary>The collect type</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.CollectorThreshold">
            <summary>The threshold value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.CollectorMinResult">
            <summary>The minimum allowed value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.CollectorMaxResult">
            <summary>The maximum allowed value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.CollectorResult">
            <summary>The current collector result</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.CollectorCount">
            <summary>Collected values count</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.CollectorSum">
            <summary>The summary of the collected value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.CollectorMin">
            <summary>The minimum collected value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.CollectorMax">
            <summary>The maximum collected value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CollectorFunction.CollectorAverage">
            <summary>The average of the collected value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorFunction.Reset">
            <summary>Resets the collector to his initial state</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorFunction.GetResultTags">
            <summary>Get the collector result tags</summary>
            <returns>The collector result tags</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorFunction.SetResultTags(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Set the collector result tags</summary>
            <param name="tags">The result tags</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorFunction.GetCollectorAttribute(System.String)">
            <summary>Get attribute value</summary>
            <param name="attributeName">The attribute name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorFunction.GetCollectorAttribute``1(System.String,``0)">
            <summary>Get attribute typed value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorFunction.GetCollectorCurrentConsolidatedValue(PayrollEngine.Client.Scripting.CollectorConsolidatedResultQuery)">
            <summary>Get consolidated and current period employee collector results by query</summary>
            <param name="query">The result query</param>
            <returns>Consolidated employee collector results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorFunction.AddPayrunResult(System.String,System.Object,System.Nullable{PayrollEngine.Client.Scripting.ValueType},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Add payrun result using the current period</summary>
            <param name="name">The result name</param>
            <param name="value">The result value</param>
            <param name="valueType">The result value type</param>
            <param name="source">The result source</param>
            <param name="slot">The result slot</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The wage type custom result attributes</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorFunction.AddPayrunResult(System.String,System.Object,System.DateTime,System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.ValueType},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Add payrun result</summary>
            <param name="name">The result name</param>
            <param name="value">The result value</param>
            <param name="startDate">The start date</param>
            <param name="endDate">The end date</param>
            <param name="valueType">The result value type</param>
            <param name="source">The result source</param>
            <param name="slot">The result slot</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The wage type custom result attributes</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorFunction.AddCustomResult(System.String,System.Decimal,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{PayrollEngine.Client.Scripting.ValueType})">
            <summary>Adds a custom collector result, using the current period</summary>
            <param name="source">The value source</param>
            <param name="value">The period value</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The collector custom result attributes</param>
            <param name="valueType">The result value type (numeric), default is the collector value type</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorFunction.AddCustomResult(System.String,System.Decimal,System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{PayrollEngine.Client.Scripting.ValueType})">
            <summary>Adds a custom collector result</summary>
            <param name="source">The value source</param>
            <param name="value">The period value</param>
            <param name="startDate">The start date</param>
            <param name="endDate">The end date</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The collector custom result attributes</param>
            <param name="valueType">The result value type (numeric), default is the collector value type</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorFunction.ScheduleRetroPayrun(System.DateTime,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Schedule a retro payrun</summary>
            <param name="scheduleDate">The payrun schedule date, must be before the current period</param>
            <param name="resultTags">The result tags</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CollectorStartFunction">
            <summary>Start the collector</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorStartFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorStartFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorStartFunction.GetValues">
            <summary>Get collector values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorStartFunction.SetValues(System.Decimal[])">
            <summary>Set collector values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CollectorStartFunction.Start">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.Function">
            <summary>Base class for any scripting function</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.Function.Runtime">
            <exclude />
            <summary>The function runtime</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.Function.DefaultActionNamespace">
            <exclude />
            <summary>The default namespace name for function actions</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.Function.InputActionNamespace">
            <exclude />
            <summary>The input namespace name for function actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.#ctor(System.Object)">
            <summary>New function instance</summary>
            <param name="runtime">The function runtime</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.Function.UserCulture">
            <summary>The user culture</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.Function.TenantId">
            <summary>The tenant id</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.Function.TenantIdentifier">
            <summary>The tenant identifier</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.GetTenantAttribute(System.String)">
            <summary>Get tenant attribute value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.GetTenantAttribute``1(System.String,``0)">
            <summary>Get tenant attribute typed value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.Function.UserId">
            <summary>The user id</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.Function.UserIdentifier">
            <summary>The user identifier</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.GetUserAttribute(System.String)">
            <summary>Get user attribute value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.GetUserAttribute``1(System.String,``0)">
            <summary>Get user attribute typed value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.LogVerbose(System.String,System.String,System.String)">
            <summary>Add a verbose log</summary>
            <param name="message">The log message</param>
            <param name="error">The log error</param>
            <param name="comment">The log comment</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.LogDebug(System.String,System.String,System.String)">
            <summary>Add a debug log</summary>
            <param name="message">The log message</param>
            <param name="error">The log error</param>
            <param name="comment">The log comment</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.LogInformation(System.String,System.String,System.String)">
            <summary>Add a information log</summary>
            <param name="message">The log message</param>
            <param name="error">The log error</param>
            <param name="comment">The log comment</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.LogWarning(System.String,System.String,System.String)">
            <summary>Add a warning log</summary>
            <param name="message">The log message</param>
            <param name="error">The log error</param>
            <param name="comment">The log comment</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.LogError(System.String,System.String,System.String)">
            <summary>Add a error log</summary>
            <param name="message">The log message</param>
            <param name="error">The log error</param>
            <param name="comment">The log comment</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.LogError(System.Exception,System.String,System.String)">
            <summary>Add a error log using an exception</summary>
            <param name="exception">The exception</param>
            <param name="message">The log message, default is the exception message</param>
            <param name="comment">The log comment</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.LogFatal(System.String,System.String,System.String)">
            <summary>Add a fatal log</summary>
            <param name="message">The log message</param>
            <param name="error">The log error</param>
            <param name="comment">The log comment</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.LogFatal(System.Exception,System.String,System.String)">
            <summary>Add a fatal log using an exception</summary>
            <param name="exception">The exception</param>
            <param name="message">The log message, default is the exception message</param>
            <param name="comment">The log comment</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.Log(PayrollEngine.Client.Scripting.LogLevel,System.String,System.String,System.String)">
            <summary>Add a log</summary>
            <param name="level">The log level</param>
            <param name="message">The log message</param>
            <param name="error">The log error</param>
            <param name="comment">The log comment</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.AddTask(System.String,System.String,System.DateTime,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Add task</summary>
            <param name="name">The task name</param>
            <param name="instruction">The task instruction</param>
            <param name="scheduleDate">The task schedule date</param>
            <param name="category">The task category</param>
            <param name="attributes">The task attributes</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.Function.SourceFileName">
            <summary>The name of the source file (scripting development)</summary>
            <value>The name of the source file</value>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)">
            <summary>Initialize the source file path (scripting development)</summary>
            <param name="sourceFilePath">The source file path (do not provide a value)</param>
            <returns>Source code file name</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.Function.Dispose">
            <summary>Dispose the function</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.IActionContext">
            <summary>Action context</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.IActionContext.Function">
            <summary>The function</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.IConditionActionContext">
            <summary>Condition action context</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.IConditionActionContext.Issues">
            <summary>The issues</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ActionIssue">
            <summary>Action issue</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionIssue.Message">
            <summary>The issue message</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionIssue.LocalizationKey">
            <summary>The localization key</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ActionIssue.Parameters">
            <summary>The validation issue parameters</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ActionIssue.#ctor(System.String,System.String,System.Object[])">
            <summary>Constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ConditionActionContextBase`1">
            <summary>Condition action context</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ConditionActionContextBase`1.Function">
            <summary>The function</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ConditionActionContextBase`1.Issues">
            <summary>The action issues</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ConditionActionContextBase`1.#ctor(`0)">
            <summary>Constructor</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ConditionActionContextBase`1.HasIssues">
            <summary>Test for any issue</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ConditionActionContextBase`1.AddIssue(System.String)">
            <summary>Add an action issue</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ConditionActionContextBase`1.ClearIssues">
            <summary>Clear all issues</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.PayrollActionContext`1">
            <summary>Payroll action context</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollActionContext`1.#ctor(`0)">
            <summary>Constructor</summary>
            <param name="function">The function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.PayrollFunction">
            <summary>Base class for any script function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.#ctor(System.Object)">
            <summary>New function instance</summary>
            <param name="runtime">The function runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.PayrollId">
            <summary>The payroll id</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.PayrollCulture">
            <summary>The payroll culture</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.EmployeeId">
            <summary>The employee id</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.EmployeeIdentifier">
            <summary>The employee identifier</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetEmployeeAttribute(System.String)">
            <summary>Get employee attribute value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetEmployeeAttribute``1(System.String,``0)">
            <summary>Get employee attribute typed value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.CycleStart">
            <summary>The current cycle start date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.CycleEnd">
            <summary>The current cycle end date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.Cycle">
            <summary>The current cycle</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.CycleDays">
            <summary>The day count of the current cycle</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.PreviousCycle">
            <summary>The previous cycle</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.NextCycle">
            <summary>The next cycle</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCycle(System.Int32)">
            <summary>Get cycle by offset to the current cycle</summary>
            <param name="offset">The cycle offset: 0=current, -1=previous, 1=next</param>
            <returns>The offset cycle</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCycle(System.DateTime,System.Int32)">
            <summary>Get cycle by moment</summary>
            <param name="moment">The cycle moment</param>
            <param name="offset">The cycle offset: 0=current, -1=previous, 1=next</param>
            <returns>The cycle including the moment</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetPeriods(System.Int32,System.Int32)">
            <summary>Get periods by offset range</summary>
            <param name="startOffset">The offset to the first period</param>
            <param name="endOffset">The offset to the last period</param>
            <returns>The periods ordered by date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCyclePeriods">
            <summary>Get cycle periods</summary>
            <returns>The cycle periods ordered by date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetPastCyclePeriods(System.Boolean)">
            <summary>Get past cycle periods from the first cycle period to the current period</summary>
            <param name="includeCurrent">Include the current period</param>
            <returns>The past cycle periods ordered by date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetFutureCyclePeriods(System.Boolean)">
            <summary>Get future cycle periods from the current period to the last cycle period</summary>
            <param name="includeCurrent">Include the current period</param>
            <returns>The future cycle periods ordered by date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.IsFirstCycleDay(System.DateTime)">
            <summary>Test if a date is the first cycle day</summary>
            <param name="moment">The cycle moment</param>
            <returns>True for the first cycle day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.IsLastCycleDay(System.DateTime)">
            <summary>Test if a date is the last cycle day</summary>
            <param name="moment">The cycle moment</param>
            <returns>Tru for the last cycle day</returns>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.EvaluationDate">
            <summary>The evaluation date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.EvaluationPeriod">
            <summary>The evaluation period</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.Periods">
            <summary>Periods by offset</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.PeriodStart">
            <summary>The current period start date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.PeriodEnd">
            <summary>The current period end date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.Period">
            <summary>The current period</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.PeriodDays">
            <summary>The day count of the current period</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.PreviousPeriod">
            <summary>The previous period</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.NextPeriod">
            <summary>The next period</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.FirstCyclePeriod">
            <summary>True for the first cycle period</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.LastCyclePeriod">
            <summary>True for the last cycle period</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.CycleStartOffset">
            <summary>Offset of the current period to the start of the current cycle,<br />
            0 for the first cycle period, -1 for the previous period, and so on</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.CycleEndOffset">
            <summary>Offset of the current period to the end of the current cycle,<br />
            0 for the ultimate cycle period, 1 for the penultimate cycle period, and so on</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.PastCyclePeriods">
            <summary>The number of periods from the cycle start of the current period</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.FutureCyclePeriods">
            <summary>The number of periods from the current period to the cycle end</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.PeriodsInCycle">
            <summary>The number of periods within a cycle</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.PastPeriod">
            <summary>Get period before the evaluation date</summary>
            <returns>Period from the minimal date until the evaluation date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.FuturePeriod">
            <summary>Get period after the evaluation date</summary>
            <returns>Period from the evaluation date until the maximal date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetPeriod(System.Int32)">
            <summary>Get period by offset to the current period</summary>
            <param name="offset">The period offset: 0=current, -1=previous, 1=next</param>
            <returns>The offset period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetPeriod(System.DateTime,System.Int32)">
            <summary>Get period by moment</summary>
            <param name="moment">The period moment</param>
            <param name="offset">The period offset: 0=current, -1=previous, 1=next</param>
            <returns>The period including the moment</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetPeriodOffset(System.DateTime)">
            <summary>Get offset to period</summary>
            <param name="moment">The period moment</param>
            <returns>The period offset</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.IsFirstPeriodDay(System.DateTime)">
            <summary>Test if a date is the first period day</summary>
            <param name="moment">The period moment</param>
            <returns>True for the first period day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.IsLastPeriodDay(System.DateTime)">
            <summary>Test if a date is the last period day</summary>
            <param name="moment">The period moment</param>
            <returns>Tru for the last period day</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCaseValueType(System.String)">
            <summary>Get case value type</summary>
            <param name="caseFieldName">The case field name</param>
            <returns>The case value type</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.HasCaseFieldAttribute(System.String,System.String)">
            <summary>Test for existing case field attribute</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="attributeName">The attribute name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCaseFieldAttribute(System.String,System.String)">
            <summary>Get case field attribute value</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="attributeName">The attribute name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCaseFieldAttribute``1(System.String,System.String,``0)">
            <summary>Get case attribute typed value</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="attributeName">The attribute name</param>
            <param name="defaultValue">The default value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.HasCaseValueAttribute(System.String,System.String)">
            <summary>Test for existing case field value attribute</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="attributeName">The attribute name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCaseValueAttribute(System.String,System.String)">
            <summary>Get case field value attribute value</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="attributeName">The attribute name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCaseValueAttribute``1(System.String,System.String,``0)">
            <summary>Get case field value attribute typed value</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="attributeName">The attribute name</param>
            <param name="defaultValue">The default value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.TestAvailableCaseValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Test for available cases from the current period</summary>
            <param name="caseFieldNames">The name of the case fields to test</param>
            <returns>True if all case values are available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.TestAvailableCaseValues(PayrollEngine.Client.Scripting.DatePeriod,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Test for available cases</summary>
            <param name="period">The value period</param>
            <param name="caseFieldNames">The name of the case fields to test</param>
            <returns>True if all case values are available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetFirstAvailableCaseValue(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Get the first available case value from the current period</summary>
            <param name="caseFieldNames">The name of the case fields to test</param>
            <returns>The first available case value, otherwise null</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetFirstAvailableCaseValue(PayrollEngine.Client.Scripting.DatePeriod,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Get the first available case value within a time period</summary>
            <param name="period">The value period</param>
            <param name="caseFieldNames">The name of the case fields to test</param>
            <returns>The first available case value, otherwise null</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetFirstUnavailableCaseValue(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Get the first unavailable case value from the current period</summary>
            <param name="caseFieldNames">The name of the case fields to test</param>
            <returns>The case field name of the first unavailable case value, otherwise null</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetFirstUnavailableCaseValue(PayrollEngine.Client.Scripting.DatePeriod,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Get the first unavailable case value within a time period</summary>
            <param name="period">The value period</param>
            <param name="caseFieldNames">The name of the case fields to test</param>
            <returns>The case field name of the first unavailable case value, otherwise null</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.CaseFieldSlot(System.String,System.String)">
            <summary>Get the case field name including the case slot</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="caseSlot">The case slot</param>
            <returns>The case field slot name</returns>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.CaseValue">
            <summary>Get the case payroll value by case field name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrollFunction.CaseValueTags">
            <summary>Get the case value tags by case field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetPeriodCaseValue``1(PayrollEngine.Client.Scripting.DatePeriod,System.String,System.String)">
            <summary>Get the case payroll typed value by case field name</summary>
            <param name="period">The value period</param>
            <param name="caseFieldName">The case field name</param>
            <param name="caseSlot">The case slot</param>
            <returns>A case value from the period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetPeriodCaseValue(PayrollEngine.Client.Scripting.DatePeriod,System.String,System.String)">
            <summary>Get the case payroll value by case field name</summary>
            <param name="period">The value period</param>
            <param name="caseFieldName">The case field name</param>
            <param name="caseSlot">The case slot</param>
            <returns>A case value from the period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetPeriodCaseValues(PayrollEngine.Client.Scripting.DatePeriod,System.String[])">
            <summary>Get multiple case values of a date period</summary>
            <param name="period">The date period</param>
            <param name="caseFieldNames">The case field names</param>
            <returns>Dictionary of case values grouped by case field name</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetPeriodCaseValues(System.Int32,System.String[])">
            <summary>Get multiple case values of an offset period</summary>
            <param name="periodOffset">The offset period</param>
            <param name="caseFieldNames">The case field names</param>
            <returns>Dictionary of case values grouped by case field name</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetPeriodCaseValue``1(System.Int32,System.String,System.String)">
            <summary>Get case payroll typed value of an offset period</summary>
            <param name="periodOffset">The offset period</param>
            <param name="caseFieldName">The case field name</param>
            <param name="caseSlot">The case slot</param>
            <returns>A case value from the offset period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetPeriodCaseValue(System.Int32,System.String,System.String)">
            <summary>Get case payroll value of an offset period</summary>
            <param name="periodOffset">The offset period</param>
            <param name="caseFieldName">The case field name</param>
            <param name="caseSlot">The case slot</param>
            <returns>A case value from the offset period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCaseValue``1(System.String,System.String)">
            <summary>Get case payroll typed value of the current period</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="caseSlot">The case slot</param>
            <returns>A case value from the current period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCaseValue(System.String,System.String)">
            <summary>Get case payroll value of the current period</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="caseSlot">The case slot</param>
            <returns>A case value from the current period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetPeriodCaseValue(System.Int32,System.Int32,System.String,System.String)">
            <summary>Get case payroll value of multiple periods</summary>
            <param name="periodStartOffset">Offset of start period</param>
            <param name="periodEndOffset">Offset of end period</param>
            <param name="caseFieldName">The case field name</param>
            <param name="caseSlot">The case slot</param>
            <returns>Dictionary of case values grouped by periods</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetMultiPeriodCaseValues(System.Int32,System.Int32,System.String[])">
            <summary>Get multiple case values of multiple periods</summary>
            <param name="periodStartOffset">Offset of start period</param>
            <param name="periodEndOffset">Offset of end period</param>
            <param name="caseFieldNames">The case field names</param>
            <returns>Dictionary of multiple case values grouped by period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetRawCaseValue(System.String,System.DateTime)">
            <summary>Get raw case value from a specific date</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="valueDate">The value date</param>
            <returns>Raw case value from a specific date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetRawCaseValues(System.String,PayrollEngine.Client.Scripting.DatePeriod)">
            <summary>Get raw case values created within a date period</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="period">The case value creation period</param>
            <returns>Raw case values from a date period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetPeriodRawCaseValues(System.String)">
            <summary>Get raw case values created within a date period</summary>
            <param name="caseFieldName">The case field name</param>
            <remarks>Case value tags and attributes are not supported</remarks>
            <returns>Raw case values from a date period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetRawCaseValues(System.String,System.Int32)">
            <summary>Get raw case values created within an offset period</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="periodOffset">The offset period</param>
            <returns>Raw case values from an offset period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetRawCaseValues(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>Get raw case values created within the current period</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="startDate">The date after the case value was created</param>
            <param name="endDate">The date before the case value was created</param>
            <returns>Raw case values from the current period</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCaseValues(System.String[])">
            <summary>Get multiple case values of the current period</summary>
            <param name="caseFieldNames">The case field names</param>
            <returns>Dictionary of case values grouped by case field name</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCaseValueTags(System.String)">
            <summary>Get the case value tags from the current period end</summary>
            <param name="caseFieldName">Name of the case field</param>
            <returns>The case value tags</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCaseValueTags(System.String,System.DateTime)">
            <summary>Get the case value tags from specific date</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="valueDate">The value date</param>
            <returns>The case value tags</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetCaseValueSlots(System.String)">
            <summary>Get the case value slots</summary>
            <param name="caseFieldName">Name of the case field</param>
            <returns>The case value slot names</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetSlotValues(System.String)">
            <summary>Get the case slot values, grouped by slot name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The case values in a dictionary grouped by slot name</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetSlotValues``1(System.String)">
            <summary>Get the typed case slot values, grouped by slot name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The case values in a dictionary grouped by slot name</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetSlotByValue(System.String,System.String,System.String)">
            <summary>Get slot name by value</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="value">The slot value</param>
            <param name="prefix">The slot prefix</param>
            <returns>The slot name matching the value and prefix, otherwise null</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetLookup``1(System.String,System.String,System.String)">
            <summary>Get lookup value</summary>
            <param name="lookupName">The lookup name</param>
            <param name="lookupKey">The lookup key</param>
            <param name="culture">The culture, null for the system culture (optional)</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetLookup``1(System.String,System.Object[],System.String)">
            <summary>Get lookup value with multiple keys</summary>
            <param name="lookupName">The lookup name</param>
            <param name="lookupKeyValues">The lookup key values (serialized to JSON string)</param>
            <param name="culture">The culture, null for the system culture (optional)</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetRangeLookup``1(System.String,System.Decimal,System.String,System.String)">
            <summary>Get lookup by range value</summary>
            <param name="lookupName">The lookup name</param>
            <param name="rangeValue">The range value</param>
            <param name="lookupKey">The lookup key (optional)</param>
            <param name="culture">The culture, null for the system culture (optional)</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetRangeObjectLookup``1(System.String,System.Decimal,System.String,System.String,System.String)">
            <summary>Get object lookup by range value</summary>
            <param name="lookupName">The lookup name</param>
            <param name="rangeValue">The range value</param>
            <param name="objectKey">The object key</param>
            <param name="lookupKey">The lookup key (optional)</param>
            <param name="culture">The culture, null for the system culture (optional)</param>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.PayrollFunction.ConditionConsequentMarker">
            <summary>Condition consequent marker</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.PayrollFunction.ConditionAlternativeMarker">
            <summary>Condition alternative marker</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Function.PayrollFunction.ConditionActionSeparator">
            <summary>Condition action separator</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.PayrollFunction.Action">
            <summary>Function action, using extension methods</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.PayrollFunction.ActionCache">
            <summary>Function action cache</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.IsDisabledAction(System.String)">
            <summary>Test for disabled action</summary>
            <param name="expression">The action expression</param>
            <returns>List of extension methods</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.InvokeAction``2(``0,System.String)">
            <summary>Get type extension methods from the current assembly</summary>
            <param name="context">The action context</param>
            <param name="expression">The action expression</param>
            <returns>List of extension methods</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetActionParameterValue(System.String,System.Type)">
            <summary>Convert action parameter type</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.GetActionMethod``1(PayrollEngine.Client.Scripting.Function.PayrollFunction.Action)">
            <summary>Get action methods by namespace</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.ParseAction(System.String)">
            <summary>Parse action from reference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrollFunction.InvokeConditionAction``2(``0,System.String)">
            <summary>Invoke condition action</summary>
            <param name="context">The action context</param>
            <param name="action">The action</param>
            <returns>True if action was invoked</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.PayrunEmployeeAvailableFunction">
            <summary>Test if an employee is available (default: true) for a payrun</summary>
            <example>
            <code language="c#">
            // Example with employee case value
            (int)Employee["Level"] >= 2
            </code>
            <code language="c#">
            // Example with payrun period
            PeriodStart.Month == 12
            </code>
            </example>
            <seealso cref="T:PayrollEngine.Client.Scripting.Function.PayrunWageTypeAvailableFunction">Payrun Wage Type Available Function</seealso>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEmployeeAvailableFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEmployeeAvailableFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEmployeeAvailableFunction.IsAvailable">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.PayrunEmployeeEndFunction">
            <summary>Payrun employee start function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEmployeeEndFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEmployeeEndFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEmployeeEndFunction.End">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.PayrunEmployeeStartFunction">
            <summary>Payrun employee start function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEmployeeStartFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEmployeeStartFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEmployeeStartFunction.Start">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.PayrunEndFunction">
            <summary>Payrun end function</summary>
            <seealso cref="T:PayrollEngine.Client.Scripting.Function.PayrunWageTypeAvailableFunction">Payrun Wage Type Available Function</seealso>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEndFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEndFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEndFunction.GetPayrunRuntimeValues">
            <summary>Get payrun runtime values</summary>
            <returns>Payrun runtime values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEndFunction.GetRuntimeValuesEmployees">
            <summary>Get the employees with runtime values</summary>
            <returns>Payrun runtime values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEndFunction.GetEmployeeRuntimeValues(System.String)">
            <summary>Get employee runtime values</summary>
            <param name="employeeIdentifier">The employee identifier</param>
            <returns>Employee runtime values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunEndFunction.End">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.PayrunFunction">
            <summary>Base class for Payrun functions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrunFunction.PayrunId">
            <summary>The payrun id</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrunFunction.PayrunName">
            <summary>The payrun name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrunFunction.ExecutionPhase">
            <summary>The payrun execution phase</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrunFunction.RetroPeriod">
            <summary>The retro payrun period</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrunFunction.IsRetroPayrun">
            <summary>True for a retro payrun</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrunFunction.IsCycleRetroPayrun">
            <summary>True for a retro payrun within the current cycle</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrunFunction.Forecast">
            <summary>True for a forecast payrun</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrunFunction.IsForecast">
            <summary>True for a forecast payrun</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrunFunction.CycleName">
            <summary>The cycle name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrunFunction.PeriodName">
            <summary>The period name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetPayrunJobAttribute(System.String)">
            <summary>Get payrun job attribute value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetPayrunJobAttribute``1(System.String,``0)">
            <summary>Get employee attribute typed value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.SetPayrunJobAttribute(System.String,System.Object)">
            <summary>Set payrun job attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <param name="value">The attribute value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.RemovePayrunJobAttribute(System.String)">
            <summary>Remove payrun job attribute</summary>
            <param name="attributeName">Name of the attribute</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.HasPayrunRuntimeValue(System.String)">
            <summary>Test for existing payrun runtime value</summary>
            <param name="key">The value key</param>
            <returns>True if the runtime value exists</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetPayrunRuntimeValue(System.String)">
            <summary>Get payrun runtime value</summary>
            <param name="key">The value key</param>
            <returns>The payrun runtime value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetPayrunRuntimeValue``1(System.String)">
            <summary>Get payrun runtime value as deserialized type</summary>
            <param name="key">The value key</param>
            <returns>The payrun runtime value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.SetPayrunRuntimeValue(System.String,System.String)">
            <summary>Set payrun runtime value</summary>
            <param name="key">The value key</param>
            <param name="value">The payrun runtime value, use null to remove the runtime value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.SetPayrunRuntimeValue``1(System.String,``0)">
            <summary>Set payrun runtime value as serialized type</summary>
            <param name="key">The value key</param>
            <param name="value">The payrun runtime value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.HasEmployeeRuntimeValue(System.String)">
            <summary>Test for existing employee runtime value</summary>
            <param name="key">The value key</param>
            <returns>True if the runtime value exists</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetEmployeeRuntimeValue(System.String)">
            <summary>Get employee runtime value</summary>
            <param name="key">The value key</param>
            <returns>The employee runtime value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetEmployeeRuntimeValue``1(System.String)">
            <summary>Get employee runtime value as deserialized type</summary>
            <param name="key">The value key</param>
            <returns>The employee runtime value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.SetEmployeeRuntimeValue(System.String,System.String)">
            <summary>Set employee runtime value</summary>
            <param name="key">The value key</param>
            <param name="value">The employee runtime value, use null to remove the runtime value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.SetEmployeeRuntimeValue``1(System.String,``0)">
            <summary>Set employee runtime value as serialized type</summary>
            <param name="key">The value key</param>
            <param name="value">The employee runtime value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetWageTypeCycleResults(PayrollEngine.Client.Scripting.WageTypeCycleResultQuery)">
            <summary>Get employee wage types results by query</summary>
            <param name="query">The cycle query</param>
            <returns>Employee wage type cycle results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetPeriodWageTypeResults(PayrollEngine.Client.Scripting.WageTypePeriodResultQuery)">
            <summary>Get employee wage types results by payroll periods</summary>
            <param name="query">The period query</param>
            <returns>Employee wage type period results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetWageTypeResults(PayrollEngine.Client.Scripting.WageTypeRangeResultQuery)">
            <summary>Get employee wage types results by query</summary>
            <param name="query">The range query</param>
            <returns>Employee wage type range results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetWageTypeResults(System.Collections.Generic.IEnumerable{System.Decimal},System.DateTime,System.DateTime,System.String,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus},System.Collections.Generic.IEnumerable{System.String})">
            <summary>Get employee wage type results by date range</summary>
            <param name="wageTypeNumbers">The wage type numbers</param>
            <param name="start">The range start date</param>
            <param name="end">The range end date</param>
            <param name="jobStatus">The job status</param>
            <param name="forecast">The forecast</param>
            <param name="tags">The result tags</param>
            <returns>Employee wage type range results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetConsolidatedWageTypeResults(PayrollEngine.Client.Scripting.WageTypeConsolidatedResultQuery)">
            <summary>Get consolidated employee wage type results by query</summary>
            <param name="query">The result query</param>
            <returns>Consolidated employee wage type results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetWageTypeCustomResults(PayrollEngine.Client.Scripting.WageTypeRangeResultQuery)">
            <summary>Get employee wage type custom results by query</summary>
            <param name="query">The result query</param>
            <returns>Consolidated employee wage type custom results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetConsolidatedWageTypeCustomResults(PayrollEngine.Client.Scripting.WageTypeConsolidatedResultQuery)">
            <summary>Get consolidated employee wage type custom results by query</summary>
            <param name="query">The result query</param>
            <returns>Consolidated employee wage type custom results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetWageTypeRetroResults(PayrollEngine.Client.Scripting.WageTypeResultQuery)">
            <summary>Get retro employee retro wage type results by periods</summary>
            <param name="query">The query</param>
            <returns>Retro employee retro wage type values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetWageTypeRetroResultSum(System.Decimal)">
            <summary>Get summary of retro wage type results</summary>
            <param name="wageTypeNumber">The wage type number</param>
            <returns>Retro employee wage type value (difference)</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetCollectorCycleResults(PayrollEngine.Client.Scripting.CollectorCycleResultQuery)">
            <summary>Get employee collector results by query</summary>
            <param name="query">The cycle query</param>
            <returns>Employee collector cycle results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetCollectorPeriodResults(PayrollEngine.Client.Scripting.CollectorPeriodResultQuery)">
            <summary>Get employee collector results by query</summary>
            <param name="query">The period query</param>
            <returns>Employee collector period results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetCollectorResults(PayrollEngine.Client.Scripting.CollectorRangeResultQuery)">
            <summary>Get employee collectors results by custom date range</summary>
            <param name="query">The range query</param>
            <returns>Employee collector range results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetCollectorResults(System.Collections.Generic.IEnumerable{System.String},System.DateTime,System.DateTime,System.String,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus},System.Collections.Generic.IEnumerable{System.String})">
            <summary>Get employee collectors results by custom date range</summary>
            <param name="collectorNames">The collector names</param>
            <param name="start">The range start date</param>
            <param name="end">The range end date</param>
            <param name="forecast">The forecast</param>
            <param name="jobStatus">The job status</param>
            <param name="tags">The result tags</param>
            <returns>Employee collector range results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetConsolidatedCollectorResults(PayrollEngine.Client.Scripting.CollectorConsolidatedResultQuery)">
            <summary>Get consolidated employee collectors results by query</summary>
            <param name="query">The result query</param>
            <returns>Consolidated employee collector results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.GetConsolidatedCollectorCustomResults(PayrollEngine.Client.Scripting.CollectorConsolidatedResultQuery)">
            <summary>Get consolidated employee collector custom results by query</summary>
            <param name="query">The result query</param>
            <returns>Consolidated employee collector custom results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunFunction.InvokeWebhook``1(System.String,System.Object)">
            <summary>Invoke payrun webhook</summary>
            <param name="requestOperation">The request operation</param>
            <param name="requestMessage">The webhook request message</param>
            <returns>The webhook response object</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.PayrunStartFunction">
            <summary>Payrun start function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunStartFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunStartFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunStartFunction.Start">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.PayrunWageTypeAvailableFunction">
            <summary>Test if a wage type is available (default: true) for a payrun</summary>
            <example>
            <code language="c#">
            // Example with payrun period
            WageTypeNumber == 2250 &amp;&amp; PeriodStart.Month == 12
            </code>
            </example>
            <seealso cref="T:PayrollEngine.Client.Scripting.Function.PayrunEmployeeAvailableFunction">Payrun Employee Available Function</seealso>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunWageTypeAvailableFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunWageTypeAvailableFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.PayrunWageTypeAvailableFunction.WageTypeNumber">
            <summary>The wage type number</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunWageTypeAvailableFunction.GetWageTypeAttribute(System.String)">
            <summary>Get wage type attribute value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunWageTypeAvailableFunction.GetWageTypeAttribute``1(System.String,``0)">
            <summary>Get wage type attribute typed value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.PayrunWageTypeAvailableFunction.IsAvailable">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ReportBuildFunction">
            <summary>Report build function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportBuildFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportBuildFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportBuildFunction.SetParameter(System.String,System.String)">
            <summary>Set report parameter value</summary>
            <param name="parameterName">The parameter name</param>
            <param name="value">The parameter value as JSON</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportBuildFunction.SetParameter``1(System.String,``0)">
            <summary>Set report parameter typed value</summary>
            <param name="parameterName">The parameter name</param>
            <param name="value">The default value</param>
            <returns>The report parameter value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportBuildFunction.SetParameterAttribute(System.String,System.String,System.Object)">
            <summary>Set report attribute value</summary>
            <param name="parameterName">The parameter name</param>
            <param name="attributeName">Name of the attribute</param>
            <param name="value">The attribute value</param>
            <returns>The report attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportBuildFunction.Build">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ReportEndFunction">
            <summary>Report end function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ReportEndFunction.DataSet">
            <summary>The report data set</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ReportEndFunction.Tables">
            <summary>The report data tables</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.ContainsTable(System.String)">
            <summary>Determines whether the table contains the specified table</summary>
            <param name="tableName">Name of the table</param>
            <returns>True for an existing table</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.AddTable(System.String)">
            <summary>Add a table to the data set</summary>
            <param name="tableName">Name of the table</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.AddTable(System.Data.DataTable)">
            <summary>Add a table to the data set</summary>
            <param name="table">The table</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.RemoveTable(System.String)">
            <summary>Remove a table from the data set</summary>
            <param name="tableName">Name of the table</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.RemoveTables(System.String[])">
            <summary>Remove multiple tables from the data set</summary>
            <param name="tableNames">Name of the tables</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.Compute(System.String,System.String,System.String)">
            <summary>Computes the given expression on the current rows that pass the filter criteria</summary>
            <param name="tableName">Name of the table</param>
            <param name="expression">The expression to compute</param>
            <param name="filter">The filter to limit the rows that evaluate in the expression</param>
            <returns>An Object, set to the result of the computation. If the expression evaluates to null, the return value will be Value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.Compute``1(System.String,System.String,System.String)">
            <summary>Computes the given expression on the current rows that pass the filter criteria</summary>
            <param name="tableName">Name of the table</param>
            <param name="expression">The expression to compute</param>
            <param name="filter">The filter to limit the rows that evaluate in the expression</param>
            <returns>An Object, set to the result of the computation. If the expression evaluates to null, the return value will be Value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.ExecuteResultQuery(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Execute a query on the Api web method, table name extracted from method name</summary>
            <param name="methodName">The query name</param>
            <param name="parameters">The method parameters</param>
            <returns>New data table, null on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.ExecuteResultQuery(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Execute a query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="methodName">The query name</param>
            <param name="parameters">The method parameters</param>
            <returns>New data table, null on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.ExecuteResultQuery(System.String,System.String,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Execute a result query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="methodName">The query name</param>
            <param name="culture">The content culture</param>
            <param name="resultQuery">Add query table to the data set</param>
            <param name="parameters">The method parameters</param>
            <returns>New data table, null on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.ExecuteMergeQuery(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},PayrollEngine.Client.Scripting.DataMergeSchemaChange)">
            <summary>Execute a query on the Api web method and merge the table to the set</summary>
            <param name="tableName">Target table name</param>
            <param name="methodName">The query name</param>
            <param name="mergeColumn">The column used to merge (primary key column)</param>
            <param name="parameters">The method parameters</param>
            <param name="schemaChange">Action to take when the required data column is missing</param>
            <returns>New or expanded data table</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.ExecuteMergeQuery(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},PayrollEngine.Client.Scripting.DataMergeSchemaChange)">
            <summary>Execute a query on the Api web method and merge the table to the set</summary>
            <param name="tableName">Target table name</param>
            <param name="methodName">The query name</param>
            <param name="culture">The content culture</param>
            <param name="mergeColumn">The column used to merge (primary key column)</param>
            <param name="parameters">The method parameters</param>
            <param name="schemaChange">Action to take when the required data column is missing</param>
            <returns>New or expanded data table</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.AddRelation(System.String,System.String,System.String,System.String)">
            <summary>Add relation between two table</summary>
            <param name="relationName">The relation name</param>
            <param name="parentTableName">The relation parent table name</param>
            <param name="childTableName">The relation child table name</param>
            <param name="childColumnName">The relation child table column name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.AddRelation(System.String,System.String,System.String,System.String,System.String)">
            <summary>Add relation between two table</summary>
            <param name="relationName">The relation name</param>
            <param name="parentTableName">The relation parent table name</param>
            <param name="parentColumnName">The relation parent table column name</param>
            <param name="childTableName">The relation child table name</param>
            <param name="childColumnName">The relation child table column name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportEndFunction.End">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.LookupValueData">
            <summary>Represents the API LookupValueData object</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.LookupValueData.Key">
            <summary>The lookup key</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.LookupValueData.Value">
            <summary>The lookup value as JSON</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.CaseValueColumn">
            <summary>Case value column</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseValueColumn.Name">
            <summary>The column name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseValueColumn.LookupName">
            <summary>The lookup name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.CaseValueColumn.LookupType">
            <summary>The lookup type</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValueColumn.#ctor(System.String)">
            <summary>New instance of case value column</summary>
            <param name="name">The column name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.CaseValueColumn.#ctor(System.String,System.String,System.Type)">
            <summary>New instance of case value column</summary>
            <param name="name">The column name</param>
            <param name="lookupName">The lookup name</param>
            <param name="lookupType">The lookup type</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ReportFunction">
            <summary>Base class for report functions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.ReportFunction.ReportName">
            <summary>Gets the report name</summary>
            <value>The name of the case</value>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.GetReportAttribute(System.String)">
            <summary>Get report attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <returns>The report attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.GetReportAttribute``1(System.String,``0)">
            <summary>Get report attribute typed value</summary>
            <typeparam name="T"></typeparam>
            <param name="attributeName">Name of the attribute</param>
            <param name="defaultValue">The default value</param>
            <returns>The report attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.HasParameter(System.String)">
            <summary>Check for existing report parameter</summary>
            <param name="parameterName">The parameter name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.GetParameter(System.String)">
            <summary>Get report parameter</summary>
            <param name="parameterName">The parameter name</param>
            <returns>The report parameter value as JSON</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.GetParameter``1(System.String,``0)">
            <summary>Get report parameter typed value</summary>
            <param name="parameterName">The parameter name</param>
            <param name="defaultValue">The default value</param>
            <returns>The report parameter value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.GetParameterAttribute(System.String)">
            <summary>Get report parameter attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <returns>The report attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.GetParameterAttribute``1(System.String,``0)">
            <summary>Get report parameter attribute typed value</summary>
            <typeparam name="T"></typeparam>
            <param name="attributeName">Name of the attribute</param>
            <param name="defaultValue">The default value</param>
            <returns>The report attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.AddReportLog(System.String,System.String,System.Nullable{System.DateTime})">
            <summary>Add report log</summary>
            <param name="message">The log message</param>
            <param name="key">The log key</param>
            <param name="reportDate">The report date (default: now)</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ToReportMessage(System.String)">
            <summary>Create report message</summary>
            <param name="message">The error message</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.FirstCharacterToLower(System.String)">
            <summary>Ensures first string character is lower</summary>
            <param name="value">The string value</param>
            <returns>String starting lowercase</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteQuery(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Query on Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="methodName">The query name</param>
            <param name="parameters">The method parameters</param>
            <returns>New data table, null on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteQuery(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Query on Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="methodName">The query name</param>
            <param name="culture">The content culture</param>
            <param name="parameters">The method parameters</param>
            <returns>New data table, null on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteQuery(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Execute a query on the Api web method, table name extracted from method name</summary>
            <param name="methodName">The query name</param>
            <param name="parameters">The method parameters</param>
            <returns>New data table, null on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteDivisionQuery(System.Int32)">
            <summary>Query the division by id</summary>
            <param name="divisionId">The division id</param>
            <returns>Single row table</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecutePayrollDivisionIdQuery(System.Int32)">
            <summary>Query the regulation id from the parameter RegulationId</summary>
            <param name="payrollId">The payroll id</param>
            <returns>The regulation id, null for unknown regulation</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecutePayrollDivisionQuery(System.Int32)">
            <summary>Query the regulation id from the parameter RegulationId</summary>
            <param name="payrollId">The payroll id</param>
            <returns>Single row table</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteLookupValueQuery(System.Int32,System.String,System.String,System.String)">
            <summary>Query Json lookup values by lookup name</summary>
            <param name="regulationId">The regulation id</param>
            <param name="lookupName">The lookup name</param>
            <param name="keyAttribute">The json object key attribute name</param>
            <param name="valueAttribute">The json object value attribute name</param>
            <returns>The lookup values dictionary</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteGlobalCaseValueQuery(System.String,PayrollEngine.Client.Scripting.Report.ReportQuery)">
            <summary>Execute global case value query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="query">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteNationalCaseValueQuery(System.String,PayrollEngine.Client.Scripting.Report.ReportQuery)">
            <summary>Execute national case value query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="query">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteCompanyCaseValueQuery(System.String,PayrollEngine.Client.Scripting.Report.ReportQuery)">
            <summary>Execute company case value query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="query">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteEmployeeCaseValueQuery(System.String,System.Int32,PayrollEngine.Client.Scripting.Report.ReportQuery)">
            <summary>Execute employee case value query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="employeeId">The employee id</param>
            <param name="query">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteWageTypeQuery(System.String,System.Int32,PayrollEngine.Client.Scripting.Report.ReportQuery)">
            <summary>Query regulation wage</summary>
            <param name="tableName">Target table name</param>
            <param name="regulationId">The regulation id</param>
            <param name="query">The query</param>
            <returns>Wage type data table, null on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecutePayrollResultQuery(System.String,PayrollEngine.Client.Scripting.Report.ReportQuery)">
            <summary>Query payroll results</summary>
            <param name="tableName">Target table name</param>
            <param name="query">The query</param>
            <returns>Payroll result data table, null on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteWageTypeResultQuery(System.String,System.Int32,PayrollEngine.Client.Scripting.Report.ReportQuery)">
            <summary>Query wage type results</summary>
            <param name="tableName">Target table name</param>
            <param name="payrollResultId">The payroll result id</param>
            <param name="query">The query</param>
            <returns>Wage type result data table, null on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteWageTypeCustomResultQuery(System.String,System.Int32,System.Int32,PayrollEngine.Client.Scripting.Report.ReportQuery)">
            <summary>Query wage type custom results</summary>
            <param name="tableName">Target table name</param>
            <param name="payrollResultId">The payroll result id</param>
            <param name="wageTypeResultId">The wage type result id</param>
            <param name="query">The query</param>
            <returns>Wage type custom result data table, null on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteCollectorResultQuery(System.String,System.Int32,PayrollEngine.Client.Scripting.Report.ReportQuery)">
            <summary>Query collector results</summary>
            <param name="tableName">Target table name</param>
            <param name="payrollResultId">The payroll result id</param>
            <param name="query">The query</param>
            <returns>Collector result data table, null on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteCollectorCustomResultQuery(System.String,System.Int32,System.Int32,PayrollEngine.Client.Scripting.Report.ReportQuery)">
            <summary>Query collector custom results</summary>
            <param name="tableName">Target table name</param>
            <param name="payrollResultId">The payroll result id</param>
            <param name="collectorResultId">The collector result id</param>
            <param name="query">The query</param>
            <returns>Collector custom result data table, null on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecutePayrunResultQuery(System.String,System.Int32,PayrollEngine.Client.Scripting.Report.ReportQuery)">
            <summary>Query payrun results</summary>
            <param name="tableName">Target table name</param>
            <param name="payrollResultId">The payroll result id</param>
            <param name="query">The query</param>
            <returns>Payrun result data table, null on empty collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.GetOperationBaseName(System.String)">
            <summary>Get operation base name</summary>
            <param name="operation">The operation name</param>
            <returns>Operation base name</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteValueQuery``1(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Execute a value query on the Api web method</summary>
            <param name="methodName">The query name</param>
            <param name="attributeName">Name of the attribute</param>
            <param name="parameters">The method parameters</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteValueQuery``1(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},``0)">
            <summary>Execute a value query on the Api web method</summary>
            <param name="methodName">The query name</param>
            <param name="attributeName">Name of the attribute</param>
            <param name="parameters">The method parameters</param>
            <param name="defaultValue">The method parameters</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteLookupQuery(System.Int32,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>Get lookup values, grouped by lookup</summary>
            <param name="payrollId">The payroll id</param>
            <param name="culture">The culture</param>
            <param name="lookupName">The lookup name</param>
            <param name="regulationDate">The regulation date</param>
            <param name="evaluationDate">The evaluation date</param>
            <returns>Lookup values dictionary by lookup name, value is a key/value dictionary</returns>
            <code>
            var lookup = ExecuteLookupQuery(1, "MyLookupName", Language.Italian);
            var lookupValue = lookup["MyLookupKey"];
            </code>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteLookupQuery(System.Int32,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>Get lookup values, grouped by lookup</summary>
            <param name="payrollId">The payroll id</param>
            <param name="culture">The culture</param>
            <param name="lookupNames">The lookup names</param>
            <param name="regulationDate">The regulation date</param>
            <param name="evaluationDate">The evaluation date</param>
            <returns>Lookup values dictionary by lookup name, value is a key/value dictionary</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteCaseFieldQuery(System.Int32,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>Get payroll case fields</summary>
            <param name="payrollId">The payroll id</param>
            <param name="caseFieldNames">The case field names</param>
            <param name="clusterSetName">The cluster set</param>
            <param name="regulationDate">The regulation date</param>
            <param name="evaluationDate">The evaluation date</param>
            <returns>Payroll case fields</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ExecuteEmployeeTimeCaseValueQuery(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{PayrollEngine.Client.Scripting.Function.CaseValueColumn},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>Get employees case values as table
            Table structure: first column is the employee id, and for any case field a column</summary>
            <param name="payrollId">The payroll id</param>
            <param name="employeeIds">The employee ids</param>
            <param name="tableName">The table name</param>
            <param name="columns">The table columns</param>
            <param name="culture">The culture</param>
            <param name="valueDate">The value date</param>
            <param name="regulationDate">The regulation date</param>
            <param name="evaluationDate">The evaluation date</param>
            <returns>Employees case values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ResolveParameterUserId">
            <summary>Resolve the user id from the parameter UserId by id or identifier</summary>
            <returns>The employee id, null for unknown user</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ResolveParameterEmployeeId">
            <summary>Resolve the employee id from the parameter EmployeeId by id or identifier</summary>
            <returns>The employee id, null for unknown employee</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ResolveParameterRegulationId">
            <summary>Resolve the regulation id from the parameter RegulationId by id or name</summary>
            <returns>The regulation id, null for unknown regulation</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ResolveParameterPayrollId">
            <summary>Resolve the payroll id from the parameter PayrollId by id or name</summary>
            <returns>The regulation id, null for unknown payroll</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ResolveParameterPayrunId">
            <summary>Resolve the payrun id from the parameter PayrunId by id or name</summary>
            <returns>The regulation id, null for unknown payrun</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ResolveIdentifierParameter(System.String,System.String)">
            <summary>Resolve the object id from the identifier/id parameter</summary>
            <param name="queryName">The query name</param>
            <param name="parameterName">The parameter name</param>
            <returns>The object id, null for unknown payrun</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.ResolveNameParameter(System.String,System.String)">
            <summary>Resolve the object id from the name/id parameter</summary>
            <summary>Get the object id from the parameter</summary>
            <param name="queryName">The query name</param>
            <param name="parameterName">The parameter name</param>
            <returns>The object id, null for unknown payrun</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportFunction.InvokeWebhook``1(System.String,System.Object)">
            <summary>Invoke report webhook</summary>
            <param name="requestOperation">The request operation</param>
            <param name="requestMessage">The webhook request message</param>
            <returns>The webhook response object</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.ReportStartFunction">
            <summary>Report start function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportStartFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportStartFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportStartFunction.SetParameter(System.String,System.String)">
            <summary>Set report parameter value</summary>
            <param name="parameterName">The parameter name</param>
            <param name="value">The parameter value as JSON</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportStartFunction.SetParameter``1(System.String,``0)">
            <summary>Set report parameter typed value</summary>
            <param name="parameterName">The parameter name</param>
            <param name="value">The default value</param>
            <returns>The report parameter value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportStartFunction.HasQuery(System.String)">
            <summary>Check for existing report query</summary>
            <param name="queryName">The query name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportStartFunction.GetQuery(System.String)">
            <summary>Get report query</summary>
            <param name="queryName">The query name</param>
            <returns>The report parameter value as JSON</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportStartFunction.SetQuery(System.String,System.String)">
            <summary>Set report query value as JSON</summary>
            <param name="queryName">The query name</param>
            <param name="value">The query value as JSON</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.ReportStartFunction.Start">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.WageTypeFunction">
            <summary>Base class for wage type functions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.WageTypeFunction.Attribute">
            <summary>Get or set a wage type result attribute value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.WageTypeFunction.AttributePayrollValue">
            <summary>Get or set a wage type result attribute <see cref="T:PayrollEngine.Client.Scripting.PayrollValue"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.WageTypeFunction.WageType">
            <summary>Get a wage type value by wage type number</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.WageTypeFunction.Collector">
            <summary>Get a collector value by collector name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.WageTypeFunction.WageTypeNumber">
            <summary>The wage type number</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.WageTypeFunction.WageTypeName">
            <summary>The wage type name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.WageTypeFunction.WageTypeDescription">
            <summary>The wage type description</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.WageTypeFunction.WageTypeCalendar">
            <summary>The wage type calendar</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.WageTypeFunction.Collectors">
            <summary>The wage type collectors</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.WageTypeFunction.CollectorGroups">
            <summary>The wage type collector groups</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.EnableCollector(System.String)">
            <summary>Reenable disabled collector for the current employee job</summary>
            <param name="collectorName">Name of the collector</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.DisableCollector(System.String)">
            <summary>Disable collector for the current employee job</summary>
            <param name="collectorName">Name of the collector</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.GetResultTags">
            <summary>Get the wage type result tags</summary>
            <returns>The wage type result tags</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.SetResultTags(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Set the collector result tags</summary>
            <param name="tags">The result tags</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.GetResultAttribute(System.String)">
            <summary>Get wage result attribute</summary>
            <param name="name">The attribute name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.GetResultAttribute``1(System.String,``0)">
            <summary>Get wage result attribute typed value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.SetResultAttribute(System.String,System.Object)">
            <summary>Sets the wage result attribute value</summary>
            <param name="name">The attribute name</param>
            <param name="value">The attribute value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.GetWageTypeAttribute(System.String)">
            <summary>Get attribute value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.GetWageTypeAttribute``1(System.String,``0)">
            <summary>Get attribute typed value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.GetCollectorCurrentConsolidatedValue(PayrollEngine.Client.Scripting.CollectorConsolidatedResultQuery)">
            <summary>Get consolidated and current period employee collector results by query</summary>
            <param name="query">The result query</param>
            <returns>Consolidated employee collector results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.GetWageTypeCurrentConsolidatedValue(PayrollEngine.Client.Scripting.WageTypeConsolidatedResultQuery)">
            <summary>Get consolidated and current period employee wage type results by query</summary>
            <param name="query">The result query</param>
            <returns>Consolidated employee collector results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.AddPayrunResult(System.String,System.Object,System.Nullable{PayrollEngine.Client.Scripting.ValueType},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Add payrun result using the current period</summary>
            <param name="name">The result name</param>
            <param name="value">The result value</param>
            <param name="valueType">The result value type</param>
            <param name="source">The result source</param>
            <param name="slot">The result slot</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The wage type custom result attributes</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.AddPayrunResult(System.String,System.Object,System.DateTime,System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.ValueType},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Add payrun result</summary>
            <param name="name">The result name</param>
            <param name="value">The result value</param>
            <param name="startDate">The start date</param>
            <param name="endDate">The end date</param>
            <param name="valueType">The result value type</param>
            <param name="source">The result source</param>
            <param name="slot">The result slot</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The wage type custom result attributes</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.AddCustomResult(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{PayrollEngine.Client.Scripting.ValueType})">
            <summary>Add wage type custom result from case field values, using the current period</summary>
            <param name="source">The value source</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The wage type custom result attributes</param>
            <param name="valueType">The result value type (numeric), default is the wage type value type</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.AddCustomResult(System.String,System.Decimal,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{PayrollEngine.Client.Scripting.ValueType})">
            <summary>Add wage type custom result from case field values, using the current period</summary>
            <param name="source">The value source</param>
            <param name="value">The period value</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The wage type custom result attributes</param>
            <param name="valueType">The result value type (numeric), default is the wage type value type</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.AddCustomResult(System.String,System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{PayrollEngine.Client.Scripting.ValueType})">
            <summary>Add wage type custom result from case field values</summary>
            <param name="source">The value source</param>
            <param name="startDate">The moment within the start period</param>
            <param name="endDate">The moment within the end period</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The wage type custom result attributes</param>
            <param name="valueType">The result value type (numeric), default is the wage type value type</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.AddCustomResult(System.String,System.Decimal,System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{PayrollEngine.Client.Scripting.ValueType})">
            <summary>Add a wage type custom result</summary>
            <param name="source">The value source</param>
            <param name="value">The period value</param>
            <param name="startDate">The start date</param>
            <param name="endDate">The end date</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The wage type custom result attributes</param>
            <param name="valueType">The result value type (numeric), default is the wage type value type</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeFunction.ScheduleRetroPayrun(System.DateTime,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Schedule a retro payrun</summary>
            <param name="scheduleDate">The payrun schedule date, must be before the current period</param>
            <param name="resultTags">The result tags</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.WageTypeResultFunction">
            <summary>Setup wage type results</summary>
            <seealso cref="T:PayrollEngine.Client.Scripting.Function.WageTypeValueFunction">Wage Type Value Function</seealso>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeResultFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeResultFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.WageTypeResultFunction.WageTypeValue">
            <summary>The wage type value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeResultFunction.Result">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Function.WageTypeValueFunction">
            <summary>Calculate the wage type value</summary>
            <example>
            <code language="c#">
            // Example from case value
            Employee["Wage"]
            </code>
            <code language="c#">
            // Example from conditional case payroll value
            (int)Employee["Wage"] > 0 ? Employee["ManagementWage"] : PayrollValue.Empty
            </code>
            <code language="c#">
            // Example from running collector
            Collector["MyCollector"]
            </code>
            <code language="c#">
            // Example from running wage type
            WageType[2300]
            </code>
            <code language="c#">
            // Example with custom wage type result
            SetResult("MyResult", 5300); return WageType[2300]
            </code>
            <code language="c#">
            // Example with custom wage type result including the value type
            SetResult("MyResult", 5300, 2); return WageType[2300]
            </code>
            <code language="c#">
            // Example with custom wage type result including the value description
            SetResult("MyResult", 5300, "KST1"); return WageType[2300]
            </code>
            <code language="c#">
            // Example with custom wage type result including the value type and description
            SetResult("MyResult", 5300, 2, "KST1"); return WageType[2300]
            </code>
            <code language="c#">
            // Example with average wage type result from the last 3 periods on legal payrun jobs
            GetWageTypeResults(2300, new PeriodResultQuery(3, PayrunJobStatus.Legal)).DefaultIfEmpty().Average()
            </code>
            </example>
            <seealso cref="T:PayrollEngine.Client.Scripting.Function.WageTypeResultFunction">Wage Type Result Function</seealso>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeValueFunction.#ctor(System.Object)">
            <summary>Initializes a new instance with the function runtime</summary>
            <param name="runtime">The runtime</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeValueFunction.#ctor(System.String)">
            <summary>New function instance without runtime (scripting development)</summary>
            <remarks>Use <see cref="M:PayrollEngine.Client.Scripting.Function.Function.GetSourceFileName(System.String)"/> in your constructor for the source file name</remarks>
            <param name="sourceFileName">The name of the source file</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Function.WageTypeValueFunction.ExecutionCount">
            <summary>The execution count</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeValueFunction.RestartExecution">
            <summary>Restart execution of wage type calculation</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Function.WageTypeValueFunction.GetValue">
            <exclude />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseValueResult">
            <summary>Case value result</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseValueResult.CaseFieldName">
            <summary>The case field name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseValueResult.CaseSlot">
            <summary>The case slot</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseValueResult.Value">
            <summary>The case result value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseValueResult.Tags">
            <summary>The case value result tags</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValueResult.op_Implicit(PayrollEngine.Client.Scripting.CaseValueResult)~PayrollEngine.Client.Scripting.PayrollValue">
            <summary>Case value result to decimal</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorResult">
            <summary>Collector result</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorResult.CollectorName">
            <summary>The collector name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorResult.Start">
            <summary>The result period start</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorResult.End">
            <summary>The result period end</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorResult.Value">
            <summary>The collector result value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorResult.Tags">
            <summary>The collector result tags</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorResult.Attributes">
            <summary>The result attributes</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorResult.op_Implicit(PayrollEngine.Client.Scripting.CollectorResult)~System.Decimal">
            <summary>Convert collector result to decimal</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorResult.op_Implicit(PayrollEngine.Client.Scripting.CollectorResult)~System.Nullable{System.Decimal}">
            <summary>Convert collector result to nullable decimal</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorCustomResult">
            <summary>Collector custom result</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorCustomResult.CollectorName">
            <summary>The collector name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorCustomResult.Source">
            <summary>The value source</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorCustomResult.Start">
            <summary>The result period start</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorCustomResult.End">
            <summary>The result period end</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorCustomResult.Value">
            <summary>The collector custom result value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorCustomResult.Tags">
            <summary>The collector custom result tags</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorCustomResult.Attributes">
            <summary>The result attributes</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorCustomResult.op_Implicit(PayrollEngine.Client.Scripting.CollectorCustomResult)~System.Decimal">
            <summary>Convert collector custom result to decimal</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorCustomResult.op_Implicit(PayrollEngine.Client.Scripting.CollectorCustomResult)~System.Nullable{System.Decimal}">
            <summary>Convert collector custom result to nullable decimal</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.WageTypeResult">
            <summary>Wage type result</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeResult.WageTypeNumber">
            <summary>The wage type number</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeResult.WageTypeName">
            <summary>The wage type name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeResult.Start">
            <summary>The result period start</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeResult.End">
            <summary>The result period end</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeResult.Value">
            <summary>The wage type result value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeResult.Tags">
            <summary>The wage type result tags</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeResult.Attributes">
            <summary>The result attributes</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeResult.op_Implicit(PayrollEngine.Client.Scripting.WageTypeResult)~System.Decimal">
            <summary>Convert wage type result to decimal</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeResult.op_Implicit(PayrollEngine.Client.Scripting.WageTypeResult)~System.Nullable{System.Decimal}">
            <summary>Convert wage type result to nullable decimal</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.WageTypeCustomResult">
            <summary>Wage type custom result</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeCustomResult.WageTypeNumber">
            <summary>The wage type number</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeCustomResult.Name">
            <summary>The wage type name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeCustomResult.Source">
            <summary>The value source</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeCustomResult.Start">
            <summary>The result period start</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeCustomResult.End">
            <summary>The result period end</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeCustomResult.Value">
            <summary>The wage type custom result value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeCustomResult.Tags">
            <summary>The wage type custom result tags</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeCustomResult.Attributes">
            <summary>The result attributes</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeCustomResult.op_Implicit(PayrollEngine.Client.Scripting.WageTypeCustomResult)~System.Decimal">
            <summary>Convert wage type custom result to decimal</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeCustomResult.op_Implicit(PayrollEngine.Client.Scripting.WageTypeCustomResult)~System.Nullable{System.Decimal}">
            <summary>Convert wage type custom result to nullable decimal</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrollValueConverter">
            <summary>JSON converter for <see cref="T:PayrollEngine.Client.Scripting.PayrollValue"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValueConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Read and convert the JSON to T</summary>
            <remarks>A converter may throw any Exception, but should throw <cref>JsonException</cref> when the JSON is invalid</remarks>
            <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader"/> to read from</param>
            <param name="typeToConvert">The <see cref="T:System.Type"/> being converted</param>
            <param name="options">The <see cref="T:System.Text.Json.JsonSerializerOptions"/> being used</param>
            <returns>The value that was converted</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValueConverter.Write(System.Text.Json.Utf8JsonWriter,PayrollEngine.Client.Scripting.PayrollValue,System.Text.Json.JsonSerializerOptions)">
            <summary>Write the value as JSON</summary>
            <remarks>A converter may throw any Exception, but should throw <cref>JsonException</cref> when the JSON cannot be created</remarks>
            <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter"/> to write to</param>
            <param name="value">The value to convert</param>
            <param name="options">The <see cref="T:System.Text.Json.JsonSerializerOptions"/> being used</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrollValue">
            <summary>Payroll value</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.PayrollValue.Empty">
            <summary>New payroll value instance</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.#ctor">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrollValue"/> class</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.#ctor(System.Object)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrollValue"/> class</summary>
            <param name="value">The value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.#ctor(PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrollValue"/> class</summary>
            <param name="source">The source payroll value</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.PayrollValue.Value">
            <summary>The original value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.PayrollValue.CurrentValue">
            <summary>The value query</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.PayrollValue.HasValue">
            <summary>Test if the payroll value is defined</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.PayrollValue.IsNumeric">
            <summary>Test if the payroll value is numeric</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Implicit(PayrollEngine.Client.Scripting.PayrollValue)~System.String">
            <summary>Convert payroll value to string/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Implicit(PayrollEngine.Client.Scripting.PayrollValue)~System.Int32">
            <summary>Convert payroll value to int/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Implicit(PayrollEngine.Client.Scripting.PayrollValue)~System.Nullable{System.Int32}">
            <summary>Convert payroll value to nullable int</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Implicit(PayrollEngine.Client.Scripting.PayrollValue)~System.Decimal">
            <summary>Convert payroll value to decimal</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Implicit(PayrollEngine.Client.Scripting.PayrollValue)~System.Nullable{System.Decimal}">
            <summary>Convert payroll value to nullable decimal</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Implicit(PayrollEngine.Client.Scripting.PayrollValue)~System.DateTime">
            <summary>Convert payroll value to DateTime</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Implicit(PayrollEngine.Client.Scripting.PayrollValue)~System.Nullable{System.DateTime}">
            <summary>Convert payroll value to nullable DateTime</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Implicit(PayrollEngine.Client.Scripting.PayrollValue)~System.Boolean">
            <summary>Convert payroll value to bool</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Implicit(PayrollEngine.Client.Scripting.PayrollValue)~System.Nullable{System.Boolean}">
            <summary>Convert payroll value to nullable bool</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_UnaryPlus(PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Unary plus of a payroll value (decimal, int)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_UnaryNegation(PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Unary minus of a payroll value (decimal, int)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_LogicalNot(PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Logical negation of a payroll value (bool)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_True(PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Test if payroll value is true</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_False(PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Test if payroll value is false</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Addition(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Addition of two payroll values (decimal, int, string)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Subtraction(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Subtraction of two payroll values (decimal, int)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Multiply(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Multiplication of two payroll values (decimal, int)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Division(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Division of two payroll values (decimal, int)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Modulus(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Remainder of two payroll values (decimal, int)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_BitwiseAnd(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Test if two payroll values are true (bool)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_BitwiseOr(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Test if any payroll value is true (bool)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Equality(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Compare two payroll values for equality</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_Inequality(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Compare two payroll values for difference</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_LessThan(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Compare if a payroll value is less than another payroll value (decimal, int)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_GreaterThan(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Compare if a payroll value is greater than another payroll value (decimal, int)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_LessThanOrEqual(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Compare if a payroll value is less or equals than another payroll value (decimal, int)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.op_GreaterThanOrEqual(PayrollEngine.Client.Scripting.PayrollValue,PayrollEngine.Client.Scripting.PayrollValue)">
            <summary>Compare if a payroll value is greater or equals than another payroll value (decimal, int)</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.Round(System.Int32,System.MidpointRounding)">
            <summary>Returns the integral digits of the specified decimal, using a step size</summary>
            <param name="decimals">The number of significant decimal places (precision) in the return value</param>
            <param name="mode">A value that specifies how to round d if it is midway between two other numbers</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.RoundUp(System.Decimal)">
            <summary>Rounds a decimal value up</summary>
            <param name="stepSize">The round step size</param>
            <returns>The up-rounded value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.RoundDown(System.Decimal)">
            <summary>Rounds a decimal value down</summary>
            <param name="stepSize">The round step size</param>
            <returns>The down-rounded value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.Truncate(System.Int32)">
            <summary>Returns the integral digits of the specified decimal, using a step size</summary>
            <param name="stepSize">The step size used to truncate</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to this instance</summary>
            <param name="obj">The object to compare with the current object</param>
            <returns>True if the specified <see cref="T:System.Object" /> is equal to this instance</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.GetHashCode">
            <summary>Returns a hash code for this instance</summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrollValue.ToString">
            <summary>Returns a <see cref="T:System.String" /> that represents this instance</summary>
            <returns>A <see cref="T:System.String" /> that represents this instance</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PeriodValue">
            <summary>Payroll value for a date period</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValue.#ctor">
            <summary>New period payroll value instance</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValue.#ctor(PayrollEngine.Client.Scripting.DatePeriod,System.Object)">
            <summary>New period payroll value instance</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValue.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Object)">
            <summary>New period payroll value instance</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.PeriodValue.Start">
            <summary>The period start</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.PeriodValue.End">
            <summary>The period end</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.PeriodValue.Period">
            <summary>The period</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValue.op_Implicit(PayrollEngine.Client.Scripting.PeriodValue)~System.String">
            <summary>Convert case value to string/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValue.op_Implicit(PayrollEngine.Client.Scripting.PeriodValue)~System.Int32">
            <summary>Convert case value to int/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValue.op_Implicit(PayrollEngine.Client.Scripting.PeriodValue)~System.Nullable{System.Int32}">
            <summary>Convert case value to nullable int</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValue.op_Implicit(PayrollEngine.Client.Scripting.PeriodValue)~System.Decimal">
            <summary>Convert case value to decimal</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValue.op_Implicit(PayrollEngine.Client.Scripting.PeriodValue)~System.Nullable{System.Decimal}">
            <summary>Convert case value to nullable decimal</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValue.op_Implicit(PayrollEngine.Client.Scripting.PeriodValue)~System.DateTime">
            <summary>Convert case value to DateTime</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValue.op_Implicit(PayrollEngine.Client.Scripting.PeriodValue)~System.Nullable{System.DateTime}">
            <summary>Convert case value to nullable DateTime</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodValue.ToString">
            <summary>Returns a <see cref="T:System.String" /> that represents this instance</summary>
            <returns>A <see cref="T:System.String" /> that represents this instance</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.ReportQuery">
            <summary>Report query</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.ReportQuery.Status">
            <summary>The object status (default: all status)</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.ReportQuery.Filter">
            <summary>The OData filter expression (with support for attribute fields)</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.ReportQuery.OrderBy">
            <summary>The OData order-by expression (with support for attribute fields)</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.ReportQuery.Select">
            <summary>The OData field selection expression</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.ReportQuery.Top">
            <summary>The number of items in the queried collection</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.ReportQuery.Skip">
            <summary>The number of items in the queried collection that are to be skipped</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.QueryParameters">
            <summary>Query parameters</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Filter(PayrollEngine.Client.Scripting.Report.Filter)">
            <summary>Query filter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.EqualId(System.Int32)">
            <summary>Query equal id filter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.EqualName(System.String)">
            <summary>Query equal name filter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.EqualIdentifier(System.String)">
            <summary>Query equal identifier filter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Equals(System.String,System.Object)">
            <summary>Query equals filter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.NotEquals(System.String,System.Object)">
            <summary>Query not equals filter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Less(System.String,System.Object)">
            <summary>Query less filter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Greater(System.String,System.Object)">
            <summary>Query greater filter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.LessEquals(System.String,System.Object)">
            <summary>Query less equals filter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.GreaterEquals(System.String,System.Object)">
            <summary>Query greater equals filter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.OrderBy(PayrollEngine.Client.Scripting.Report.OrderBy)">
            <summary>Query order by</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.OrderBy(System.String)">
            <summary>Query order by</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.OrderAscending(System.String)">
            <summary>Query order ascending</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.OrderDescending(System.String)">
            <summary>Query order descending</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.InactiveStatus">
            <summary>Query inactive objects</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.ActiveStatus">
            <summary>Query active objects</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Status(PayrollEngine.Client.Scripting.Report.Status)">
            <summary>Query object status</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Select(PayrollEngine.Client.Scripting.Report.Select)">
            <summary>Query select</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Select(System.String[])">
            <summary>Query select</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Top(System.Int32)">
            <summary>Query top</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Skip(System.Int32)">
            <summary>Query skip</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Id(System.Int32)">
            <summary>Query id parameter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Id``1(System.Int32)">
            <summary>Query type id parameter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Name(System.String)">
            <summary>Query name parameter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Identifier(System.String)">
            <summary>Query identifier parameter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Parameter``2(System.Collections.Generic.KeyValuePair{``0,``1})">
            <summary>Query parameter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Parameter(System.String,System.Object)">
            <summary>Query parameter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.QueryParameters.Parameter(PayrollEngine.Client.Scripting.Report.Parameter)">
            <summary>Query parameter</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Parameter">
            <summary>Query parameter</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.Parameter.Name">
            <summary>The parameter name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.Parameter.Value">
            <summary>The parameter value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Parameter.#ctor(System.String,System.Object)">
            <summary>Constructor</summary>
            <param name="name">The parameter name</param>
            <param name="value">The parameter value</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.OrderDirection">
            <summary>Query order direction</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Report.OrderDirection.Ascending">
            <summary>Ascending sort order</summary>
        </member>
        <member name="F:PayrollEngine.Client.Scripting.Report.OrderDirection.Descending">
            <summary>Descending sort order</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.OrderAscending">
            <summary>Query order ascending</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.OrderAscending.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="field">The order field</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.OrderDescending">
            <summary>Query order descending</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.OrderDescending.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="field">The order field</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.OrderBy">
            <summary>Query order by, default order is ascending</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.OrderBy.Expression">
            <summary>The query order by expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.OrderBy.#ctor(System.String,System.Nullable{PayrollEngine.Client.Scripting.Report.OrderDirection})">
            <summary>Constructor</summary>
            <param name="expression">The query order expression</param>
            <param name="direction">The order direction</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.OrderBy.AndThenBy(PayrollEngine.Client.Scripting.Report.OrderBy)">
            <summary>And with another order by expression</summary>
            <param name="orderBy">The order by clause</param>
            <returns>Updated query order by</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.OrderBy.op_Implicit(PayrollEngine.Client.Scripting.Report.OrderBy)~System.String">
            <summary>Implicit order by to string converter</summary>
            <param name="orderBy">The order by clause</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.OrderBy.ToString">
            <inheritdoc />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.InactiveStatus">
            <summary>Inactive status expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.InactiveStatus.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.ActiveStatus">
            <summary>Active status expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.ActiveStatus.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Status">
            <summary>Object status expression</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.Status.Expression">
            <summary>The status expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Status.#ctor(PayrollEngine.Client.Scripting.ObjectStatus)">
            <summary>Constructor</summary>
            <param name="status">The object status</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Select">
            <summary>Query select</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.Select.Expression">
            <summary>The query select expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Select.#ctor(System.String[])">
            <summary>Constructor</summary>
            <param name="fields">The query select fields</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Select.op_Implicit(PayrollEngine.Client.Scripting.Report.Select)~System.String">
            <summary>Implicit select to string converter</summary>
            <param name="select">The select clause</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Select.ToString">
            <inheritdoc />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Active">
            <summary>Equal active status filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Active.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Inactive">
            <summary>Equal inactive status filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Inactive.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.EqualStatus">
            <summary>Equal status filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.EqualStatus.#ctor(PayrollEngine.Client.Scripting.ObjectStatus)">
            <summary>Constructor</summary>
            <param name="status">The object status</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.EqualId">
            <summary>Equal id filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.EqualId.#ctor(System.Int32)">
            <summary>Constructor</summary>
            <param name="value">The query id</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.EqualName">
            <summary>Equal name filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.EqualName.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="value">The query name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.EqualName.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="value">The value function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.EqualIdentifier">
            <summary>Equal identifier filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.EqualIdentifier.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="identifier">The query identifier</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.EqualIdentifier.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="identifier">The identifier function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Equals">
            <summary>Equals filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Equals.#ctor(System.String,System.Object)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The query value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Equals.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,System.Object)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The query value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Equals.#ctor(System.String,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The expression function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Equals.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The value function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.NotEquals">
            <summary>Not equals filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.NotEquals.#ctor(System.String,System.Object)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The query value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.NotEquals.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,System.Object)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The query value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.NotEquals.#ctor(System.String,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The expression function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.NotEquals.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The value function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Less">
            <summary>Less than filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Less.#ctor(System.String,System.Object)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The query value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Less.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,System.Object)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The query value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Less.#ctor(System.String,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The expression function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Less.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The value function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Greater">
            <summary>Greater than filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Greater.#ctor(System.String,System.Object)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The query value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Greater.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,System.Object)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The query value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Greater.#ctor(System.String,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The expression function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Greater.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The value function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.LessEquals">
            <summary>Less than or equals filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.LessEquals.#ctor(System.String,System.Object)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The query value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.LessEquals.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,System.Object)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The query value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.LessEquals.#ctor(System.String,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The expression function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.LessEquals.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The value function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.GreaterEquals">
            <summary>Greater than or equals filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.GreaterEquals.#ctor(System.String,System.Object)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The query value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.GreaterEquals.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,System.Object)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The query value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.GreaterEquals.#ctor(System.String,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The expression function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.GreaterEquals.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The value function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.ConditionFilter">
            <summary>Condition filter</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.ConditionFilter.Field">
            <summary>The query field name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.ConditionFilter.Operator">
            <summary>The query operator</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.ConditionFilter.Value">
            <summary>The query field name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.ConditionFilter.#ctor(System.String,System.String,System.Object)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="operator">The filter operator</param>
            <param name="value">The query value</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Contains">
            <summary>Contains filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Contains.#ctor(System.String,System.String)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Contains.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,System.String)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Contains.#ctor(System.String,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The expression function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Contains.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The value function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.EndsWith">
            <summary>Ends with filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.EndsWith.#ctor(System.String,System.String)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.EndsWith.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,System.String)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.EndsWith.#ctor(System.String,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The expression function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.EndsWith.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The value function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.StartsWith">
            <summary>Starts with filter expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.StartsWith.#ctor(System.String,System.String)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.StartsWith.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,System.String)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.StartsWith.#ctor(System.String,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The query field name</param>
            <param name="value">The expression function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.StartsWith.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase,PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="field">The field function</param>
            <param name="value">The value function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Filter">
            <summary>Query filter</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Filter.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="expression">The filter expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Filter.Group">
            <summary>Group existing filters</summary>
            <returns>Updated query filter</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Filter.And(PayrollEngine.Client.Scripting.Report.Filter)">
            <summary>And with another filter expression</summary>
            <returns>Updated query filter</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Filter.Or(PayrollEngine.Client.Scripting.Report.Filter)">
            <summary>Or with another filter expression</summary>
            <returns>Updated query filter</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Time">
            <summary>Time function expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Time.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Time.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="innerFunction">The inner function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Date">
            <summary>Date function expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Date.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Date.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="innerFunction">The inner function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Minute">
            <summary>Minute function expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Minute.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Minute.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="innerFunction">The inner function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Hour">
            <summary>Hour function expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Hour.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Hour.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="innerFunction">The inner function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Day">
            <summary>Day function expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Day.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Day.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="innerFunction">The inner function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Month">
            <summary>Month function expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Month.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Month.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="innerFunction">The inner function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.Year">
            <summary>Year function expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Year.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.Year.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="innerFunction">The inner function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.FunctionBase">
            <summary>Query function</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.FunctionBase.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="expression">The function expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.FunctionBase.#ctor(PayrollEngine.Client.Scripting.Report.FunctionBase)">
            <summary>Constructor</summary>
            <param name="innerFunction">The inner function</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.ExpressionBase">
            <summary>Query expression base</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Report.ExpressionBase.Expression">
            <summary>The query expression</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.ExpressionBase.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.ExpressionBase.op_Implicit(PayrollEngine.Client.Scripting.Report.ExpressionBase)~System.String">
            <summary>Implicit function to string converter</summary>
            <param name="function">The function</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.ExpressionBase.ToString">
            <inheritdoc />
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.DataTableExtensions">
            <summary>Data table extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.RemovePrimaryKey(System.Data.DataTable)">
            <summary>Remove the table primary key</summary>
            <param name="table">The table</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.ContainsColumn(System.Data.DataTable,System.String)">
            <summary>Test for table column</summary>
            <param name="table">The table</param>
            <param name="columnName">Name of the column</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.AddColumn``1(System.Data.DataTable,System.String,System.String)">
            <summary>Add table column</summary>
            <param name="table">The table</param>
            <param name="columnName">Name of the column</param>
            <param name="expression">The compute expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.AddColumn(System.Data.DataTable,System.String,System.Type,System.String)">
            <summary>Add table column</summary>
            <param name="table">The table</param>
            <param name="columnName">Name of the column</param>
            <param name="type">The column type</param>
            <param name="expression">The compute expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.InsertColumn``1(System.Data.DataTable,System.Int32,System.String,System.String)">
            <summary>Insert table column at certain list position</summary>
            <param name="table">The table</param>
            <param name="index">The column list position</param>
            <param name="columnName">Name of the column</param>
            <param name="expression">The compute expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.EnsureColumn``1(System.Data.DataTable,System.String,System.String)">
            <summary>Ensure table column</summary>
            <param name="table">The table</param>
            <param name="columnName">Name of the column</param>
            <param name="expression">The compute expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.EnsureColumn(System.Data.DataTable,System.String,System.Type,System.String)">
            <summary>Ensure table column</summary>
            <param name="table">The table</param>
            <param name="columnName">Name of the column</param>
            <param name="type">The column type</param>
            <param name="expression">The compute expression</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.EnsureColumns``1(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Ensure table columns</summary>
            <param name="table">The table</param>
            <param name="columns">The columns to ensure</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.EnsureColumns(System.Data.DataTable,System.Data.DataColumnCollection)">
            <summary>Ensure table column</summary>
            <param name="table">The table</param>
            <param name="columns">The columns to ensure</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.RenameColumn(System.Data.DataTable,System.String,System.String)">
            <summary>Rename table column</summary>
            <param name="table">The table</param>
            <param name="oldColumnName">Existing name of the column</param>
            <param name="newColumnName">Existing name of the column</param>
            <returns>The column name</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.RemoveColumn(System.Data.DataTable,System.String)">
            <summary>Remove table column</summary>
            <param name="table">The table</param>
            <param name="columnName">Name of the column</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.SetPrimaryKey(System.Data.DataTable,System.String)">
            <summary>Set the table primary key column</summary>
            <param name="table">The table</param>
            <param name="columnName">Name of the column</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.Rows(System.Data.DataTable)">
            <summary>Get table rows</summary>
            <param name="table">The table</param>
            <returns>A row collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.HasRows(System.Data.DataTable)">
            <summary>Test for any table rows</summary>
            <param name="table">The table</param>
            <returns>True if rows are present</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.IsSingleRow(System.Data.DataTable)">
            <summary>Test for single row table</summary>
            <param name="table">The table</param>
            <returns>True for a single row collection</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.SingleRow(System.Data.DataTable)">
            <summary>Get single row table</summary>
            <param name="table">The table</param>
            <returns>The single row</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.AsSingleRow(System.Data.DataTable)">
            <summary>Get as single row table</summary>
            <param name="table">The table</param>
            <returns>The single row, null on table with multiple rows</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.GetSingleRowId(System.Data.DataTable)">
            <summary>Get single row id</summary>
            <param name="table">The table</param>
            <returns>The data row id</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.GetSingleRowName(System.Data.DataTable)">
            <summary>Get single row name</summary>
            <param name="table">The table</param>
            <returns>The data row name</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.GetSingleRowIdentifier(System.Data.DataTable)">
            <summary>Get single row identifier</summary>
            <param name="table">The table</param>
            <returns>The data row identifier</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.GetSingleRowValue``1(System.Data.DataTable,System.String,``0)">
            <summary>Get single row table value</summary>
            <param name="table">The table</param>
            <param name="column">The column name</param>
            <param name="defaultValue">The default value</param>
            <returns>The data row value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.SelectRows(System.Data.DataTable,System.String)">
            <summary>Select table rows by filter</summary>
            <param name="table">The table</param>
            <param name="filterExpression">The filter matching the rows to delete</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.DeleteRows(System.Data.DataTable,System.String)">
            <summary>Delete table rows by filter</summary>
            <param name="table">The table</param>
            <param name="filterExpression">The filter matching the rows to delete</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.GetValues``1(System.Data.DataTable,System.String,``0)">
            <summary>Get data table rows value</summary>
            <param name="dataTable">The data table</param>
            <param name="column">The column name</param>
            <param name="defaultValue">The default value</param>
            <returns>The data table rows value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataTableExtensions.GetDictionary(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>Get data table rows JSON value as dictionary</summary>
            <param name="dataTable">The data table</param>
            <param name="column">The column name</param>
            <param name="keyField">The json object key field</param>
            <param name="valueField">The json object value field</param>
            <returns>The data table rows value</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Report.DataRowExtensions">
            <summary>Data row extension methods</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetRowId(System.Data.DataRow)">
            <summary>Get data row id</summary>
            <param name="dataRow">The data row</param>
            <returns>The data row id</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetRowName(System.Data.DataRow)">
            <summary>Get data row name</summary>
            <param name="dataRow">The data row</param>
            <returns>The data row name</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetRowIdentifier(System.Data.DataRow)">
            <summary>Get data row identifier</summary>
            <param name="dataRow">The data row</param>
            <returns>The data row identifier</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetRowObjectStatus(System.Data.DataRow)">
            <summary>Get data row object status</summary>
            <param name="dataRow">The data row</param>
            <returns>The data row object status</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetEnumValue``1(System.Data.DataRow,System.String,``0)">
            <summary>Get data row enum value</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <param name="defaultValue">The default value</param>
            <returns>The data row enum value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetValue``1(System.Data.DataRow,System.String,``0)">
            <summary>Get data row value</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <param name="defaultValue">The default value</param>
            <returns>The data row value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.SetValue``1(System.Data.DataRow,System.String,``0)">
            <summary>Set data row value</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.SetValue(System.Data.DataRow,System.String,System.Object,System.Type)">
            <summary>Set data row value</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <param name="value">The value to set</param>
            <param name="type">The value type</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetJsonValue``1(System.Data.DataRow,System.String,System.Object)">
            <summary>Get data row json value</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <param name="defaultValue">The default value</param>
            <returns>The data row value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetJsonValue(System.Data.DataRow,System.String,System.Type,System.Object)">
            <summary>Get data row json value</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <param name="type">The value type</param>
            <param name="defaultValue">The default value</param>
            <returns>The data row value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.SetJsonValue``1(System.Data.DataRow,System.String,``0)">
            <summary>Set data row json value</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.SetJsonValue(System.Data.DataRow,System.Type,System.String,System.Object)">
            <summary>Set data row json value</summary>
            <param name="dataRow">The data row</param>
            <param name="type">The value type</param>
            <param name="column">The column name</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetPayrollValueType(System.Data.DataRow)">
            <summary>Get default payroll value type</summary>
            <param name="dataRow">The data row</param>
            <returns>The payroll value tye</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetPayrollValueType(System.Data.DataRow,System.String,PayrollEngine.Client.Scripting.ValueType)">
            <summary>Get payroll value type</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <param name="defaultType">The default value type</param>
            <returns>The payroll value tye</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetPayrollValue``1(System.Data.DataRow,``0)">
            <summary>Get default payroll value</summary>
            <param name="dataRow">The data row</param>
            <param name="defaultValue">The default value</param>
            <returns>The payroll value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetPayrollValue``1(System.Data.DataRow,System.String,System.String,``0)">
            <summary>Get payroll value</summary>
            <param name="dataRow">The data row</param>
            <param name="valueColumn">The value column name</param>
            <param name="valueTypeColumn">The value type column name</param>
            <param name="defaultValue">The default value</param>
            <returns>The payroll value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetPayrollValue(System.Data.DataRow,System.Object)">
            <summary>Get default payroll value</summary>
            <param name="dataRow">The data row</param>
            <param name="defaultValue">The default value</param>
            <returns>The payroll value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetPayrollValue(System.Data.DataRow,System.String,System.String,System.Object)">
            <summary>Get payroll value</summary>
            <param name="dataRow">The data row</param>
            <param name="valueColumn">The value column name</param>
            <param name="valueTypeColumn">The value type column name</param>
            <param name="defaultValue">The default value</param>
            <returns>The payroll value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetLocalizedName(System.Data.DataRow,System.String)">
            <summary>Get data row localized name</summary>
            <param name="dataRow">The data row</param>
            <param name="culture">The culture</param>
            <returns>The localized data row name</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetLocalizedIdentifier(System.Data.DataRow,System.String)">
            <summary>Get data row localized identifier</summary>
            <param name="dataRow">The data row</param>
            <param name="culture">The culture</param>
            <returns>The localized data row identifier</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetLocalizedValue(System.Data.DataRow,System.String,System.String)">
            <summary>Get data row localized value using the ValueColumnLocalizations column</summary>
            <param name="dataRow">The data row</param>
            <param name="valueColumn">The value column name</param>
            <param name="culture">The culture</param>
            <returns>The localized data row value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetLocalizedValue(System.Data.DataRow,System.String,System.String,System.String)">
            <summary>Get data row localized value</summary>
            <param name="dataRow">The data row</param>
            <param name="valueColumn">The value column name</param>
            <param name="localizationColumn">The localization column name</param>
            <param name="culture">The culture</param>
            <returns>The localized data row value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetValues``1(System.Collections.Generic.IEnumerable{System.Data.DataRow},System.String,``0)">
            <summary>Get data rows value</summary>
            <param name="dataRows">The data rows</param>
            <param name="column">The column name</param>
            <param name="defaultValue">The default value</param>
            <returns>The data rows value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetListValue``1(System.Data.DataRow,System.String)">
            <summary>Get data row JSON value as list</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <returns>The list</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetDictionary``2(System.Data.DataRow,System.String)">
            <summary>Get data row JSON value as dictionary</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <returns>The dictionary</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetAttributes(System.Data.DataRow)">
            <summary>Get attributes column value as attribute dictionary</summary>
            <param name="dataRow">The data row</param>
            <returns>The attributes dictionary</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetAttributes(System.Data.DataRow,System.String)">
            <summary>Get data row json value as attribute dictionary</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <returns>The attributes dictionary</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetAttribute``1(System.Data.DataRow,System.String,``0)">
            <summary>Get value from attributes column</summary>
            <param name="dataRow">The data row</param>
            <param name="attribute">The attribute name</param>
            <param name="defaultValue">The default value</param>
            <returns>The attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetAttribute``1(System.Data.DataRow,System.String,System.String,``0)">
            <summary>Get attribute from a data row json value</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <param name="attribute">The attribute name</param>
            <param name="defaultValue">The default value</param>
            <returns>The attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetAttribute(System.Data.DataRow,System.String,System.Object)">
            <summary>Get value from attributes column</summary>
            <param name="dataRow">The data row</param>
            <param name="attribute">The attribute name</param>
            <param name="defaultValue">The default value</param>
            <returns>The attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetAttribute(System.Data.DataRow,System.String,System.String,System.Object)">
            <summary>Get attribute from a data row json value</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <param name="attribute">The attribute name</param>
            <param name="defaultValue">The default value</param>
            <returns>The attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetLocalizations(System.Data.DataRow,System.String)">
            <summary>Get data row json value as localizations dictionary</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <returns>The attributes dictionary</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.GetLocalization(System.Data.DataRow,System.String,System.String,System.String)">
            <summary>Get attribute from a data row json value</summary>
            <param name="dataRow">The data row</param>
            <param name="column">The column name</param>
            <param name="culture">The culture</param>
            <param name="defaultValue">The default value</param>
            <returns>The attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.TransposeFrom``1(System.Data.DataRow,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Func{``0,System.Object},System.Func{``0,System.Type},System.Func{``0,System.Object})">
            <summary>Transpose item collection to table columns with values</summary>
            <remarks>Use the function return value null, to suppress further item operations</remarks>
            <param name="target">The target data row</param>
            <param name="items">The items to transpose</param>
            <param name="columnName">The column name function (mandatory)</param>
            <param name="itemValue">The item value function (mandatory)</param>
            <param name="columnType">The column type function, default is string</param>
            <param name="defaultValue">The default value function, default is none</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.TransposeFrom``2(System.Data.DataRow,System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,System.String},System.Func{``1,System.Object},System.Func{``0,System.Type},System.Func{``0,System.Object})">
            <summary>Transpose dictionary to table columns with values</summary>
            <remarks>Use the function return value null, to suppress further item operations
            Transpose dynamic object: row.TransposeFrom((IDictionary&lt;string, object&gt;)dynamicObject);</remarks>
            <param name="target">The target data row</param>
            <param name="items">The items to transpose</param>
            <param name="columnName">The column name function (mandatory)</param>
            <param name="itemValue">The item value function (mandatory)</param>
            <param name="columnType">The column type function, default is string</param>
            <param name="defaultValue">The default value function, default is none</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Report.DataRowExtensions.TransposeFrom(System.Data.DataRow,System.Data.DataRow,System.Func{System.Data.DataColumn,System.String},System.Func{System.Object,System.Object},System.Func{System.Data.DataColumn,System.Type},System.Func{System.Data.DataColumn,System.Object})">
            <summary>Transpose data row items to table columns with values</summary>
            <remarks>Use the function return value null, to suppress further item operations</remarks>
            <param name="target">The target data row</param>
            <param name="source">The source data row</param>
            <param name="columnName">The column name function, default is the source column name</param>
            <param name="itemValue">The item value function, default is the source column value</param>
            <param name="columnType">The column type function, default is the source column type</param>
            <param name="defaultValue">The default value function, default is none</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.ICaseAvailableRuntime">
            <summary>Runtime for the case available function <see cref="T:PayrollEngine.Client.Scripting.Function.CaseAvailableFunction"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseAvailableRuntime.GetAvailableActions">
            <summary>Get case available actions</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.ICaseBuildRuntime">
            <summary>Runtime for the case build function  <see cref="T:PayrollEngine.Client.Scripting.Function.CaseBuildFunction"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseBuildRuntime.GetBuildActions">
            <summary>Get case build actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseBuildRuntime.GetFieldBuildActions(System.String)">
            <summary>Get case field build actions</summary>
            <param name="caseFieldName">The name of the case field</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime">
            <summary>Runtime for the case change function <see cref="T:PayrollEngine.Client.Scripting.Function.CaseChangeFunction"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.CancellationDate">
            <summary>Get the cancellation date</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.CaseAvailable(System.String)">
            <summary>Test if a case is available</summary>
            <param name="caseName">The name of the case</param>
            <returns>True if the case is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.SetCaseAttribute(System.String,System.String,System.Object)">
            <summary>Set case attribute value</summary>
            <param name="caseName">The name of the case</param>
            <param name="attributeName">The name of the case attribute</param>
            <param name="value">The value of the case attribute</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.RemoveCaseAttribute(System.String,System.String)">
            <summary>Remove case attribute</summary>
            <param name="caseName">The name of the case</param>
            <param name="attributeName">The name of the case attribute</param>
            <returns>True if the case attribute has been removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.GetFieldNames">
            <summary>Get field names</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.HasFields">
            <summary>Test if the case contains fields</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.HasField(System.String)">
            <summary>Test if a case field is defined</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the case field is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.IsFieldComplete(System.String)">
            <summary>Test if a case field is complete</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the case field is complete</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.IsFieldEmpty(System.String)">
            <summary>Test if a case field is empty (no start, end and value)</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the case field is empty</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.FieldAvailable(System.String)">
            <summary>Test if a case field is available</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the case field is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.FieldAvailable(System.String,System.Boolean)">
            <summary>Set if the case field is available</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="available">The case field available value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.HasStart(System.String)">
            <summary>Test if a case start date is defined</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the case start date is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.GetStart(System.String)">
            <summary>Get the case start date by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The source case start date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.SetStart(System.String,System.Nullable{System.DateTime})">
            <summary>Set the case start date by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="start">The start date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.InitStart(System.String,System.Nullable{System.DateTime})">
            <summary>Initialize the case start date by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="start">The start date to initialize</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.HasEnd(System.String)">
            <summary>Test if a case end date is defined</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the case end date is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.GetEnd(System.String)">
            <summary>Get the case end date by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The case end date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.SetEnd(System.String,System.Nullable{System.DateTime})">
            <summary>Set the case end date by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="end">The end date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.InitEnd(System.String,System.Nullable{System.DateTime})">
            <summary>Initialize the case end date by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="end">The end date to initialize</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.GetValueType(System.String)">
            <summary>Get a case value type</summary>
            <param name="caseFieldName">The name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.HasValue(System.String)">
            <summary>Test if a case value is defined</summary>
            <param name="caseFieldName">The name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.GetValue(System.String)">
            <summary>Get a case value by his field name, in context of the script</summary>
            <param name="caseFieldName">The name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.SetValue(System.String,System.Object)">
            <summary>Set the target case value by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.InitValue(System.String,System.Object)">
            <summary>Initialize the case value by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="value">The value to initialize</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.AddCaseValueTag(System.String,System.String)">
            <summary>Add case value tag</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="tag">The tag to add</param>
            <returns>True if the case value tag has ben added</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.RemoveCaseValueTag(System.String,System.String)">
            <summary>Remove case value tag</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="tag">The tag to remove</param>
            <returns>True if the case value tag has ben removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.SetCaseFieldAttribute(System.String,System.String,System.Object)">
            <summary>Set case field attribute value</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="attributeName">The name of the case field attribute</param>
            <param name="value">The value of the case field attribute</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.RemoveCaseFieldAttribute(System.String,System.String)">
            <summary>Remove case field attribute</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="attributeName">The name of the case field attribute</param>
            <returns>True if the case field attribute has been removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.SetCaseValueAttribute(System.String,System.String,System.Object)">
            <summary>Set case field value attribute value</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="attributeName">The name of the case field attribute</param>
            <param name="value">The value of the case field value attribute</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseChangeRuntime.RemoveCaseValueAttribute(System.String,System.String)">
            <summary>Remove case field value attribute</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="attributeName">The name of the case field attribute</param>
            <returns>True if the case field attribute has been removed</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.ICaseRelationBuildRuntime">
            <summary>Runtime for the case relation build function <see cref="T:PayrollEngine.Client.Scripting.Function.CaseRelationBuildFunction"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationBuildRuntime.GetBuildActions">
            <summary>Get case relation build actions</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime">
            <summary>Runtime for the case relation function <see cref="T:PayrollEngine.Client.Scripting.Function.CaseRelationFunction"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.SourceCaseName">
            <summary>Gets the name of the source case</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.SourceCaseSlot">
            <summary>Gets the source case slot</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.SourceCaseCancellationDate">
            <summary>Get the source case cancellation date</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetSourceFieldNames">
            <summary>Get source field names</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.HasSourceFields">
            <summary>Test if the source case contains fields</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.HasSourceField(System.String)">
            <summary>Test if a source case field is defined</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the source case field is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.IsSourceFieldComplete(System.String)">
            <summary>Test if a source case field is complete</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the source case field is complete</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.IsSourceFieldEmpty(System.String)">
            <summary>Test if a source case field is empty (no start, end and value)</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the case field is empty</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.HasSourceStart(System.String)">
            <summary>Test if a source case start date is defined</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the source case start date is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetSourceStart(System.String)">
            <summary>Get the source case start date by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The source case start date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.HasSourceEnd(System.String)">
            <summary>Test if a source case end date is defined</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the source case end date is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetSourceEnd(System.String)">
            <summary>Get the source case end date by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The source case end date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetSourceValueType(System.String)">
            <summary>Get the source case value type</summary>
            <param name="caseFieldName">The name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.HasSourceValue(System.String)">
            <summary>Test if the source case value is defined</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the case value is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetSourceValue(System.String)">
            <summary>Get the source case value by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The source case value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetSourceCaseAttribute(System.String)">
            <summary>Get source case attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <returns>The source case attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetSourceCaseFieldAttribute(System.String,System.String)">
            <summary>Get source case field attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The source case field value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetSourceCaseValueAttribute(System.String,System.String)">
            <summary>Get source case value attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The source case field value</returns>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.TargetCaseName">
            <summary>Gets the name of the target case</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.TargetCaseSlot">
            <summary>Gets the target case slot</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.TargetCaseCancellationDate">
            <summary>Get the target case cancellation date</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetTargetFieldNames">
            <summary>Get target field names</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.HasTargetFields">
            <summary>Test if the target case contains fields</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.HasTargetField(System.String)">
            <summary>Test if a target case field is defined</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the target case field is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.IsTargetFieldComplete(System.String)">
            <summary>Test if a target case field is complete</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the target case field is complete</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.IsTargetFieldEmpty(System.String)">
            <summary>Test if a target case field is empty (no start, end and value)</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the case field is empty</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.HasTargetStart(System.String)">
            <summary>Test if a target case start date is defined</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the target case start date is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetTargetStart(System.String)">
            <summary>Get the target case start date by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The target case start date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.SetTargetStart(System.String,System.Nullable{System.DateTime})">
            <summary>Set the target case start date by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="start">The start date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.InitTargetStart(System.String,System.Nullable{System.DateTime})">
            <summary>Initialize the target start</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="start">The start date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.HasTargetEnd(System.String)">
            <summary>Test if a target case end date is defined</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the target case end date is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetTargetEnd(System.String)">
            <summary>Get the target case end date by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The target case end date</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.SetTargetEnd(System.String,System.Nullable{System.DateTime})">
            <summary>Set the target case end date by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="end">The end date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.InitTargetEnd(System.String,System.Nullable{System.DateTime})">
            <summary>Initialize the target end</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="end">The end date to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetTargetValueType(System.String)">
            <summary>Get the target case value type</summary>
            <param name="caseFieldName">The name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.HasTargetValue(System.String)">
            <summary>Test if the target case value is defined</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the target value is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetTargetValue(System.String)">
            <summary>Get the target case value by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The target case value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.SetTargetValue(System.String,System.Object)">
            <summary>Set the target case value by his field name</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.InitTargetValue(System.String,System.Object)">
            <summary>Initialize the target end</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.TargetFieldAvailable(System.String)">
            <summary>Test if a target case field is available</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>True if the case field is available</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.TargetFieldAvailable(System.String,System.Boolean)">
            <summary>Set if the target case field is available
            </summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="available">The value to set</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetTargetCaseAttribute(System.String)">
            <summary>Get target case attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <returns>The target case attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetTargetCaseFieldAttribute(System.String,System.String)">
            <summary>Get target case field attribute value</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="attributeName">Name of the attribute</param>
            <returns>The target case field attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.GetTargetCaseValueAttribute(System.String,System.String)">
            <summary>Get target case value attribute value</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="attributeName">Name of the attribute</param>
            <returns>The target case field attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.InitStart(System.String,System.String)">
            <summary>Initializes the target case field start date from the source case field</summary>
            <param name="sourceFieldName">The name of the source case field</param>
            <param name="targetFieldName">The name of the target case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.CopyStart(System.String,System.String)">
            <summary>Copy the case field start date from source to target</summary>
            <param name="sourceFieldName">The name of the source case field</param>
            <param name="targetFieldName">The name of the target case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.InitEnd(System.String,System.String)">
            <summary>Initializes the target case field end date from the source case field</summary>
            <param name="sourceFieldName">The name of the source case field</param>
            <param name="targetFieldName">The name of the target case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.CopyEnd(System.String,System.String)">
            <summary>Copy the case field end date from source to target</summary>
            <param name="sourceFieldName">The name of the source case field</param>
            <param name="targetFieldName">The name of the target case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.InitValue(System.String,System.String)">
            <summary>Initializes the target case field value from the source case field</summary>
            <param name="sourceFieldName">The name of the source case field</param>
            <param name="targetFieldName">The name of the target case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.CopyValue(System.String,System.String)">
            <summary>Copy the case field value from source to target</summary>
            <param name="sourceFieldName">The name of the source case field</param>
            <param name="targetFieldName">The name of the target case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationRuntime.InvokeWebhook(System.String,System.String)">
            <summary>Invoke case relation webhook and receive the response JSON data</summary>
            <param name="requestOperation">The request operation</param>
            <param name="requestMessage">The JSON request message</param>
            <returns>The webhook response object as JSON</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.ICaseRelationValidateRuntime">
            <summary>Runtime for the case relation validate function <see cref="T:PayrollEngine.Client.Scripting.Function.CaseRelationValidateFunction"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationValidateRuntime.GetValidateActions">
            <summary>Get case relation validate actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationValidateRuntime.HasIssues">
            <summary>Test for issues</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationValidateRuntime.AddIssue(System.String,System.Int32)">
            <summary>Add a new case issue</summary>
            <param name="message">The issue message</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRelationValidateRuntime.AddIssue(System.String,System.String,System.Int32)">
            <summary>Add a new case field issue</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="message">The issue message</param>
            <param name="number">The issue number</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.ICaseRuntime">
            <summary>Runtime for the case function <see cref="T:PayrollEngine.Client.Scripting.Function.CaseFunction"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICaseRuntime.CaseName">
            <summary>The case name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICaseRuntime.CaseType">
            <summary>The case <see cref="P:PayrollEngine.Client.Scripting.Runtime.ICaseRuntime.CaseType"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRuntime.GetCaseAttribute(System.String)">
            <summary>Get case attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <returns>The case attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseRuntime.InvokeWebhook(System.String,System.String)">
            <summary>Invoke case webhook and receive the response JSON data</summary>
            <param name="requestOperation">The request operation</param>
            <param name="requestMessage">The JSON request message</param>
            <returns>The webhook response object as JSON</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.ICaseValidateRuntime">
            <summary>Runtime for the case validate function <see cref="T:PayrollEngine.Client.Scripting.Function.CaseFunction"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseValidateRuntime.GetValidateActions">
            <summary>Get case validate actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseValidateRuntime.GetFieldValidateActions(System.String)">
            <summary>Get case field validate actions</summary>
            <param name="caseFieldName">The name of the case field</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseValidateRuntime.HasIssues">
            <summary>Test for issues</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseValidateRuntime.AddIssue(System.String)">
            <summary>Add a new case issue</summary>
            <param name="message">The issue message</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICaseValidateRuntime.AddIssue(System.String,System.String)">
            <summary>Add a new case field issue</summary>
            <param name="caseFieldName">Name of the case field</param>
            <param name="message">The issue message</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.ICollectorApplyRuntime">
            <summary>Runtime for the collector apply function <see cref="T:PayrollEngine.Client.Scripting.Function.CollectorApplyFunction"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorApplyRuntime.WageTypeNumber">
            <summary>The wage type number</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorApplyRuntime.WageTypeName">
            <summary>The wage type name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorApplyRuntime.WageTypeValue">
            <summary>The wage type result value</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.ICollectorEndRuntime">
            <summary>Runtime for the collector end function <see cref="T:PayrollEngine.Client.Scripting.Function.CollectorEndFunction"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorEndRuntime.GetValues">
            <summary>Get collector values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorEndRuntime.SetValues(System.Decimal[])">
            <summary>Sets the collector values</summary>
            <param name="values">The values to set</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime">
            <summary>Runtime for the collector function <see cref="T:PayrollEngine.Client.Scripting.Function.CollectorFunction"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.CollectorName">
            <summary>The collector name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.CollectorGroups">
            <summary>The collector groups</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.CollectType">
            <summary>The collect type</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.CollectorThreshold">
            <summary>The threshold value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.CollectorMinResult">
            <summary>The minimum allowed value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.CollectorMaxResult">
            <summary>The maximum allowed value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.CollectorResult">
            <summary>The current collector result</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.CollectorCount">
            <summary>Collected values count</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.CollectorSum">
            <summary>The summary of the collected value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.CollectorMin">
            <summary>The minimum collected value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.CollectorMax">
            <summary>The maximum collected value</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.CollectorAverage">
            <summary>The average of the collected value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.GetResultTags">
            <summary>Get the wage type result tags</summary>
            <returns>The wage type result tags</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.SetResultTags(System.Collections.Generic.List{System.String})">
            <summary>Set the wage type result tags</summary>
            <param name="tags">The wage type result tags</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.GetCollectorAttribute(System.String)">
            <summary>Get attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <returns>The collector attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.GetCollectorValue(System.String)">
            <summary>Gets the collector value</summary>
            <param name="collectorName">Name of the collector</param>
            <returns>The collector value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.Reset">
            <summary>Resets the collector to his initial state</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.GetResultAttribute(System.String)">
            <summary>Gets the result attribute value</summary>
            <param name="name">The attribute name</param>
            <returns>The attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.SetResultAttribute(System.String,System.Object)">
            <summary>Sets the result attribute value</summary>
            <param name="name">The attribute name</param>
            <param name="value">The attribute value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.AddPayrunResult(System.String,System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Add a payrun result</summary>
            <param name="source">The result source</param>
            <param name="name">The result name</param>
            <param name="value">The result value</param>
            <param name="valueType">The result value type</param>
            <param name="startDate">The start date</param>
            <param name="endDate">The end date</param>
            <param name="slot">The result slot</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The wage type custom result attributes</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.AddCustomResult(System.String,System.Decimal,System.DateTime,System.DateTime,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{System.Int32})">
            <summary>Add a custom collector result</summary>
            <param name="source">The value source</param>
            <param name="value">The period value</param>
            <param name="startDate">The start date</param>
            <param name="endDate">The end date</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The collector result attributes</param>
            <param name="valueType">The result value type (numeric), default is the collector value type</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorRuntime.ScheduleRetroPayrun(System.DateTime,System.Collections.Generic.List{System.String})">
            <summary>Schedule a retro payrun</summary>
            <param name="scheduleDate">The payrun schedule date, must be before the current period</param>
            <param name="resultTags">The result tags</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.ICollectorStartRuntime">
            <summary>Runtime for the collector start function <see cref="T:PayrollEngine.Client.Scripting.Function.CollectorStartFunction"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorStartRuntime.GetValues">
            <summary>Get collector values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.ICollectorStartRuntime.SetValues(System.Decimal[])">
            <summary>Sets the collector values</summary>
            <param name="values">The values to set</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime">
            <summary>Runtime  during the execution of a payroll scripting function</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.EmployeeId">
            <summary>The employee id</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.EmployeeIdentifier">
            <summary>The employee identifier</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetEmployeeAttribute(System.String)">
            <summary>Get employee attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <returns>The employee attribute value</returns>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.PayrollCulture">
            <summary>The payroll culture</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.PayrollId">
            <summary>The payroll id</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.EvaluationDate">
            <summary>The evaluation date</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetEvaluationPeriod">
            <summary>Get evaluation period</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetPeriod(System.DateTime,System.Int32)">
            <summary>Get period by moment and offset</summary>
            <param name="periodMoment">The period moment</param>
            <param name="offset">The period offset: 0=current, -1=previous, 1=next</param>
            <returns>The offset period including the moment</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetCycle(System.DateTime,System.Int32)">
            <summary>Get cycle by moment and offset</summary>
            <param name="cycleMoment">The cycle moment</param>
            <param name="offset">The cycle offset: 0=current, -1=previous, 1=next</param>
            <returns>The offset cycle including the moment</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetCaseValueType(System.String)">
            <summary>Get case value type</summary>
            <param name="caseFieldName">The case field name</param>
            <returns>The case value type</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetCaseFieldAttribute(System.String,System.String)">
            <summary>Get case field attribute value</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="attributeName">Name of the attribute</param>
            <returns>The case field attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetCaseValueAttribute(System.String,System.String)">
            <summary>Get case field value attribute value</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="attributeName">Name of the attribute</param>
            <returns>The case field value attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetCaseValueSlots(System.String)">
            <summary>Get the case value slots</summary>
            <param name="caseFieldName">The name of the case field</param>
            <returns>The case slot names, empty on unknown case field</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetCaseValueTags(System.String,System.DateTime)">
            <summary>Get the case value tags</summary>
            <param name="caseFieldName">The name of the case field</param>
            <param name="valueDate">The value date</param>
            <returns>The case value tas, empty on unknown case field</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetCaseValue(System.String,System.DateTime)">
            <summary>Get case values by date range</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="valueDate">The value date</param>
            <remarks>Use nested tuples to reduce the tuple item count to 7</remarks>
            <returns>The period values of multiple cases</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetCaseValues(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>Get case values by date range</summary>
            <param name="caseFieldName">The case field name</param>
            <param name="startDate">The date after the case value was created</param>
            <param name="endDate">The date before the case value was created</param>
            <remarks>Use nested tuples to reduce the tuple item count to 7</remarks>
            <returns>The period values of multiple cases</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetCasePeriodValues(System.DateTime,System.DateTime,System.String[])">
            <summary>Get case period values of multiple cases by date range and case field name</summary>
            <param name="startDate">The time period start date</param>
            <param name="endDate">The time period end date</param>
            <param name="caseFieldNames">The name of the case fields</param>
            <returns>The period values of multiple cases</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetLookup(System.String,System.String,System.String)">
            <summary>Get lookup value by key</summary>
            <param name="lookupName">The name of the lookup</param>
            <param name="lookupKey">The lookup value key</param>
            <param name="culture">The value culture</param>
            <returns>The lookup value matching tho the lookup key</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrollRuntime.GetRangeLookup(System.String,System.Decimal,System.String,System.String)">
            <summary>Get lookup value by range</summary>
            <param name="lookupName">The name of the lookup</param>
            <param name="rangeValue">The range value</param>
            <param name="lookupKey">The lookup key</param>
            <param name="culture">The value culture</param>
            <returns>The lookup value matching tho the lookup key</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IPayrunEmployeeAvailableRuntime">
            <summary>Runtime for the payrun employee available function <see cref="T:PayrollEngine.Client.Scripting.Function.PayrunEmployeeAvailableFunction"/></summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IPayrunEmployeeEndRuntime">
            <summary>Runtime for the payrun employee end function <see cref="T:PayrollEngine.Client.Scripting.Function.PayrunEmployeeEndFunction"/></summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IPayrunEmployeeStartRuntime">
            <summary>Runtime for the payrun employee start function <see cref="T:PayrollEngine.Client.Scripting.Function.PayrunEmployeeStartFunction"/></summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IPayrunEndRuntime">
            <summary>Runtime for the payrun employee available function <see cref="T:PayrollEngine.Client.Scripting.Function.PayrunEndFunction"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunEndRuntime.GetPayrunRuntimeValues">
            <summary>Get payrun runtime values</summary>
            <returns>Payrun runtime values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunEndRuntime.GetRuntimeValuesEmployees">
            <summary>Get the employees with runtime values</summary>
            <returns>Payrun runtime values</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunEndRuntime.GetEmployeeRuntimeValues(System.String)">
            <summary>Get employee runtime values</summary>
            <param name="employeeIdentifier">The employee identifier</param>
            <returns>Employee runtime values</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime">
            <summary>Runtime for the payrun function <see cref="T:PayrollEngine.Client.Scripting.Function.PayrunFunction"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.PayrunId">
            <summary>The payrun id</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.PayrunName">
            <summary>The payrun name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.ExecutionPhase">
            <summary>The payrun execution phase: 0=setup, 1=reevaluation</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.RetroPeriod">
            <summary>The retro payrun period</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.Forecast">
            <summary>True for a forecast payrun</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.CycleName">
            <summary>The cycle name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.PeriodName">
            <summary>The period name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.GetPayrunJobAttribute(System.String)">
            <summary>Get payrun job attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <returns>The payrun job attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.SetPayrunJobAttribute(System.String,System.Object)">
            <summary>Set payrun job attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <param name="value">The attribute value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.RemovePayrunJobAttribute(System.String)">
            <summary>Remove payrun job attribute</summary>
            <param name="attributeName">Name of the attribute</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.HasPayrunRuntimeValue(System.String)">
            <summary>Test for existing payrun runtime value</summary>
            <param name="key">The value key</param>
            <returns>True if the runtime value exists</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.GetPayrunRuntimeValue(System.String)">
            <summary>Get payrun runtime value</summary>
            <param name="key">The value key</param>
            <returns>The payrun runtime value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.SetPayrunRuntimeValue(System.String,System.String)">
            <summary>Set payrun runtime value</summary>
            <param name="key">The value key</param>
            <param name="value">The payrun runtime value, use null to remove the runtime value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.HasEmployeeRuntimeValue(System.String)">
            <summary>Test for existing employee runtime value</summary>
            <param name="key">The value key</param>
            <returns>True if the runtime value exists</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.GetEmployeeRuntimeValue(System.String)">
            <summary>Get employee runtime value</summary>
            <param name="key">The value key</param>
            <returns>The employee runtime value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.SetEmployeeRuntimeValue(System.String,System.String)">
            <summary>Set employee runtime value</summary>
            <param name="key">The value key</param>
            <param name="value">The employee runtime value, use null to remove the runtime value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.GetWageTypeResults(System.Collections.Generic.IList{System.Decimal},System.DateTime,System.DateTime,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String})">
            <summary>Gets the wage type range results</summary>
            <param name="wageTypeNumbers">The wage type numbers</param>
            <param name="start">The range period start</param>
            <param name="end">The range period end</param>
            <param name="forecast">The forecast</param>
            <param name="jobStatus">The job status</param>
            <param name="tags">The result tags</param>
            <returns>The wage type date range results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.GetConsolidatedWageTypeResults(System.Collections.Generic.IList{System.Decimal},System.DateTime,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String})">
            <summary>Gets the consolidated wage type results, from the period moment until the current period</summary>
            <param name="wageTypeNumbers">The wage type numbers</param>
            <param name="periodMoment">The period moment</param>
            <param name="forecast">The forecast</param>
            <param name="jobStatus">The job status</param>
            <param name="tags">The result tags</param>
            <returns>The consolidate wage type results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.GetWageTypeCustomResults(System.Collections.Generic.IList{System.Decimal},System.DateTime,System.DateTime,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String})">
            <summary>Gets the wage type custom results from a time range</summary>
            <param name="wageTypeNumbers">The wage type numbers</param>
            <param name="start">The range period start</param>
            <param name="end">The range period end</param>
            <param name="forecast">The forecast</param>
            <param name="jobStatus">The job status</param>
            <param name="tags">The result tags</param>
            <returns>The consolidate wage type custom results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.GetConsolidatedWageTypeCustomResults(System.Collections.Generic.IList{System.Decimal},System.DateTime,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String})">
            <summary>Gets the consolidated wage type custom results, from the period moment until the current period</summary>
            <param name="wageTypeNumbers">The wage type numbers</param>
            <param name="periodMoment">The period moment</param>
            <param name="forecast">The forecast</param>
            <param name="jobStatus">The job status</param>
            <param name="tags">The result tags</param>
            <returns>The consolidate wage type custom results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.GetRetroWageTypeResults(System.Decimal,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String})">
            <summary>Gets the retro wage type results</summary>
            <param name="wageTypeNumber">The wage type number</param>
            <param name="forecast">The forecast</param>
            <param name="jobStatus">The job status</param>
            <param name="tags">The result tags</param>
            <returns>The wage type cycle results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.GetCollectorResults(System.Collections.Generic.IList{System.String},System.DateTime,System.DateTime,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String})">
            <summary>Gets the collector range results</summary>
            <param name="collectorNames">Name of the collectors</param>
            <param name="start">The range period start</param>
            <param name="end">The range period end</param>
            <param name="forecast">The forecast</param>
            <param name="jobStatus">The job status</param>
            <param name="tags">The result tags</param>
            <returns>The collector date range results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.GetConsolidatedCollectorResults(System.Collections.Generic.IList{System.String},System.DateTime,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String})">
            <summary>Gets the consolidated collector results, from the period moment until the current period</summary>
            <param name="collectorNames">Name of the collectors</param>
            <param name="periodMoment">The period moment</param>
            <param name="forecast">The forecast</param>
            <param name="jobStatus">The job status</param>
            <param name="tags">The result tags</param>
            <returns>The consolidated collector results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.GetCollectorCustomResults(System.Collections.Generic.IList{System.String},System.DateTime,System.DateTime,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String})">
            <summary>Gets the collector results from a time range</summary>
            <param name="collectorNames">Name of the collectors</param>
            <param name="start">The range period start</param>
            <param name="end">The range period end</param>
            <param name="forecast">The forecast</param>
            <param name="jobStatus">The job status</param>
            <param name="tags">The result tags</param>
            <returns>The consolidated collector custom results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.GetConsolidatedCollectorCustomResults(System.Collections.Generic.IList{System.String},System.DateTime,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String})">
            <summary>Gets the consolidated collector results, from the period moment until the current period</summary>
            <param name="collectorNames">Name of the collectors</param>
            <param name="periodMoment">The period moment</param>
            <param name="forecast">The forecast</param>
            <param name="jobStatus">The job status</param>
            <param name="tags">The result tags</param>
            <returns>The consolidated collector custom results</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunRuntime.InvokeWebhook(System.String,System.String)">
            <summary>Invoke payrun webhook and receive the response JSON data</summary>
            <param name="requestOperation">The request operation</param>
            <param name="requestMessage">The JSON request message</param>
            <returns>The webhook response object as JSON</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IPayrunStartRuntime">
            <summary>Runtime for the payrun employee available function <see cref="T:PayrollEngine.Client.Scripting.Function.PayrunStartFunction"/></summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IPayrunWageTypeAvailableRuntime">
            <summary>Runtime for the payrun wage type available function <see cref="T:PayrollEngine.Client.Scripting.Function.PayrunWageTypeAvailableFunction"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IPayrunWageTypeAvailableRuntime.WageTypeNumber">
            <summary>The wage type number</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IPayrunWageTypeAvailableRuntime.GetWageTypeAttribute(System.String)">
            <summary>Get wage type attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <returns>The wage type attribute value</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IReportBuildRuntime">
            <summary>Runtime for the report build function <see cref="T:PayrollEngine.Client.Scripting.Function.ReportBuildFunction"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportBuildRuntime.SetParameter(System.String,System.String)">
            <summary>Set report parameter value</summary>
            <param name="parameterName">The parameter name</param>
            <param name="value">The parameter value as JSON</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportBuildRuntime.SetParameterAttribute(System.String,System.String,System.Object)">
            <summary>Set report attribute value</summary>
            <param name="parameterName">The parameter name</param>
            <param name="attributeName">Name of the attribute</param>
            <param name="value">The attribute value</param>
            <returns>The report attribute value</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IReportEndRuntime">
            <summary>Runtime for the report end function <see cref="T:PayrollEngine.Client.Scripting.Function.ReportEndFunction"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IReportEndRuntime.DataSet">
            <summary>Gets the report data set</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportEndRuntime.ExecuteQuery(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>Execute a query on the Api web method and add the table to the set</summary>
            <param name="tableName">Target table name</param>
            <param name="methodName">The query name</param>
            <param name="culture">The content culture</param>
            <param name="parameters">The method parameters</param>
            <param name="resultQuery">Add query table to the data set</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportEndRuntime.ExecuteMergeQuery(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>Execute a query on the Api web method and merge the table to the set</summary>
            <param name="tableName">Target table name</param>
            <param name="methodName">The query name</param>
            <param name="culture">The content culture</param>
            <param name="mergeColumn">The column used to merge (primary key column)</param>
            <param name="parameters">The method parameters</param>
            <param name="schemaChange">Action to take when the required data column is missing <see cref="T:PayrollEngine.Client.Scripting.DataMergeSchemaChange"/></param>
            <returns>New or expanded data table</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IReportRuntime">
            <summary>Runtime for the payrun function <see cref="T:PayrollEngine.Client.Scripting.Function.ReportStartFunction"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ReportName">
            <summary>Gets the report name</summary>
            <value>The name of the case</value>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.GetReportAttribute(System.String)">
            <summary>Get report attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <returns>The report attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.HasParameter(System.String)">
            <summary>Check for existing report parameter</summary>
            <param name="parameterName">The parameter name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.GetParameter(System.String)">
            <summary>Get report parameter</summary>
            <param name="parameterName">The parameter name</param>
            <returns>The report parameter value as JSON</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.GetParameterAttribute(System.String,System.String)">
            <summary>Get report parameter attribute value</summary>
            <param name="parameterName">The parameter name</param>
            <param name="attributeName">Name of the attribute</param>
            <returns>The report attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ExecuteQuery(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Execute a query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="methodName">The query name</param>
            <param name="culture">The content culture</param>
            <param name="parameters">The method parameters</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ExecuteLookupValueQuery(System.Int32,System.String,System.String,System.String)">
            <summary>Query Json lookup values by lookup name</summary>
            <param name="regulationId">The regulation id</param>
            <param name="lookupName">The lookup name</param>
            <param name="keyAttribute">The json object key attribute name</param>
            <param name="valueAttribute">The json object value attribute name</param>
            <returns>The lookup values dictionary</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ExecuteGlobalCaseValueQuery(System.String,System.Tuple{System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64}})">
            <summary>Execute global case value query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="queryValues">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ExecuteNationalCaseValueQuery(System.String,System.Tuple{System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64}})">
            <summary>Execute national case value query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="queryValues">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ExecuteCompanyCaseValueQuery(System.String,System.Tuple{System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64}})">
            <summary>Execute company case value query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="queryValues">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ExecuteEmployeeCaseValueQuery(System.String,System.Int32,System.Tuple{System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64}})">
            <summary>Execute employee case value query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="employeeId">The employee id</param>
            <param name="queryValues">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ExecuteWageTypeQuery(System.String,System.Int32,System.Tuple{System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64}})">
            <summary>Execute a wage type query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="regulationId">The regulation id</param>
            <param name="queryValues">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ExecutePayrollResultQuery(System.String,System.Tuple{System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64}})">
            <summary>Execute a payroll result query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="queryValues">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ExecuteWageTypeResultQuery(System.String,System.Int32,System.Tuple{System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64}})">
            <summary>Execute a wage type result query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="payrollResultId">The payroll result id</param>
            <param name="queryValues">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ExecuteWageTypeCustomResultQuery(System.String,System.Int32,System.Int32,System.Tuple{System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64}})">
            <summary>Execute a wage type custom result query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="payrollResultId">The payroll result id</param>
            <param name="wageTypeResultId">The wage type result id</param>
            <param name="queryValues">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ExecuteCollectorResultQuery(System.String,System.Int32,System.Tuple{System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64}})">
            <summary>Execute a collector result query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="payrollResultId">The payroll result id</param>
            <param name="queryValues">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ExecuteCollectorCustomResultQuery(System.String,System.Int32,System.Int32,System.Tuple{System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64}})">
            <summary>Execute a collector custom result query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="payrollResultId">The payroll result id</param>
            <param name="collectorResultId">The collector result id</param>
            <param name="queryValues">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.ExecutePayrunResultQuery(System.String,System.Int32,System.Tuple{System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64}})">
            <summary>Execute a payrun result query on the Api web method</summary>
            <param name="tableName">Target table name</param>
            <param name="payrollResultId">The payroll result id</param>
            <param name="queryValues">The query</param>
            <returns>Resulting data table, existing will be removed</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.AddReportLog(System.String,System.String,System.Nullable{System.DateTime})">
            <summary>Add report log</summary>
            <param name="message">The log message</param>
            <param name="key">The log key</param>
            <param name="reportDate">The report date (default: now)</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportRuntime.InvokeWebhook(System.String,System.String)">
            <summary>Invoke report webhook and receive the response JSON data</summary>
            <param name="requestOperation">The request operation</param>
            <param name="requestMessage">The JSON request message</param>
            <returns>The webhook response object as JSON</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IReportStartRuntime">
            <summary>Runtime for the report start function <see cref="T:PayrollEngine.Client.Scripting.Function.ReportStartFunction"/></summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportStartRuntime.SetParameter(System.String,System.String)">
            <summary>Set report parameter value</summary>
            <param name="parameterName">The parameter name</param>
            <param name="value">The parameter value as JSON</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportStartRuntime.HasQuery(System.String)">
            <summary>Check for existing report query</summary>
            <param name="queryName">The query name</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportStartRuntime.GetQuery(System.String)">
            <summary>Get report query</summary>
            <param name="queryName">The query name</param>
            <returns>The report parameter value as JSON</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IReportStartRuntime.SetQuery(System.String,System.String)">
            <summary>Set report query value as JSON</summary>
            <param name="queryName">The query name</param>
            <param name="value">The query value as JSON</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IRuntime">
            <summary>Runtime  during the execution of a scripting function <see cref="N:PayrollEngine.Client.Scripting.Function"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IRuntime.UserCulture">
            <summary>The user culture</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IRuntime.TenantId">
            <summary>The tenant id</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IRuntime.TenantIdentifier">
            <summary>The tenant identifier</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IRuntime.GetTenantAttribute(System.String)">
            <summary>Get tenant attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <returns>The tenant attribute value</returns>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IRuntime.UserId">
            <summary>The user id</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IRuntime.UserIdentifier">
            <summary>The user identifier</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IRuntime.GetUserAttribute(System.String)">
            <summary>Get user attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <returns>The user attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IRuntime.AddLog(System.Int32,System.String,System.String,System.String)">
            <summary>Add a log</summary>
            <param name="level">The log level</param>
            <param name="message">The log message</param>
            <param name="error">The log error</param>
            <param name="comment">The log comment</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IRuntime.AddTask(System.String,System.String,System.DateTime,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Add task</summary>
            <param name="name">The task name</param>
            <param name="instruction">The task instruction</param>
            <param name="scheduleDate">The task schedule date</param>
            <param name="category">The task category</param>
            <param name="attributes">The task attributes</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IWageTypeResultRuntime">
            <summary>Runtime for the wage type result function <see cref="T:PayrollEngine.Client.Scripting.Function.WageTypeResultFunction"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IWageTypeResultRuntime.WageTypeValue">
            <summary>The wage type value</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime">
            <summary>Runtime for the wage type function <see cref="T:PayrollEngine.Client.Scripting.Function.WageTypeFunction"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.WageTypeNumber">
            <summary>The wage type number</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.WageTypeName">
            <summary>The wage type name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.WageTypeDescription">
            <summary>The wage type description</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.WageTypeCalendar">
            <summary>The wage type calendar</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.Collectors">
            <summary>The wage type collectors</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.CollectorGroups">
            <summary>The wage type collector groups</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.GetResultTags">
            <summary>Get the wage type result tags</summary>
            <returns>The wage type result tags</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.SetResultTags(System.Collections.Generic.List{System.String})">
            <summary>Set the wage type result tags</summary>
            <param name="tags">The wage type result tags</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.GetResultAttribute(System.String)">
            <summary>Gets wage result attribute value</summary>
            <param name="name">The attribute name</param>
            <returns>The attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.SetResultAttribute(System.String,System.Object)">
            <summary>Sets the wage result attribute value</summary>
            <param name="name">The attribute name</param>
            <param name="value">The attribute value</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.GetWageTypeAttribute(System.String)">
            <summary>Get wage type attribute value</summary>
            <param name="attributeName">Name of the attribute</param>
            <returns>The wage type attribute value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.GetWageTypeValue(System.Decimal)">
            <summary>Gets the wage type value</summary>
            <param name="wageTypeNumber">The wage type number</param>
            <returns>The wage type value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.GetCollectorValue(System.String)">
            <summary>Gets the collector value</summary>
            <param name="collectorName">Name of the collector</param>
            <returns>The collector value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.EnableCollector(System.String)">
            <summary>Reenable disabled collector for the current employee job</summary>
            <param name="collectorName">Name of the collector</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.DisableCollector(System.String)">
            <summary>Disable collector for the current employee job</summary>
            <param name="collectorName">Name of the collector</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.AddPayrunResult(System.String,System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Add a payrun result</summary>
            <param name="source">The result source</param>
            <param name="name">The result name</param>
            <param name="value">The result value</param>
            <param name="valueType">The result value type</param>
            <param name="startDate">The start date</param>
            <param name="endDate">The end date</param>
            <param name="slot">The result slot</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The wage type custom result attributes</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.AddCustomResult(System.String,System.Decimal,System.DateTime,System.DateTime,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{System.Int32})">
            <summary>Add a wage type custom result</summary>
            <param name="source">The value source</param>
            <param name="value">The period value</param>
            <param name="startDate">The start date</param>
            <param name="endDate">The end date</param>
            <param name="tags">The result tags</param>
            <param name="attributes">The wage type custom result attributes</param>
            <param name="valueType">The result value type (numeric), default is the wage type value type</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IWageTypeRuntime.ScheduleRetroPayrun(System.DateTime,System.Collections.Generic.List{System.String})">
            <summary>Schedule a retro payrun</summary>
            <param name="scheduleDate">The payrun schedule date, must be before the current period</param>
            <param name="resultTags">The result tags</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Runtime.IWageTypeValueRuntime">
            <summary>Runtime for the wage type value function <see cref="T:PayrollEngine.Client.Scripting.Function.WageTypeValueFunction"/></summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Runtime.IWageTypeValueRuntime.ExecutionCount">
            <summary>The execution count</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Runtime.IWageTypeValueRuntime.RestartExecution">
            <summary>Restart execution of wage type calculation</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseValidateScriptAttribute">
            <summary>Attribute for case validate script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseValidateScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseValidateScriptAttribute"/> class</summary>
            <param name="caseName">Name of the case</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseBuildScriptAttribute">
            <summary>Attribute for case build script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseBuildScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseBuildScriptAttribute"/> class</summary>
            <param name="caseName">Name of the case</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseChangeScriptAttribute">
            <summary>Attribute for case script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseChangeScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseScriptAttribute"/> class</summary>
            <param name="caseName">Name of the case</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseAvailableScriptAttribute">
            <summary>Attribute for case available script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseAvailableScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseAvailableScriptAttribute"/> class</summary>
            <param name="caseName">Name of the case</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseScriptAttribute">
            <summary>Attribute for case script</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseScriptAttribute.CaseName">
            <summary>The case name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseScriptAttribute.ScriptKey">
            <summary>Gets the script key</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseScriptAttribute"/> class</summary>
            <param name="caseName">Name of the case</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseRelationValidateScriptAttribute">
            <summary>Attribute for case relation validate script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseRelationValidateScriptAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseRelationValidateScriptAttribute"/> class</summary>
            <param name="sourceCaseName">Name of the source case</param>
            <param name="targetCaseName">Name of the target case</param>
            <param name="sourceCaseSlot">Name of the source case slot</param>
            <param name="targetCaseSlot">Name of the target case slot</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseRelationBuildScriptAttribute">
            <summary>Attribute for case relation build script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseRelationBuildScriptAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseRelationBuildScriptAttribute"/> class</summary>
            <param name="sourceCaseName">Name of the source case</param>
            <param name="targetCaseName">Name of the target case</param>
            <param name="sourceCaseSlot">Name of the source case slot</param>
            <param name="targetCaseSlot">Name of the target case slot</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CaseRelationScriptAttribute">
            <summary>Attribute for case relation script</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseRelationScriptAttribute.SourceCaseName">
            <summary>The source case name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseRelationScriptAttribute.SourceCaseSlot">
            <summary>The source case slot</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseRelationScriptAttribute.TargetCaseName">
            <summary>The target case name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseRelationScriptAttribute.TargetCaseSlot">
            <summary>The target case slot</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CaseRelationScriptAttribute.ScriptKey">
            <summary>Gets the script key</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CaseRelationScriptAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CaseRelationScriptAttribute"/> class</summary>
            <param name="sourceCaseName">Name of the source case name</param>
            <param name="targetCaseName">Name of the target case name</param>
            <param name="sourceCaseSlot">Name of the source case slot</param>
            <param name="targetCaseSlot">Name of the target case slot</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.WageTypeResultScriptAttribute">
            <summary>Attribute for wage type result script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeResultScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeResultScriptAttribute"/> class</summary>
            <param name="wageTypeNumber">The wage type number</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.WageTypeValueScriptAttribute">
            <summary>Attribute for wage type value script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeValueScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeValueScriptAttribute"/> class</summary>
            <param name="wageTypeNumber">The wage type number</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.WageTypeScriptAttribute">
            <summary>Attribute for case relation script</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeScriptAttribute.WageTypeNumber">
            <summary>The wage type number</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeScriptAttribute.ScriptKey">
            <summary>Gets the script key</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeScriptAttribute"/> class</summary>
            <param name="wageTypeNumber">The wage type number</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorEndScriptAttribute">
            <summary>Attribute for collector end script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorEndScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorEndScriptAttribute"/> class</summary>
            <param name="collectorName">Name of the collector</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorApplyScriptAttribute">
            <summary>Attribute for collector apply script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorApplyScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorApplyScriptAttribute"/> class</summary>
            <param name="collectorName">Name of the collector</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorStartScriptAttribute">
            <summary>Attribute for collector start script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorStartScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorStartScriptAttribute"/> class</summary>
            <param name="collectorName">Name of the collector</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorScriptAttribute">
            <summary>Attribute for collector script</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorScriptAttribute.CollectorName">
            <summary>The collector name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorScriptAttribute.ScriptKey">
            <summary>Gets the script key</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorScriptAttribute"/> class</summary>
            <param name="collectorName">Name of the collector</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunStartScriptAttribute">
            <summary>Attribute for payrun start script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunStartScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunStartScriptAttribute"/> class</summary>
            <param name="payrunName">Name of the payrun</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunWageTypeAvailableScriptAttribute">
            <summary>Attribute for payrun wage type available script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunWageTypeAvailableScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunWageTypeAvailableScriptAttribute"/> class</summary>
            <param name="payrunName">Name of the payrun</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunEmployeeAvailableScriptAttribute">
            <summary>Attribute for payrun employee available script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunEmployeeAvailableScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunEmployeeAvailableScriptAttribute"/> class</summary>
            <param name="payrunName">Name of the payrun</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunEmployeeStartScriptAttribute">
            <summary>Attribute for payrun employee start script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunEmployeeStartScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunEmployeeStartScriptAttribute"/> class</summary>
            <param name="payrunName">Name of the payrun</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunEmployeeEndScriptAttribute">
            <summary>Attribute for payrun employee end script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunEmployeeEndScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunEmployeeEndScriptAttribute"/> class</summary>
            <param name="payrunName">Name of the payrun</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunEndScriptAttribute">
            <summary>Attribute for payrun end script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunEndScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunEndScriptAttribute"/> class</summary>
            <param name="payrunName">Name of the payrun</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PayrunScriptAttribute">
            <summary>Attribute for payrun script</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.PayrunScriptAttribute.PayrunName">
            <summary>The payrun name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.PayrunScriptAttribute.ScriptKey">
            <summary>Gets the script key</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PayrunScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PayrunScriptAttribute"/> class</summary>
            <param name="payrunName">Name of the collector</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ReportBuildScriptAttribute">
            <summary>Attribute for report build script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ReportBuildScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ReportBuildScriptAttribute"/> class</summary>
            <param name="reportName">Name of the report</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ReportBuildScriptAttribute.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ReportBuildScriptAttribute"/> class</summary>
            <param name="reportName">Name of the report</param>
            <param name="culture">The report culture</param>
            <param name="parameters">The report parameters as JSON</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ReportStartScriptAttribute">
            <summary>Attribute for report start script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ReportStartScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ReportStartScriptAttribute"/> class</summary>
            <param name="reportName">Name of the report</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ReportStartScriptAttribute.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ReportStartScriptAttribute"/> class</summary>
            <param name="reportName">Name of the report</param>
            <param name="culture">The report culture</param>
            <param name="parameters">The report parameters as JSON</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ReportEndScriptAttribute">
            <summary>Attribute for report end script</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ReportEndScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ReportEndScriptAttribute"/> class</summary>
            <param name="reportName">Name of the report</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ReportEndScriptAttribute.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ReportEndScriptAttribute"/> class</summary>
            <param name="reportName">Name of the report</param>
            <param name="culture">The report culture</param>
            <param name="parameters">The Report parameters as JSON</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ReportScriptAttribute">
            <summary>Attribute for report script</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ReportScriptAttribute.ReportName">
            <summary>The report name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ReportScriptAttribute.Culture">
            <summary>The report culture</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ReportScriptAttribute.Parameters">
            <summary>The report parameters</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ReportScriptAttribute.ScriptKey">
            <summary>Gets the script key</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ReportScriptAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ReportScriptAttribute"/> class</summary>
            <param name="reportName">Name of the report</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ReportScriptAttribute.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ReportScriptAttribute"/> class</summary>
            <param name="reportName">Name of the report</param>
            <param name="culture">The report culture</param>
            <param name="parameters">The report parameters as JSON</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ScriptAttribute">
            <summary>Attribute for script</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ScriptAttribute.ScriptKey">
            <summary>Gets the script key</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Script.ScriptClass">
            <summary>Scripting class</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptClass.AttributeSyntax">
            <summary>The attribute syntax</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptClass.FunctionAttribute">
            <summary>The function attribute</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptClass.Methods">
            <summary>The methods with attributes</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Script.ScriptClassParser">
            <summary>Script class parser</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptClassParser.ClassSyntax">
            <summary>The syntax tree</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptClassParser.AttributeSyntax">
            <summary>The attribute syntax</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptClassParser.FunctionAttribute">
            <summary>the function attribute</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptClassParser.ClassName">
            <summary>The class name</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Script.ScriptClassParser.#ctor(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.Script.ScriptMethodParser"/> class</summary>
            <param name="classSyntaxTree">The function class code syntax tree</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Script.ScriptClassParser.FromSource(System.String)">
            <summary>Parses the source file</summary>
            <param name="sourceCode">Name of the file</param>
            <returns>The script classes</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Script.ScriptMethodParser">
            <summary>Script method parser</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptMethodParser.ClassSyntax">
            <summary>The syntax tree</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptMethodParser.MethodAttributes">
            <summary>the function attribute</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Script.ScriptMethodParser.#ctor(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax)">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.Script.ScriptMethodParser"/> class</summary>
            <param name="classSyntaxTree">The function class code syntax tree</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Script.ScriptParser">
            <summary>
            Payroll script parser
            </summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptParser.CaseParser">
            <summary>The case script parser</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptParser.CaseRelationParser">
            <summary>The case relation script parser</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptParser.WageTypeParser">
            <summary>The case relation script parser</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptParser.CollectorParser">
            <summary>The case relation script parser</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptParser.PayrunParser">
            <summary>The case relation script parser</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Script.ScriptParser.ReportParser">
            <summary>The case relation script parser</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.SystemActionProvider">
            <summary>Provide the system actions</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.SystemActionProvider.GetSystemActionScripts(PayrollEngine.FunctionType)">
            <summary>Get the system action scripts</summary>
            <param name="functionType">The function type</param>
            <returns></returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.Key">
            <summary>Represent a key for lookups or results</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.Key.Values">
            <summary>The key values</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Key.#ctor(System.Object[])">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.Key"/> class</summary>
            <param name="values">The values</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Key.op_Implicit(PayrollEngine.Client.Scripting.Key)~System.String">
            <summary>Convert values to key</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.Key.ToString">
            <summary>Returns a key as string</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CheckDigitException">
            <summary>Check digits exception</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CheckDigitException.CheckValue">
            <summary>The check value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CheckDigitException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the exception</summary>
            <param name="message">The exception message</param>
            <param name="checkValue">The check value</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CheckDigitLengthException">
            <summary>Check digits value length exception</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CheckDigitLengthException.MinLength">
            <summary>The minimum length</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CheckDigitLengthException.#ctor(System.String,System.String,System.Int32)">
            <summary>Initializes a new instance of the exception</summary>
            <param name="message">The exception message</param>
            <param name="checkValue">The check value</param>
            <param name="minLength">The minimum length</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CheckDigitCharException">
            <summary>Check digits value character exception</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CheckDigitCharException.InvalidCharacter">
            <summary>The invalid character</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CheckDigitCharException.#ctor(System.String,System.String,System.Char)">
            <summary>Initializes a new instance of the exception</summary>
            <param name="message">The exception message</param>
            <param name="checkValue">The check value</param>
            <param name="invalidCharacter">The invalid character</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CheckDigitMismatchException">
            <summary>Check digits value mismatch exception</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CheckDigitMismatchException.CheckedValue">
            <summary>The checked value</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CheckDigitMismatchException.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of the exception</summary>
            <param name="message">The exception message</param>
            <param name="checkValue">The check value</param>
            <param name="checkedValue">The invalid character</param>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CheckDigit">
            <summary>Compute and validate text value digits (ISO 7064 compatible)</summary>
            <remarks>See https://github.com/gravity00/SimpleISO7064 and https://en.wikipedia.org/wiki/International_Bank_Account_Number </remarks>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CheckDigit.Mod11Radix2">
            <summary>Check numeric strings with one check digit or the supplementary check character "X"</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CheckDigit.Mod37Radix2">
            <summary>Check alphanumeric strings with one check digit or letter or the supplementary check character "*"</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CheckDigit.Mod97Radix10">
            <summary>Check numeric strings with two check digits</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CheckDigit.Mod661Radix26">
            <summary>Check alphabetic strings with two check letters</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CheckDigit.Mod1271Radix36">
            <summary>Check alphabetic strings with two check letters</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CheckDigit.IsValidUpcA(System.String)">
            <summary>Check UPC-A digit</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CheckDigit.IsValidEan13(System.String)">
            <summary>Check EAN-13 digit</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CheckDigit.IsValidItf(System.String)">
            <summary>Check ITF digit</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CheckDigit.#ctor(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>Creates a new instance</summary>
            <param name="modulus">The modulus</param>
            <param name="radix">The radix</param>
            <param name="characterSet">The supported character set</param>
            <param name="doubleCheckDigit">Is the computed check digit composed by two characters?</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CheckDigit.Modulus">
            <summary>The modulus</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CheckDigit.Radix">
            <summary>The radix</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CheckDigit.DoubleCheckDigit">
            <summary>Double check digit</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CheckDigit.CharacterSet">
            <summary>The supported character set</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CheckDigit.Check(System.String)">
            <summary>Checks if the given value contains a valid check digit</summary>
            <param name="value">The value to check</param>
            <exception cref="T:System.ArgumentException">Empty value exception</exception>
            <exception cref="T:PayrollEngine.Client.Scripting.CheckDigitLengthException">Value length exception</exception>
            <exception cref="T:PayrollEngine.Client.Scripting.CheckDigitMismatchException">Value with invalid character exception</exception>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CheckDigit.AddCheckDigit(System.String)">
            <summary>Adds the check digit to the given value</summary>
            <param name="value">The value from which the check digit will be computed</param>
            <returns>The value and appended check digit</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CheckDigit.CalculateCheckDigit(System.String)">
            <summary>Calculates the check digit from a given value</summary>
            <param name="value">The value from which the check digit will be computed</param>
            <returns>The check digit</returns>
            <exception cref="T:System.ArgumentException">Empty value exception</exception>
            <exception cref="T:PayrollEngine.Client.Scripting.CheckDigitCharException">Invalid character exception</exception>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CheckDigit.IsWeightedValid(System.String,System.Int32)">
            <summary>Checks if the given value contains a valid check digit</summary>
            <param name="value">The value to check</param>
            <param name="numCheckDigits">The number of check digits</param>
            <returns>True for a valid value</returns>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CheckDigit.CalculateWeightedCheckDigit(System.String)">
            <summary>Calculate check digit for UPC-A, EAN-13, ITF-14 (or any ITF)</summary>
            <remarks>See https://stackoverflow.com/a/58465929 </remarks>
            <param name="value">The value to check</param>
            <returns>True for a valid value</returns>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ResultQueryBase">
            <summary>Result query base</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ResultQueryBase.#ctor(System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ResultQueryBase"/> class</summary>
            <param name="jobStatus">The status query</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ResultQueryBase.Forecast">
            <summary>The forecast name</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ResultQueryBase.JobStatus">
            <summary>Payrun job status filter</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ResultQueryBase.Tag">
            <summary>The result tag</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ResultQueryBase.Tags">
            <summary>The result tags</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorResultQuery">
            <summary>Collector result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorResultQuery.#ctor(System.String,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorResultQuery"/> class</summary>
            <param name="collectorName">The collector name</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorResultQuery.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorResultQuery"/> class</summary>
            <param name="collectorNames">The collector names</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorResultQuery.Collectors">
            <summary>The collector names</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.WageTypeResultQuery">
            <summary>Wage type result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeResultQuery.#ctor(System.Decimal,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeResultQuery"/> class</summary>
            <param name="wageTypeNumber">The wage type number</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeResultQuery.#ctor(System.Collections.Generic.IEnumerable{System.Decimal},System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeResultQuery"/> class</summary>
            <param name="wageTypeNumbers">The wage type numbers</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeResultQuery.WageTypes">
            <summary>The wage type numbers</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CycleResultQuery">
            <summary>Cycle result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CycleResultQuery.#ctor(System.Int32,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CycleResultQuery"/> class</summary>
            <param name="cycleCount">The cycle count</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CycleResultQuery.CycleCount">
            <summary>The cycle count</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorCycleResultQuery">
            <summary>Collector cycle result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorCycleResultQuery.#ctor(System.String,System.Int32,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorCycleResultQuery"/> class</summary>
            <param name="collectorName">The collector name</param>
            <param name="cycleCount">The cycle count</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorCycleResultQuery.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorCycleResultQuery"/> class</summary>
            <param name="collectorNames">The collector names</param>
            <param name="cycleCount">The cycle count</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorCycleResultQuery.Collectors">
            <summary>The collector names</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.WageTypeCycleResultQuery">
            <summary>Wage type cycle result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeCycleResultQuery.#ctor(System.Decimal,System.Int32,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeCycleResultQuery"/> class</summary>
            <param name="wageTypeNumber">The wage type number</param>
            <param name="cycleCount">The cycle count</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeCycleResultQuery.#ctor(System.Collections.Generic.IEnumerable{System.Decimal},System.Int32,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeCycleResultQuery"/> class</summary>
            <param name="wageTypeNumbers">The wage type numbers</param>
            <param name="cycleCount">The cycle count</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeCycleResultQuery.WageTypes">
            <summary>The wage type numbers</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.PeriodResultQuery">
            <summary>Period result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.PeriodResultQuery.#ctor(System.Int32,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.PeriodResultQuery"/> class</summary>
            <param name="periodCount">The period count</param>
            <param name="jobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.PeriodResultQuery.PeriodCount">
            <summary>The period count</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorPeriodResultQuery">
            <summary>Collector period result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorPeriodResultQuery.#ctor(System.String,System.Int32,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorPeriodResultQuery"/> class</summary>
            <param name="collectorName">The collector name</param>
            <param name="periodCount">The period count</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorPeriodResultQuery.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorPeriodResultQuery"/> class</summary>
            <param name="collectorNames">The collector names</param>
            <param name="periodCount">The period count</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorPeriodResultQuery.Collectors">
            <summary>The collector names</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.WageTypePeriodResultQuery">
            <summary>Wage type period result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypePeriodResultQuery.#ctor(System.Decimal,System.Int32,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypePeriodResultQuery"/> class</summary>
            <param name="wageTypeNumber">The wage type number</param>
            <param name="periodCount">The period count</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypePeriodResultQuery.#ctor(System.Collections.Generic.IEnumerable{System.Decimal},System.Int32,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeCycleResultQuery"/> class</summary>
            <param name="wageTypeNumbers">The wage type numbers</param>
            <param name="periodCount">The period count</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypePeriodResultQuery.WageTypes">
            <summary>The wage type numbers</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.RangeResultQuery">
            <summary>Custom date range result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.RangeResultQuery.#ctor(System.DateTime,System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.RangeResultQuery"/> class</summary>
            <param name="start">The range start date</param>
            <param name="end">The range end date</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.RangeResultQuery.Start">
            <summary>The range start date</summary>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.RangeResultQuery.End">
            <summary>The range end date</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorRangeResultQuery">
            <summary>Collector cycle result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorRangeResultQuery.#ctor(System.String,System.DateTime,System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorRangeResultQuery"/> class</summary>
            <param name="collectorName">The collector name</param>
            <param name="start">The range start date</param>
            <param name="end">The range end date</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorRangeResultQuery.#ctor(System.Collections.Generic.IEnumerable{System.String},System.DateTime,System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorRangeResultQuery"/> class</summary>
            <param name="collectorNames">The collector names</param>
            <param name="start">The range start date</param>
            <param name="end">The range end date</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorRangeResultQuery.Collectors">
            <summary>The collector names</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.WageTypeRangeResultQuery">
            <summary>Wage type cycle result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeRangeResultQuery.#ctor(System.Decimal,System.DateTime,System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeRangeResultQuery"/> class</summary>
            <param name="wageTypeNumber">The wage type number</param>
            <param name="start">The range start date</param>
            <param name="end">The range end date</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeRangeResultQuery.#ctor(System.Collections.Generic.IEnumerable{System.Decimal},System.DateTime,System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeCycleResultQuery"/> class</summary>
            <param name="wageTypeNumbers">The wage type numbers</param>
            <param name="start">The range start date</param>
            <param name="end">The range end date</param>
            <param name="jobJobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeRangeResultQuery.WageTypes">
            <summary>The wage type numbers</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.ConsolidatedResultQuery">
            <summary>Consolidated result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.ConsolidatedResultQuery.#ctor(System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.ConsolidatedResultQuery"/> class</summary>
            <param name="periodMoment">Moment within the period</param>
            <param name="jobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.ConsolidatedResultQuery.PeriodMoment">
            <summary>Moment within the period</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.CollectorConsolidatedResultQuery">
            <summary>Collector consolidated result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorConsolidatedResultQuery.#ctor(System.String,System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorConsolidatedResultQuery"/> class</summary>
            <param name="collectorName">The collector name</param>
            <param name="periodMoment">Moment within the period</param>
            <param name="jobStatus">The payrun job status query filter</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.CollectorConsolidatedResultQuery.#ctor(System.Collections.Generic.IEnumerable{System.String},System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.CollectorConsolidatedResultQuery"/> class</summary>
            <param name="collectorNames">The collector names</param>
            <param name="periodMoment">Moment within the period</param>
            <param name="jobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.CollectorConsolidatedResultQuery.Collectors">
            <summary>The collector names</summary>
        </member>
        <member name="T:PayrollEngine.Client.Scripting.WageTypeConsolidatedResultQuery">
            <summary>Wage type consolidated result query</summary>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeConsolidatedResultQuery.#ctor(System.Decimal,System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeConsolidatedResultQuery"/> class</summary>
            <param name="wageTypeNumber">The wage type number</param>
            <param name="periodMoment">Moment within the period</param>
            <param name="jobStatus">The payrun job status query filter</param>
        </member>
        <member name="M:PayrollEngine.Client.Scripting.WageTypeConsolidatedResultQuery.#ctor(System.Collections.Generic.IEnumerable{System.Decimal},System.DateTime,System.Nullable{PayrollEngine.Client.Scripting.PayrunJobStatus})">
            <summary>Initializes a new instance of the <see cref="T:PayrollEngine.Client.Scripting.WageTypeConsolidatedResultQuery"/> class</summary>
            <param name="wageTypeNumbers">The wage type numbers</param>
            <param name="periodMoment">Moment within the period</param>
            <param name="jobStatus">The payrun job status query filter</param>
        </member>
        <member name="P:PayrollEngine.Client.Scripting.WageTypeConsolidatedResultQuery.WageTypes">
            <summary>The wage type numbers</summary>
        </member>
    </members>
</doc>
